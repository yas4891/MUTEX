[004:00] VOID		- void
[004:06] IDENTIFIER		- stdcall
[004:14] IDENTIFIER		- Sleep
[004:20] INTEGER_DATATYPE		- long
[004:25] IDENTIFIER		- ms
[007:00] VOID		- void
[007:05] IDENTIFIER		- Ticker
[007:12] POINTER_DATATYPE		- char *
[007:18] IDENTIFIER		- s
[007:20] INTEGER_DATATYPE		-  int
[007:25] IDENTIFIER		- len
[009:00] VOID		- void
[009:05] IDENTIFIER		- main
[009:11] VOID		- void
[009:17] DECLARATION_ASSIGNMENT		- 
	int i = 1
[010:11] DECLARATION_ASSIGNMENT		- 
	int j = 0
[011:11] INTEGER_DATATYPE		- 
	char
[012:06] ARRAY_ACCESS		- name[80]
[012:15] ASSIGN_OPS		- =
[012:17] STRING_LITERAL		- ""
[012:20] INTEGER_DATATYPE		- 
	char
[013:06] ARRAY_ACCESS		- s1[4]
[013:12] ASSIGN_OPS		- =
[013:14] STRING_LITERAL		- "Max"
[013:20] INTEGER_DATATYPE		- 
	char
[014:06] ARRAY_ACCESS		- s2[1]
[014:12] ASSIGN_OPS		- =
[014:14] STRING_LITERAL		- ""
[016:01] WHILE_LOOP		- while(i = 1)
[018:01] IDENTIFIER		- printf
[018:08] STRING_LITERAL		- "Bitte einen Namen eingeben: \n"
[019:01] IDENTIFIER		- fflush
[019:08] IDENTIFIER		- stdin
[020:01] IDENTIFIER		- scanf
[020:07] STRING_LITERAL		- "%79[^\n]s"
[020:20] IDENTIFIER		- name
[021:01] IF		- if
[021:05] IDENTIFIER		- strlen
[021:12] IDENTIFIER		- name
[021:17] COMPARISONOPERATOR		- ==
[021:20] INTEGER_LITERAL		- 0
[022:02] IDENTIFIER		- printf
[022:09] STRING_LITERAL		- "Fehler\n\n"
[023:01] ELSE		- else
[025:02] FOR_LOOP		- for (j=strlen(name)
[025:22] COMPARISON		- j<=78
[025:28] INCREMENT		- j++
[027:03] IDENTIFIER		- strcat
[027:10] IDENTIFIER		- name
[027:15] STRING_LITERAL		- " "
[035:02] FOR_LOOP		- for(j=0; j <= 100; j++)
[037:03] IDENTIFIER		- Ticker
[037:10] IDENTIFIER		- name
[037:16] IDENTIFIER		- strlen
[037:23] IDENTIFIER		- name
[039:03] IDENTIFIER		- printf
[039:10] STRING_LITERAL		- "%4s\r"
[039:18] IDENTIFIER		- name
[040:03] IDENTIFIER		- Sleep
[040:09] INTEGER_LITERAL		- 50
[056:00] VOID		- void
[056:05] IDENTIFIER		- Ticker
[056:12] POINTER_DATATYPE		- char *
[056:18] IDENTIFIER		- s
[056:20] INTEGER_DATATYPE		-  int
[056:25] IDENTIFIER		- len
[056:30] DECLARATION_ASSIGNMENT		- 

	int j = 0
[058:11] DECLARATION_ASSIGNMENT		- 
	int counter = 0
[060:01] IF		- if
[060:05] IDENTIFIER		- len
[060:09] GREATERTHAN		- >
[060:11] INTEGER_LITERAL		- 1
[061:02] DECLARATION_ASSIGNMENT		- 

		

			int i = 0
[065:13] INTEGER_DATATYPE		- 
			char
[066:08] IDENTIFIER		- t
[068:03] FOR_LOOP		- for(i;i<=77;i++)
[070:04] IDENTIFIER		- t
[070:06] ASSIGN_OPS		- =
[070:08] ARRAY_ACCESS		- s[i]
[071:04] ARRAY_ACCESS		- s[i]
[071:09] ASSIGN_OPS		- =
[071:11] IDENTIFIER		- s
[071:12] LSQUAREBRACKET		- [
[071:13] IDENTIFIER		- i
[071:14] PLUS		- +
[071:15] INTEGER_LITERAL		- 1
[071:16] RSQUAREBRACKET		- ]
[072:04] IDENTIFIER		- s
[072:05] LSQUAREBRACKET		- [
[072:06] IDENTIFIER		- i
[072:07] PLUS		- +
[072:08] INTEGER_LITERAL		- 1
[072:09] RSQUAREBRACKET		- ]
[072:11] ASSIGN_OPS		- =
[072:13] IDENTIFIER		- t
[077:01] ELSE		- else
[077:06] RETURN		- return
[121:01] DIVIDE		- /
[121:02] DIVIDE		- /
