//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 3.4
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// $ANTLR 3.4 D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g 2012-05-06 16:37:43

// The variable 'variable' is assigned but its value is never used.
#pragma warning disable 168, 219
// Unreachable code detected.
#pragma warning disable 162
// Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591





using System.Collections.Generic;
using Antlr.Runtime;
using Antlr.Runtime.Misc;
using ConditionalAttribute = System.Diagnostics.ConditionalAttribute;
/** ANSI C ANTLR v3 grammar



Translated from Jutta Degener's 1995 ANSI C yacc grammar by Terence Parr

July 2006.  The lexical rules were taken from the Java grammar.



Jutta says: "In 1985, Jeff Lee published his Yacc grammar (which

is accompanied by a matching Lex specification) for the April 30, 1985 draft

version of the ANSI C standard.  Tom Stockfisch reposted it to net.sources in

1987; that original, as mentioned in the answer to question 17.25 of the

comp.lang.c FAQ, can be ftp'ed from ftp.uu.net,

   file usenet/net.sources/ansi.c.grammar.Z.

I intend to keep this version as close to the current C Standard grammar as

possible; please let me know if you discover discrepancies. Jutta Degener, 1995"



Generally speaking, you need symbol table info to parse C; typedefs

define types and then IDENTIFIERS are either types or plain IDs.  I'm doing

the min necessary here tracking only type names.  This is a good example

of the use of the global scope (called Symbols).  Every rule that declares its usage

of Symbols pushes a new copy on the stack effectively creating a new

symbol scope.  Also note rule declaration declares a rule scope that

lets any invoked rule see isTypedef boolean.  It's much easier than

passing that info down as parameters.  Very clean.  Rule

direct_declarator can then easily determine whether the IDENTIFIER

should be declared as a type name.



I have only tested this on a single file, though it is 3500 lines.



This grammar requires ANTLR v3.0.1 or higher.



Terence Parr

July 2006



ANTLR C# version - Kunle Odutola, November 2006

*/
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "3.4")]
[System.CLSCompliant(false)]
public partial class CParser : Antlr.Runtime.Parser
{
	internal static readonly string[] tokenNames = new string[] {
		"<invalid>", "<EOR>", "<DOWN>", "<UP>", "CHARACTER_LITERAL", "COMMENT", "DECIMAL_LITERAL", "EscapeSequence", "Exponent", "FLOATING_POINT_LITERAL", "FloatTypeSuffix", "HEX_LITERAL", "HexDigit", "IDENTIFIER", "IntegerTypeSuffix", "LETTER", "LINE_COMMAND", "LINE_COMMENT", "OCTAL_LITERAL", "OctalEscape", "STRING_LITERAL", "UnicodeEscape", "WS", "'!'", "'!='", "'%'", "'%='", "'&&'", "'&'", "'&='", "'('", "')'", "'*'", "'*='", "'+'", "'++'", "'+='", "','", "'-'", "'--'", "'-='", "'->'", "'.'", "'...'", "'/'", "'/='", "':'", "';'", "'<'", "'<<'", "'<<='", "'<='", "'='", "'=='", "'>'", "'>='", "'>>'", "'>>='", "'?'", "'['", "']'", "'^'", "'^='", "'auto'", "'break'", "'case'", "'char'", "'const'", "'continue'", "'default'", "'do'", "'double'", "'else'", "'enum'", "'extern'", "'float'", "'for'", "'goto'", "'if'", "'int'", "'long'", "'register'", "'return'", "'short'", "'signed'", "'sizeof'", "'static'", "'struct'", "'switch'", "'typedef'", "'union'", "'unsigned'", "'void'", "'volatile'", "'while'", "'{'", "'|'", "'|='", "'||'", "'}'", "'~'"
	};
	public const int EOF=-1;
	public const int T__23=23;
	public const int T__24=24;
	public const int T__25=25;
	public const int T__26=26;
	public const int T__27=27;
	public const int T__28=28;
	public const int T__29=29;
	public const int T__30=30;
	public const int T__31=31;
	public const int T__32=32;
	public const int T__33=33;
	public const int T__34=34;
	public const int T__35=35;
	public const int T__36=36;
	public const int T__37=37;
	public const int T__38=38;
	public const int T__39=39;
	public const int T__40=40;
	public const int T__41=41;
	public const int T__42=42;
	public const int T__43=43;
	public const int T__44=44;
	public const int T__45=45;
	public const int T__46=46;
	public const int T__47=47;
	public const int T__48=48;
	public const int T__49=49;
	public const int T__50=50;
	public const int T__51=51;
	public const int T__52=52;
	public const int T__53=53;
	public const int T__54=54;
	public const int T__55=55;
	public const int T__56=56;
	public const int T__57=57;
	public const int T__58=58;
	public const int T__59=59;
	public const int T__60=60;
	public const int T__61=61;
	public const int T__62=62;
	public const int T__63=63;
	public const int T__64=64;
	public const int T__65=65;
	public const int T__66=66;
	public const int T__67=67;
	public const int T__68=68;
	public const int T__69=69;
	public const int T__70=70;
	public const int T__71=71;
	public const int T__72=72;
	public const int T__73=73;
	public const int T__74=74;
	public const int T__75=75;
	public const int T__76=76;
	public const int T__77=77;
	public const int T__78=78;
	public const int T__79=79;
	public const int T__80=80;
	public const int T__81=81;
	public const int T__82=82;
	public const int T__83=83;
	public const int T__84=84;
	public const int T__85=85;
	public const int T__86=86;
	public const int T__87=87;
	public const int T__88=88;
	public const int T__89=89;
	public const int T__90=90;
	public const int T__91=91;
	public const int T__92=92;
	public const int T__93=93;
	public const int T__94=94;
	public const int T__95=95;
	public const int T__96=96;
	public const int T__97=97;
	public const int T__98=98;
	public const int T__99=99;
	public const int T__100=100;
	public const int CHARACTER_LITERAL=4;
	public const int COMMENT=5;
	public const int DECIMAL_LITERAL=6;
	public const int EscapeSequence=7;
	public const int Exponent=8;
	public const int FLOATING_POINT_LITERAL=9;
	public const int FloatTypeSuffix=10;
	public const int HEX_LITERAL=11;
	public const int HexDigit=12;
	public const int IDENTIFIER=13;
	public const int IntegerTypeSuffix=14;
	public const int LETTER=15;
	public const int LINE_COMMAND=16;
	public const int LINE_COMMENT=17;
	public const int OCTAL_LITERAL=18;
	public const int OctalEscape=19;
	public const int STRING_LITERAL=20;
	public const int UnicodeEscape=21;
	public const int WS=22;

	protected sealed partial class Symbols_scope
	{
		public IDictionary types;
	}
	protected virtual void Symbols_scopeInit( Symbols_scope scope ) {}
	protected virtual void Symbols_scopeAfter( Symbols_scope scope ) {}
	protected readonly ListStack<Symbols_scope> Symbols_stack = new ListStack<Symbols_scope>();

	#if ANTLR_DEBUG
		private static readonly bool[] decisionCanBacktrack =
			new bool[]
			{
				false, // invalid decision
				false, true, true, false, false, true, false, false, true, false, false, 
				false, false, false, false, true, false, false, false, false, false, 
				false, false, true, false, true, true, true, true, true, false, false, 
				true, false, false, true, false, false, true, false, false, false, false, 
				false, false, false, true, true, true, false, false, true, false, false, 
				false, false, false, false, false, false, false, false, false, true, 
				false, false, false, false, false, false, false, false, true, false, 
				, , , , false, false, false, , 
			};
	#else
		private static readonly bool[] decisionCanBacktrack = new bool[0];
	#endif
	public CParser(ITokenStream input)
		: this(input, new RecognizerSharedState())
	{
	}
	public CParser(ITokenStream input, RecognizerSharedState state)
		: base(input, state)
	{
		this.state.ruleMemo = new System.Collections.Generic.Dictionary<int, int>[214+1];


		OnCreated();
	}

	public override string[] TokenNames { get { return CParser.tokenNames; } }
	public override string GrammarFileName { get { return "D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g"; } }



		bool isTypeName(string name) 

		{

			for (int i = Symbols_stack.Count-1; i>=0; i--) 

			{

				Symbols_scope scope = (Symbols_scope)Symbols_stack[i];

				if ( scope.types.Contains(name) ) 

				{

					return true;

				}

			}

			return false;

		}



	[Conditional("ANTLR_TRACE")]
	protected virtual void OnCreated() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule(string ruleName, int ruleIndex) {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule(string ruleName, int ruleIndex) {}

	#region Rules

	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_translation_unit() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_translation_unit() {}

	// $ANTLR start "translation_unit"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:131:1: translation_unit : ( external_declaration )+ ;
	[GrammarRule("translation_unit")]
	private void translation_unit()
	{
		EnterRule_translation_unit();
		EnterRule("translation_unit", 1);
		TraceIn("translation_unit", 1);
	    Symbols_stack.Push(new Symbols_scope());Symbols_scopeInit(Symbols_stack.Peek());

	    int translation_unit_StartIndex = input.Index;



	      Symbols_stack.Peek().types =  new Hashtable();


		try { DebugEnterRule(GrammarFileName, "translation_unit");
		DebugLocation(131, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 1)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:141:2: ( ( external_declaration )+ )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:141:4: ( external_declaration )+
			{
			DebugLocation(141, 4);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:141:4: ( external_declaration )+
			int cnt1=0;
			try { DebugEnterSubRule(1);
			while (true)
			{
				int alt1=2;
				try { DebugEnterDecision(1, decisionCanBacktrack[1]);
				int LA1_0 = input.LA(1);

				if ((LA1_0==IDENTIFIER||LA1_0==30||LA1_0==32||LA1_0==63||(LA1_0>=66 && LA1_0<=67)||LA1_0==71||(LA1_0>=73 && LA1_0<=75)||(LA1_0>=79 && LA1_0<=81)||(LA1_0>=83 && LA1_0<=84)||(LA1_0>=86 && LA1_0<=87)||(LA1_0>=89 && LA1_0<=93)))
				{
					alt1 = 1;
				}


				} finally { DebugExitDecision(1); }
				switch (alt1)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:141:4: external_declaration
					{
					DebugLocation(141, 4);
					PushFollow(Follow._external_declaration_in_translation_unit103);
					external_declaration();
					PopFollow();
					if (state.failed) return;

					}
					break;

				default:
					if (cnt1 >= 1)
						goto loop1;

					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee1 = new EarlyExitException( 1, input );
					DebugRecognitionException(eee1);
					throw eee1;
				}
				cnt1++;
			}
			loop1:
				;

			} finally { DebugExitSubRule(1); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("translation_unit", 1);
			LeaveRule("translation_unit", 1);
			LeaveRule_translation_unit();
	        if (state.backtracking > 0) { Memoize(input, 1, translation_unit_StartIndex); }

	        Symbols_scopeAfter(Symbols_stack.Peek());Symbols_stack.Pop();

	    }
	 	DebugLocation(143, 1);
		} finally { DebugExitRule(GrammarFileName, "translation_unit"); }
		return;

	}
	// $ANTLR end "translation_unit"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_external_declaration() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_external_declaration() {}

	// $ANTLR start "external_declaration"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:175:1: external_declaration options {k=1; } : ( ( ( declaration_specifiers )? declarator ( declaration )* '{' )=> function_definition | declaration );
	[GrammarRule("external_declaration")]
	private void external_declaration()
	{
		EnterRule_external_declaration();
		EnterRule("external_declaration", 2);
		TraceIn("external_declaration", 2);
	    int external_declaration_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "external_declaration");
		DebugLocation(175, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 2)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:179:2: ( ( ( declaration_specifiers )? declarator ( declaration )* '{' )=> function_definition | declaration )
			int alt2=2;
			try { DebugEnterDecision(2, decisionCanBacktrack[2]);
			int LA2_0 = input.LA(1);

			if ((LA2_0==63||LA2_0==74||LA2_0==81||LA2_0==86))
			{
				int LA2_1 = input.LA(2);

				if ((EvaluatePredicate(synpred4_C_fragment)))
				{
					alt2 = 1;
				}
				else if ((true))
				{
					alt2 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 2, 1, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA2_0==92))
			{
				int LA2_2 = input.LA(2);

				if ((EvaluatePredicate(synpred4_C_fragment)))
				{
					alt2 = 1;
				}
				else if ((true))
				{
					alt2 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 2, 2, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA2_0==66))
			{
				int LA2_3 = input.LA(2);

				if ((EvaluatePredicate(synpred4_C_fragment)))
				{
					alt2 = 1;
				}
				else if ((true))
				{
					alt2 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 2, 3, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA2_0==83))
			{
				int LA2_4 = input.LA(2);

				if ((EvaluatePredicate(synpred4_C_fragment)))
				{
					alt2 = 1;
				}
				else if ((true))
				{
					alt2 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 2, 4, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA2_0==79))
			{
				int LA2_5 = input.LA(2);

				if ((EvaluatePredicate(synpred4_C_fragment)))
				{
					alt2 = 1;
				}
				else if ((true))
				{
					alt2 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 2, 5, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA2_0==80))
			{
				int LA2_6 = input.LA(2);

				if ((EvaluatePredicate(synpred4_C_fragment)))
				{
					alt2 = 1;
				}
				else if ((true))
				{
					alt2 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 2, 6, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA2_0==75))
			{
				int LA2_7 = input.LA(2);

				if ((EvaluatePredicate(synpred4_C_fragment)))
				{
					alt2 = 1;
				}
				else if ((true))
				{
					alt2 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 2, 7, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA2_0==71))
			{
				int LA2_8 = input.LA(2);

				if ((EvaluatePredicate(synpred4_C_fragment)))
				{
					alt2 = 1;
				}
				else if ((true))
				{
					alt2 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 2, 8, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA2_0==84))
			{
				int LA2_9 = input.LA(2);

				if ((EvaluatePredicate(synpred4_C_fragment)))
				{
					alt2 = 1;
				}
				else if ((true))
				{
					alt2 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 2, 9, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA2_0==91))
			{
				int LA2_10 = input.LA(2);

				if ((EvaluatePredicate(synpred4_C_fragment)))
				{
					alt2 = 1;
				}
				else if ((true))
				{
					alt2 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 2, 10, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA2_0==87||LA2_0==90))
			{
				int LA2_11 = input.LA(2);

				if ((EvaluatePredicate(synpred4_C_fragment)))
				{
					alt2 = 1;
				}
				else if ((true))
				{
					alt2 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 2, 11, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA2_0==73))
			{
				int LA2_12 = input.LA(2);

				if ((EvaluatePredicate(synpred4_C_fragment)))
				{
					alt2 = 1;
				}
				else if ((true))
				{
					alt2 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 2, 12, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA2_0==IDENTIFIER))
			{
				int LA2_13 = input.LA(2);

				if ((EvaluatePredicate(synpred4_C_fragment)))
				{
					alt2 = 1;
				}
				else if (((isTypeName(input.LT(1).Text))))
				{
					alt2 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 2, 13, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA2_0==67||LA2_0==93))
			{
				int LA2_14 = input.LA(2);

				if ((EvaluatePredicate(synpred4_C_fragment)))
				{
					alt2 = 1;
				}
				else if ((true))
				{
					alt2 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 2, 14, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA2_0==32) && (EvaluatePredicate(synpred4_C_fragment)))
			{
				alt2 = 1;
			}
			else if ((LA2_0==30) && (EvaluatePredicate(synpred4_C_fragment)))
			{
				alt2 = 1;
			}
			else if ((LA2_0==89))
			{
				alt2 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae = new NoViableAltException("", 2, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(2); }
			switch (alt2)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:179:4: ( ( declaration_specifiers )? declarator ( declaration )* '{' )=> function_definition
				{
				DebugLocation(179, 62);
				PushFollow(Follow._function_definition_in_external_declaration145);
				function_definition();
				PopFollow();
				if (state.failed) return;

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:181:4: declaration
				{
				DebugLocation(181, 4);
				PushFollow(Follow._declaration_in_external_declaration151);
				declaration();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("external_declaration", 2);
			LeaveRule("external_declaration", 2);
			LeaveRule_external_declaration();
	        if (state.backtracking > 0) { Memoize(input, 2, external_declaration_StartIndex); }

	    }
	 	DebugLocation(183, 1);
		} finally { DebugExitRule(GrammarFileName, "external_declaration"); }
		return;

	}
	// $ANTLR end "external_declaration"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_function_definition() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_function_definition() {}

	// $ANTLR start "function_definition"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:187:1: function_definition : ( declaration_specifiers )? declarator ( ( declaration )+ compound_statement | compound_statement ) ;
	[GrammarRule("function_definition")]
	private void function_definition()
	{
		EnterRule_function_definition();
		EnterRule("function_definition", 3);
		TraceIn("function_definition", 3);
	    Symbols_stack.Push(new Symbols_scope());Symbols_scopeInit(Symbols_stack.Peek());

	    int function_definition_StartIndex = input.Index;



	      Symbols_stack.Peek().types =  new Hashtable();


		try { DebugEnterRule(GrammarFileName, "function_definition");
		DebugLocation(187, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 3)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:197:2: ( ( declaration_specifiers )? declarator ( ( declaration )+ compound_statement | compound_statement ) )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:197:4: ( declaration_specifiers )? declarator ( ( declaration )+ compound_statement | compound_statement )
			{
			DebugLocation(197, 4);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:197:4: ( declaration_specifiers )?
			int alt3=2;
			try { DebugEnterSubRule(3);
			try { DebugEnterDecision(3, decisionCanBacktrack[3]);
			int LA3_0 = input.LA(1);

			if ((LA3_0==63||(LA3_0>=66 && LA3_0<=67)||LA3_0==71||(LA3_0>=73 && LA3_0<=75)||(LA3_0>=79 && LA3_0<=81)||(LA3_0>=83 && LA3_0<=84)||(LA3_0>=86 && LA3_0<=87)||(LA3_0>=90 && LA3_0<=93)))
			{
				alt3 = 1;
			}
			else if ((LA3_0==IDENTIFIER))
			{
				switch (input.LA(2))
				{
				case 32:
					{
					alt3 = 1;
					}
					break;
				case IDENTIFIER:
					{
					int LA3_18 = input.LA(3);

					if ((((EvaluatePredicate(synpred5_C_fragment)&&EvaluatePredicate(synpred5_C_fragment))&&(isTypeName(input.LT(1).Text)))))
					{
						alt3 = 1;
					}
					}
					break;
				case 30:
					{
					int LA3_19 = input.LA(3);

					if ((((EvaluatePredicate(synpred5_C_fragment)&&EvaluatePredicate(synpred5_C_fragment))&&(isTypeName(input.LT(1).Text)))))
					{
						alt3 = 1;
					}
					}
					break;
				case 63:
				case 74:
				case 81:
				case 86:
					{
					int LA3_20 = input.LA(3);

					if ((((EvaluatePredicate(synpred5_C_fragment)&&EvaluatePredicate(synpred5_C_fragment))&&(isTypeName(input.LT(1).Text)))))
					{
						alt3 = 1;
					}
					}
					break;
				case 92:
					{
					int LA3_21 = input.LA(3);

					if ((((EvaluatePredicate(synpred5_C_fragment)&&EvaluatePredicate(synpred5_C_fragment))&&(isTypeName(input.LT(1).Text)))))
					{
						alt3 = 1;
					}
					}
					break;
				case 66:
					{
					int LA3_22 = input.LA(3);

					if ((((EvaluatePredicate(synpred5_C_fragment)&&EvaluatePredicate(synpred5_C_fragment))&&(isTypeName(input.LT(1).Text)))))
					{
						alt3 = 1;
					}
					}
					break;
				case 83:
					{
					int LA3_23 = input.LA(3);

					if ((((EvaluatePredicate(synpred5_C_fragment)&&EvaluatePredicate(synpred5_C_fragment))&&(isTypeName(input.LT(1).Text)))))
					{
						alt3 = 1;
					}
					}
					break;
				case 79:
					{
					int LA3_24 = input.LA(3);

					if ((((EvaluatePredicate(synpred5_C_fragment)&&EvaluatePredicate(synpred5_C_fragment))&&(isTypeName(input.LT(1).Text)))))
					{
						alt3 = 1;
					}
					}
					break;
				case 80:
					{
					int LA3_25 = input.LA(3);

					if ((((EvaluatePredicate(synpred5_C_fragment)&&EvaluatePredicate(synpred5_C_fragment))&&(isTypeName(input.LT(1).Text)))))
					{
						alt3 = 1;
					}
					}
					break;
				case 75:
					{
					int LA3_26 = input.LA(3);

					if ((((EvaluatePredicate(synpred5_C_fragment)&&EvaluatePredicate(synpred5_C_fragment))&&(isTypeName(input.LT(1).Text)))))
					{
						alt3 = 1;
					}
					}
					break;
				case 71:
					{
					int LA3_27 = input.LA(3);

					if ((((EvaluatePredicate(synpred5_C_fragment)&&EvaluatePredicate(synpred5_C_fragment))&&(isTypeName(input.LT(1).Text)))))
					{
						alt3 = 1;
					}
					}
					break;
				case 84:
					{
					int LA3_28 = input.LA(3);

					if ((((EvaluatePredicate(synpred5_C_fragment)&&EvaluatePredicate(synpred5_C_fragment))&&(isTypeName(input.LT(1).Text)))))
					{
						alt3 = 1;
					}
					}
					break;
				case 91:
					{
					int LA3_29 = input.LA(3);

					if ((((EvaluatePredicate(synpred5_C_fragment)&&EvaluatePredicate(synpred5_C_fragment))&&(isTypeName(input.LT(1).Text)))))
					{
						alt3 = 1;
					}
					}
					break;
				case 87:
				case 90:
					{
					int LA3_30 = input.LA(3);

					if ((((EvaluatePredicate(synpred5_C_fragment)&&EvaluatePredicate(synpred5_C_fragment))&&(isTypeName(input.LT(1).Text)))))
					{
						alt3 = 1;
					}
					}
					break;
				case 73:
					{
					int LA3_31 = input.LA(3);

					if ((((EvaluatePredicate(synpred5_C_fragment)&&EvaluatePredicate(synpred5_C_fragment))&&(isTypeName(input.LT(1).Text)))))
					{
						alt3 = 1;
					}
					}
					break;
				case 67:
				case 93:
					{
					int LA3_32 = input.LA(3);

					if ((((EvaluatePredicate(synpred5_C_fragment)&&EvaluatePredicate(synpred5_C_fragment))&&(isTypeName(input.LT(1).Text)))))
					{
						alt3 = 1;
					}
					}
					break;
				}

			}
			} finally { DebugExitDecision(3); }
			switch (alt3)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:197:4: declaration_specifiers
				{
				DebugLocation(197, 4);
				PushFollow(Follow._declaration_specifiers_in_function_definition179);
				declaration_specifiers();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(3); }

			DebugLocation(197, 28);
			PushFollow(Follow._declarator_in_function_definition182);
			declarator();
			PopFollow();
			if (state.failed) return;
			DebugLocation(199, 3);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:199:3: ( ( declaration )+ compound_statement | compound_statement )
			int alt5=2;
			try { DebugEnterSubRule(5);
			try { DebugEnterDecision(5, decisionCanBacktrack[5]);
			int LA5_0 = input.LA(1);

			if ((LA5_0==IDENTIFIER||LA5_0==63||(LA5_0>=66 && LA5_0<=67)||LA5_0==71||(LA5_0>=73 && LA5_0<=75)||(LA5_0>=79 && LA5_0<=81)||(LA5_0>=83 && LA5_0<=84)||(LA5_0>=86 && LA5_0<=87)||(LA5_0>=89 && LA5_0<=93)))
			{
				alt5 = 1;
			}
			else if ((LA5_0==95))
			{
				alt5 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae = new NoViableAltException("", 5, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(5); }
			switch (alt5)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:199:5: ( declaration )+ compound_statement
				{
				DebugLocation(199, 5);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:199:5: ( declaration )+
				int cnt4=0;
				try { DebugEnterSubRule(4);
				while (true)
				{
					int alt4=2;
					try { DebugEnterDecision(4, decisionCanBacktrack[4]);
					int LA4_0 = input.LA(1);

					if ((LA4_0==IDENTIFIER||LA4_0==63||(LA4_0>=66 && LA4_0<=67)||LA4_0==71||(LA4_0>=73 && LA4_0<=75)||(LA4_0>=79 && LA4_0<=81)||(LA4_0>=83 && LA4_0<=84)||(LA4_0>=86 && LA4_0<=87)||(LA4_0>=89 && LA4_0<=93)))
					{
						alt4 = 1;
					}


					} finally { DebugExitDecision(4); }
					switch (alt4)
					{
					case 1:
						DebugEnterAlt(1);
						// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:199:5: declaration
						{
						DebugLocation(199, 5);
						PushFollow(Follow._declaration_in_function_definition189);
						declaration();
						PopFollow();
						if (state.failed) return;

						}
						break;

					default:
						if (cnt4 >= 1)
							goto loop4;

						if (state.backtracking>0) {state.failed=true; return;}
						EarlyExitException eee4 = new EarlyExitException( 4, input );
						DebugRecognitionException(eee4);
						throw eee4;
					}
					cnt4++;
				}
				loop4:
					;

				} finally { DebugExitSubRule(4); }

				DebugLocation(199, 18);
				PushFollow(Follow._compound_statement_in_function_definition192);
				compound_statement();
				PopFollow();
				if (state.failed) return;

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:201:5: compound_statement
				{
				DebugLocation(201, 5);
				PushFollow(Follow._compound_statement_in_function_definition200);
				compound_statement();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(5); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("function_definition", 3);
			LeaveRule("function_definition", 3);
			LeaveRule_function_definition();
	        if (state.backtracking > 0) { Memoize(input, 3, function_definition_StartIndex); }

	        Symbols_scopeAfter(Symbols_stack.Peek());Symbols_stack.Pop();

	    }
	 	DebugLocation(205, 1);
		} finally { DebugExitRule(GrammarFileName, "function_definition"); }
		return;

	}
	// $ANTLR end "function_definition"

	protected sealed partial class declaration_scope
	{
		public bool isTypedef;
	}
	protected virtual void declaration_scopeInit( declaration_scope scope ) {}
	protected virtual void declaration_scopeAfter( declaration_scope scope ) {}
	protected readonly ListStack<declaration_scope> declaration_stack = new ListStack<declaration_scope>();


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_declaration() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_declaration() {}

	// $ANTLR start "declaration"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:209:1: declaration : ( 'typedef' ( declaration_specifiers )? init_declarator_list ';' | declaration_specifiers ( init_declarator_list )? ';' );
	[GrammarRule("declaration")]
	private void declaration()
	{
		EnterRule_declaration();
		EnterRule("declaration", 4);
		TraceIn("declaration", 4);
	    declaration_stack.Push(new declaration_scope());declaration_scopeInit(declaration_stack.Peek());
	    int declaration_StartIndex = input.Index;



	      declaration_stack.Peek().isTypedef =  false;


		try { DebugEnterRule(GrammarFileName, "declaration");
		DebugLocation(209, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 4)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:223:2: ( 'typedef' ( declaration_specifiers )? init_declarator_list ';' | declaration_specifiers ( init_declarator_list )? ';' )
			int alt8=2;
			try { DebugEnterDecision(8, decisionCanBacktrack[8]);
			int LA8_0 = input.LA(1);

			if ((LA8_0==89))
			{
				alt8 = 1;
			}
			else if ((LA8_0==IDENTIFIER||LA8_0==63||(LA8_0>=66 && LA8_0<=67)||LA8_0==71||(LA8_0>=73 && LA8_0<=75)||(LA8_0>=79 && LA8_0<=81)||(LA8_0>=83 && LA8_0<=84)||(LA8_0>=86 && LA8_0<=87)||(LA8_0>=90 && LA8_0<=93)))
			{
				alt8 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae = new NoViableAltException("", 8, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(8); }
			switch (alt8)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:223:4: 'typedef' ( declaration_specifiers )? init_declarator_list ';'
				{
				DebugLocation(223, 4);
				Match(input,89,Follow._89_in_declaration235); if (state.failed) return;
				DebugLocation(223, 14);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:223:14: ( declaration_specifiers )?
				int alt6=2;
				try { DebugEnterSubRule(6);
				try { DebugEnterDecision(6, decisionCanBacktrack[6]);
				int LA6_0 = input.LA(1);

				if ((LA6_0==63||(LA6_0>=66 && LA6_0<=67)||LA6_0==71||(LA6_0>=73 && LA6_0<=75)||(LA6_0>=79 && LA6_0<=81)||(LA6_0>=83 && LA6_0<=84)||(LA6_0>=86 && LA6_0<=87)||(LA6_0>=90 && LA6_0<=93)))
				{
					alt6 = 1;
				}
				else if ((LA6_0==IDENTIFIER))
				{
					int LA6_13 = input.LA(2);

					if ((LA6_13==IDENTIFIER||LA6_13==32||LA6_13==63||(LA6_13>=66 && LA6_13<=67)||LA6_13==71||(LA6_13>=73 && LA6_13<=75)||(LA6_13>=79 && LA6_13<=81)||(LA6_13>=83 && LA6_13<=84)||(LA6_13>=86 && LA6_13<=87)||(LA6_13>=90 && LA6_13<=93)))
					{
						alt6 = 1;
					}
					else if ((LA6_13==30))
					{
						int LA6_19 = input.LA(3);

						if (((((isTypeName(input.LT(1).Text))&&(isTypeName(input.LT(1).Text)))&&EvaluatePredicate(synpred8_C_fragment))))
						{
							alt6 = 1;
						}
					}
				}
				} finally { DebugExitDecision(6); }
				switch (alt6)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:223:14: declaration_specifiers
					{
					DebugLocation(223, 14);
					PushFollow(Follow._declaration_specifiers_in_declaration237);
					declaration_specifiers();
					PopFollow();
					if (state.failed) return;

					}
					break;

				}
				} finally { DebugExitSubRule(6); }

				DebugLocation(223, 38);
				if (state.backtracking == 0)
				{
					declaration_stack.Peek().isTypedef = true;
				}
				DebugLocation(225, 4);
				PushFollow(Follow._init_declarator_list_in_declaration246);
				init_declarator_list();
				PopFollow();
				if (state.failed) return;
				DebugLocation(225, 25);
				Match(input,47,Follow._47_in_declaration248); if (state.failed) return;

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:227:4: declaration_specifiers ( init_declarator_list )? ';'
				{
				DebugLocation(227, 4);
				PushFollow(Follow._declaration_specifiers_in_declaration255);
				declaration_specifiers();
				PopFollow();
				if (state.failed) return;
				DebugLocation(227, 27);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:227:27: ( init_declarator_list )?
				int alt7=2;
				try { DebugEnterSubRule(7);
				try { DebugEnterDecision(7, decisionCanBacktrack[7]);
				int LA7_0 = input.LA(1);

				if ((LA7_0==IDENTIFIER||LA7_0==30||LA7_0==32))
				{
					alt7 = 1;
				}
				} finally { DebugExitDecision(7); }
				switch (alt7)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:227:27: init_declarator_list
					{
					DebugLocation(227, 27);
					PushFollow(Follow._init_declarator_list_in_declaration257);
					init_declarator_list();
					PopFollow();
					if (state.failed) return;

					}
					break;

				}
				} finally { DebugExitSubRule(7); }

				DebugLocation(227, 49);
				Match(input,47,Follow._47_in_declaration260); if (state.failed) return;

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("declaration", 4);
			LeaveRule("declaration", 4);
			LeaveRule_declaration();
	        if (state.backtracking > 0) { Memoize(input, 4, declaration_StartIndex); }

	        declaration_scopeAfter(declaration_stack.Peek());declaration_stack.Pop();
	    }
	 	DebugLocation(229, 1);
		} finally { DebugExitRule(GrammarFileName, "declaration"); }
		return;

	}
	// $ANTLR end "declaration"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_declaration_specifiers() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_declaration_specifiers() {}

	// $ANTLR start "declaration_specifiers"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:233:1: declaration_specifiers : ( storage_class_specifier | type_specifier | type_qualifier )+ ;
	[GrammarRule("declaration_specifiers")]
	private void declaration_specifiers()
	{
		EnterRule_declaration_specifiers();
		EnterRule("declaration_specifiers", 5);
		TraceIn("declaration_specifiers", 5);
	    int declaration_specifiers_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "declaration_specifiers");
		DebugLocation(233, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 5)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:235:2: ( ( storage_class_specifier | type_specifier | type_qualifier )+ )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:235:6: ( storage_class_specifier | type_specifier | type_qualifier )+
			{
			DebugLocation(235, 6);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:235:6: ( storage_class_specifier | type_specifier | type_qualifier )+
			int cnt9=0;
			try { DebugEnterSubRule(9);
			while (true)
			{
				int alt9=4;
				try { DebugEnterDecision(9, decisionCanBacktrack[9]);
				switch (input.LA(1))
				{
				case IDENTIFIER:
					{
					int LA9_2 = input.LA(2);

					if (((((isTypeName(input.LT(1).Text))&&(isTypeName(input.LT(1).Text)))&&EvaluatePredicate(synpred12_C_fragment))))
					{
						alt9 = 2;
					}


					}
					break;
				case 63:
				case 74:
				case 81:
				case 86:
					{
					alt9 = 1;
					}
					break;
				case 66:
				case 71:
				case 73:
				case 75:
				case 79:
				case 80:
				case 83:
				case 84:
				case 87:
				case 90:
				case 91:
				case 92:
					{
					alt9 = 2;
					}
					break;
				case 67:
				case 93:
					{
					alt9 = 3;
					}
					break;
				}

				} finally { DebugExitDecision(9); }
				switch (alt9)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:235:10: storage_class_specifier
					{
					DebugLocation(235, 10);
					PushFollow(Follow._storage_class_specifier_in_declaration_specifiers281);
					storage_class_specifier();
					PopFollow();
					if (state.failed) return;

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:237:7: type_specifier
					{
					DebugLocation(237, 7);
					PushFollow(Follow._type_specifier_in_declaration_specifiers290);
					type_specifier();
					PopFollow();
					if (state.failed) return;

					}
					break;
				case 3:
					DebugEnterAlt(3);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:239:13: type_qualifier
					{
					DebugLocation(239, 13);
					PushFollow(Follow._type_qualifier_in_declaration_specifiers305);
					type_qualifier();
					PopFollow();
					if (state.failed) return;

					}
					break;

				default:
					if (cnt9 >= 1)
						goto loop9;

					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee9 = new EarlyExitException( 9, input );
					DebugRecognitionException(eee9);
					throw eee9;
				}
				cnt9++;
			}
			loop9:
				;

			} finally { DebugExitSubRule(9); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("declaration_specifiers", 5);
			LeaveRule("declaration_specifiers", 5);
			LeaveRule_declaration_specifiers();
	        if (state.backtracking > 0) { Memoize(input, 5, declaration_specifiers_StartIndex); }

	    }
	 	DebugLocation(243, 1);
		} finally { DebugExitRule(GrammarFileName, "declaration_specifiers"); }
		return;

	}
	// $ANTLR end "declaration_specifiers"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_init_declarator_list() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_init_declarator_list() {}

	// $ANTLR start "init_declarator_list"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:247:1: init_declarator_list : init_declarator ( ',' init_declarator )* ;
	[GrammarRule("init_declarator_list")]
	private void init_declarator_list()
	{
		EnterRule_init_declarator_list();
		EnterRule("init_declarator_list", 6);
		TraceIn("init_declarator_list", 6);
	    int init_declarator_list_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "init_declarator_list");
		DebugLocation(247, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 6)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:249:2: ( init_declarator ( ',' init_declarator )* )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:249:4: init_declarator ( ',' init_declarator )*
			{
			DebugLocation(249, 4);
			PushFollow(Follow._init_declarator_in_init_declarator_list332);
			init_declarator();
			PopFollow();
			if (state.failed) return;
			DebugLocation(249, 20);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:249:20: ( ',' init_declarator )*
			try { DebugEnterSubRule(10);
			while (true)
			{
				int alt10=2;
				try { DebugEnterDecision(10, decisionCanBacktrack[10]);
				int LA10_0 = input.LA(1);

				if ((LA10_0==37))
				{
					alt10 = 1;
				}


				} finally { DebugExitDecision(10); }
				switch ( alt10 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:249:21: ',' init_declarator
					{
					DebugLocation(249, 21);
					Match(input,37,Follow._37_in_init_declarator_list335); if (state.failed) return;
					DebugLocation(249, 25);
					PushFollow(Follow._init_declarator_in_init_declarator_list337);
					init_declarator();
					PopFollow();
					if (state.failed) return;

					}
					break;

				default:
					goto loop10;
				}
			}

			loop10:
				;

			} finally { DebugExitSubRule(10); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("init_declarator_list", 6);
			LeaveRule("init_declarator_list", 6);
			LeaveRule_init_declarator_list();
	        if (state.backtracking > 0) { Memoize(input, 6, init_declarator_list_StartIndex); }

	    }
	 	DebugLocation(251, 1);
		} finally { DebugExitRule(GrammarFileName, "init_declarator_list"); }
		return;

	}
	// $ANTLR end "init_declarator_list"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_init_declarator() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_init_declarator() {}

	// $ANTLR start "init_declarator"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:255:1: init_declarator : declarator ( '=' initializer )? ;
	[GrammarRule("init_declarator")]
	private void init_declarator()
	{
		EnterRule_init_declarator();
		EnterRule("init_declarator", 7);
		TraceIn("init_declarator", 7);
	    int init_declarator_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "init_declarator");
		DebugLocation(255, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 7)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:257:2: ( declarator ( '=' initializer )? )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:257:4: declarator ( '=' initializer )?
			{
			DebugLocation(257, 4);
			PushFollow(Follow._declarator_in_init_declarator354);
			declarator();
			PopFollow();
			if (state.failed) return;
			DebugLocation(257, 15);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:257:15: ( '=' initializer )?
			int alt11=2;
			try { DebugEnterSubRule(11);
			try { DebugEnterDecision(11, decisionCanBacktrack[11]);
			int LA11_0 = input.LA(1);

			if ((LA11_0==52))
			{
				alt11 = 1;
			}
			} finally { DebugExitDecision(11); }
			switch (alt11)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:257:16: '=' initializer
				{
				DebugLocation(257, 16);
				Match(input,52,Follow._52_in_init_declarator357); if (state.failed) return;
				DebugLocation(257, 20);
				PushFollow(Follow._initializer_in_init_declarator359);
				initializer();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(11); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("init_declarator", 7);
			LeaveRule("init_declarator", 7);
			LeaveRule_init_declarator();
	        if (state.backtracking > 0) { Memoize(input, 7, init_declarator_StartIndex); }

	    }
	 	DebugLocation(259, 1);
		} finally { DebugExitRule(GrammarFileName, "init_declarator"); }
		return;

	}
	// $ANTLR end "init_declarator"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_storage_class_specifier() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_storage_class_specifier() {}

	// $ANTLR start "storage_class_specifier"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:263:1: storage_class_specifier : ( 'extern' | 'static' | 'auto' | 'register' );
	[GrammarRule("storage_class_specifier")]
	private void storage_class_specifier()
	{
		EnterRule_storage_class_specifier();
		EnterRule("storage_class_specifier", 8);
		TraceIn("storage_class_specifier", 8);
	    int storage_class_specifier_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "storage_class_specifier");
		DebugLocation(263, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 8)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:265:2: ( 'extern' | 'static' | 'auto' | 'register' )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:
			{
			DebugLocation(265, 2);
			if (input.LA(1)==63||input.LA(1)==74||input.LA(1)==81||input.LA(1)==86)
			{
				input.Consume();
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("storage_class_specifier", 8);
			LeaveRule("storage_class_specifier", 8);
			LeaveRule_storage_class_specifier();
	        if (state.backtracking > 0) { Memoize(input, 8, storage_class_specifier_StartIndex); }

	    }
	 	DebugLocation(273, 1);
		} finally { DebugExitRule(GrammarFileName, "storage_class_specifier"); }
		return;

	}
	// $ANTLR end "storage_class_specifier"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_type_specifier() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_type_specifier() {}

	// $ANTLR start "type_specifier"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:277:1: type_specifier : ( 'void' | 'char' | 'short' | 'int' | 'long' | 'float' | 'double' | 'signed' | 'unsigned' | struct_or_union_specifier | enum_specifier | type_id );
	[GrammarRule("type_specifier")]
	private void type_specifier()
	{
		EnterRule_type_specifier();
		EnterRule("type_specifier", 9);
		TraceIn("type_specifier", 9);
	    int type_specifier_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "type_specifier");
		DebugLocation(277, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 9)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:279:2: ( 'void' | 'char' | 'short' | 'int' | 'long' | 'float' | 'double' | 'signed' | 'unsigned' | struct_or_union_specifier | enum_specifier | type_id )
			int alt12=12;
			try { DebugEnterDecision(12, decisionCanBacktrack[12]);
			switch (input.LA(1))
			{
			case 92:
				{
				alt12 = 1;
				}
				break;
			case 66:
				{
				alt12 = 2;
				}
				break;
			case 83:
				{
				alt12 = 3;
				}
				break;
			case 79:
				{
				alt12 = 4;
				}
				break;
			case 80:
				{
				alt12 = 5;
				}
				break;
			case 75:
				{
				alt12 = 6;
				}
				break;
			case 71:
				{
				alt12 = 7;
				}
				break;
			case 84:
				{
				alt12 = 8;
				}
				break;
			case 91:
				{
				alt12 = 9;
				}
				break;
			case 87:
			case 90:
				{
				alt12 = 10;
				}
				break;
			case 73:
				{
				alt12 = 11;
				}
				break;
			case IDENTIFIER:
				{
				alt12 = 12;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 12, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(12); }
			switch (alt12)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:279:4: 'void'
				{
				DebugLocation(279, 4);
				Match(input,92,Follow._92_in_type_specifier409); if (state.failed) return;

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:281:4: 'char'
				{
				DebugLocation(281, 4);
				Match(input,66,Follow._66_in_type_specifier415); if (state.failed) return;

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:283:4: 'short'
				{
				DebugLocation(283, 4);
				Match(input,83,Follow._83_in_type_specifier421); if (state.failed) return;

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:285:4: 'int'
				{
				DebugLocation(285, 4);
				Match(input,79,Follow._79_in_type_specifier427); if (state.failed) return;

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:287:4: 'long'
				{
				DebugLocation(287, 4);
				Match(input,80,Follow._80_in_type_specifier433); if (state.failed) return;

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:289:4: 'float'
				{
				DebugLocation(289, 4);
				Match(input,75,Follow._75_in_type_specifier439); if (state.failed) return;

				}
				break;
			case 7:
				DebugEnterAlt(7);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:291:4: 'double'
				{
				DebugLocation(291, 4);
				Match(input,71,Follow._71_in_type_specifier445); if (state.failed) return;

				}
				break;
			case 8:
				DebugEnterAlt(8);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:293:4: 'signed'
				{
				DebugLocation(293, 4);
				Match(input,84,Follow._84_in_type_specifier451); if (state.failed) return;

				}
				break;
			case 9:
				DebugEnterAlt(9);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:295:4: 'unsigned'
				{
				DebugLocation(295, 4);
				Match(input,91,Follow._91_in_type_specifier457); if (state.failed) return;

				}
				break;
			case 10:
				DebugEnterAlt(10);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:297:4: struct_or_union_specifier
				{
				DebugLocation(297, 4);
				PushFollow(Follow._struct_or_union_specifier_in_type_specifier463);
				struct_or_union_specifier();
				PopFollow();
				if (state.failed) return;

				}
				break;
			case 11:
				DebugEnterAlt(11);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:299:4: enum_specifier
				{
				DebugLocation(299, 4);
				PushFollow(Follow._enum_specifier_in_type_specifier469);
				enum_specifier();
				PopFollow();
				if (state.failed) return;

				}
				break;
			case 12:
				DebugEnterAlt(12);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:301:4: type_id
				{
				DebugLocation(301, 4);
				PushFollow(Follow._type_id_in_type_specifier475);
				type_id();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("type_specifier", 9);
			LeaveRule("type_specifier", 9);
			LeaveRule_type_specifier();
	        if (state.backtracking > 0) { Memoize(input, 9, type_specifier_StartIndex); }

	    }
	 	DebugLocation(303, 1);
		} finally { DebugExitRule(GrammarFileName, "type_specifier"); }
		return;

	}
	// $ANTLR end "type_specifier"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_type_id() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_type_id() {}

	// $ANTLR start "type_id"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:307:1: type_id :{...}? IDENTIFIER ;
	[GrammarRule("type_id")]
	private void type_id()
	{
		EnterRule_type_id();
		EnterRule("type_id", 10);
		TraceIn("type_id", 10);
	    int type_id_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "type_id");
		DebugLocation(307, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 10)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:309:5: ({...}? IDENTIFIER )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:309:9: {...}? IDENTIFIER
			{
			DebugLocation(309, 9);
			if (!((isTypeName(input.LT(1).Text))))
			{
				if (state.backtracking>0) {state.failed=true; return;}
				throw new FailedPredicateException(input, "type_id", "isTypeName(input.LT(1).Text)");
			}
			DebugLocation(309, 41);
			Match(input,IDENTIFIER,Follow._IDENTIFIER_in_type_id497); if (state.failed) return;

			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("type_id", 10);
			LeaveRule("type_id", 10);
			LeaveRule_type_id();
	        if (state.backtracking > 0) { Memoize(input, 10, type_id_StartIndex); }

	    }
	 	DebugLocation(313, 4);
		} finally { DebugExitRule(GrammarFileName, "type_id"); }
		return;

	}
	// $ANTLR end "type_id"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_struct_or_union_specifier() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_struct_or_union_specifier() {}

	// $ANTLR start "struct_or_union_specifier"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:317:1: struct_or_union_specifier options {k=3; } : ( struct_or_union ( IDENTIFIER )? '{' struct_declaration_list '}' | struct_or_union IDENTIFIER );
	[GrammarRule("struct_or_union_specifier")]
	private void struct_or_union_specifier()
	{
		EnterRule_struct_or_union_specifier();
		EnterRule("struct_or_union_specifier", 11);
		TraceIn("struct_or_union_specifier", 11);
	    Symbols_stack.Push(new Symbols_scope());Symbols_scopeInit(Symbols_stack.Peek());

	    int struct_or_union_specifier_StartIndex = input.Index;



	      Symbols_stack.Peek().types =  new Hashtable();


		try { DebugEnterRule(GrammarFileName, "struct_or_union_specifier");
		DebugLocation(317, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 11)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:329:2: ( struct_or_union ( IDENTIFIER )? '{' struct_declaration_list '}' | struct_or_union IDENTIFIER )
			int alt14=2;
			try { DebugEnterDecision(14, decisionCanBacktrack[14]);
			int LA14_0 = input.LA(1);

			if ((LA14_0==87||LA14_0==90))
			{
				int LA14_1 = input.LA(2);

				if ((LA14_1==IDENTIFIER))
				{
					int LA14_2 = input.LA(3);

					if ((LA14_2==95))
					{
						alt14 = 1;
					}
					else if ((LA14_2==EOF||LA14_2==IDENTIFIER||(LA14_2>=30 && LA14_2<=32)||LA14_2==37||(LA14_2>=46 && LA14_2<=47)||LA14_2==59||LA14_2==63||(LA14_2>=66 && LA14_2<=67)||LA14_2==71||(LA14_2>=73 && LA14_2<=75)||(LA14_2>=79 && LA14_2<=81)||(LA14_2>=83 && LA14_2<=84)||(LA14_2>=86 && LA14_2<=87)||(LA14_2>=90 && LA14_2<=93)))
					{
						alt14 = 2;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae = new NoViableAltException("", 14, 2, input);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else if ((LA14_1==95))
				{
					alt14 = 1;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 14, 1, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae = new NoViableAltException("", 14, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(14); }
			switch (alt14)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:329:4: struct_or_union ( IDENTIFIER )? '{' struct_declaration_list '}'
				{
				DebugLocation(329, 4);
				PushFollow(Follow._struct_or_union_in_struct_or_union_specifier538);
				struct_or_union();
				PopFollow();
				if (state.failed) return;
				DebugLocation(329, 20);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:329:20: ( IDENTIFIER )?
				int alt13=2;
				try { DebugEnterSubRule(13);
				try { DebugEnterDecision(13, decisionCanBacktrack[13]);
				int LA13_0 = input.LA(1);

				if ((LA13_0==IDENTIFIER))
				{
					alt13 = 1;
				}
				} finally { DebugExitDecision(13); }
				switch (alt13)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:329:20: IDENTIFIER
					{
					DebugLocation(329, 20);
					Match(input,IDENTIFIER,Follow._IDENTIFIER_in_struct_or_union_specifier540); if (state.failed) return;

					}
					break;

				}
				} finally { DebugExitSubRule(13); }

				DebugLocation(329, 32);
				Match(input,95,Follow._95_in_struct_or_union_specifier543); if (state.failed) return;
				DebugLocation(329, 36);
				PushFollow(Follow._struct_declaration_list_in_struct_or_union_specifier545);
				struct_declaration_list();
				PopFollow();
				if (state.failed) return;
				DebugLocation(329, 60);
				Match(input,99,Follow._99_in_struct_or_union_specifier547); if (state.failed) return;

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:331:4: struct_or_union IDENTIFIER
				{
				DebugLocation(331, 4);
				PushFollow(Follow._struct_or_union_in_struct_or_union_specifier553);
				struct_or_union();
				PopFollow();
				if (state.failed) return;
				DebugLocation(331, 20);
				Match(input,IDENTIFIER,Follow._IDENTIFIER_in_struct_or_union_specifier555); if (state.failed) return;

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("struct_or_union_specifier", 11);
			LeaveRule("struct_or_union_specifier", 11);
			LeaveRule_struct_or_union_specifier();
	        if (state.backtracking > 0) { Memoize(input, 11, struct_or_union_specifier_StartIndex); }

	        Symbols_scopeAfter(Symbols_stack.Peek());Symbols_stack.Pop();

	    }
	 	DebugLocation(333, 1);
		} finally { DebugExitRule(GrammarFileName, "struct_or_union_specifier"); }
		return;

	}
	// $ANTLR end "struct_or_union_specifier"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_struct_or_union() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_struct_or_union() {}

	// $ANTLR start "struct_or_union"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:337:1: struct_or_union : ( 'struct' | 'union' );
	[GrammarRule("struct_or_union")]
	private void struct_or_union()
	{
		EnterRule_struct_or_union();
		EnterRule("struct_or_union", 12);
		TraceIn("struct_or_union", 12);
	    int struct_or_union_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "struct_or_union");
		DebugLocation(337, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 12)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:339:2: ( 'struct' | 'union' )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:
			{
			DebugLocation(339, 2);
			if (input.LA(1)==87||input.LA(1)==90)
			{
				input.Consume();
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("struct_or_union", 12);
			LeaveRule("struct_or_union", 12);
			LeaveRule_struct_or_union();
	        if (state.backtracking > 0) { Memoize(input, 12, struct_or_union_StartIndex); }

	    }
	 	DebugLocation(343, 1);
		} finally { DebugExitRule(GrammarFileName, "struct_or_union"); }
		return;

	}
	// $ANTLR end "struct_or_union"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_struct_declaration_list() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_struct_declaration_list() {}

	// $ANTLR start "struct_declaration_list"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:347:1: struct_declaration_list : ( struct_declaration )+ ;
	[GrammarRule("struct_declaration_list")]
	private void struct_declaration_list()
	{
		EnterRule_struct_declaration_list();
		EnterRule("struct_declaration_list", 13);
		TraceIn("struct_declaration_list", 13);
	    int struct_declaration_list_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "struct_declaration_list");
		DebugLocation(347, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 13)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:349:2: ( ( struct_declaration )+ )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:349:4: ( struct_declaration )+
			{
			DebugLocation(349, 4);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:349:4: ( struct_declaration )+
			int cnt15=0;
			try { DebugEnterSubRule(15);
			while (true)
			{
				int alt15=2;
				try { DebugEnterDecision(15, decisionCanBacktrack[15]);
				int LA15_0 = input.LA(1);

				if ((LA15_0==IDENTIFIER||(LA15_0>=66 && LA15_0<=67)||LA15_0==71||LA15_0==73||LA15_0==75||(LA15_0>=79 && LA15_0<=80)||(LA15_0>=83 && LA15_0<=84)||LA15_0==87||(LA15_0>=90 && LA15_0<=93)))
				{
					alt15 = 1;
				}


				} finally { DebugExitDecision(15); }
				switch (alt15)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:349:4: struct_declaration
					{
					DebugLocation(349, 4);
					PushFollow(Follow._struct_declaration_in_struct_declaration_list591);
					struct_declaration();
					PopFollow();
					if (state.failed) return;

					}
					break;

				default:
					if (cnt15 >= 1)
						goto loop15;

					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee15 = new EarlyExitException( 15, input );
					DebugRecognitionException(eee15);
					throw eee15;
				}
				cnt15++;
			}
			loop15:
				;

			} finally { DebugExitSubRule(15); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("struct_declaration_list", 13);
			LeaveRule("struct_declaration_list", 13);
			LeaveRule_struct_declaration_list();
	        if (state.backtracking > 0) { Memoize(input, 13, struct_declaration_list_StartIndex); }

	    }
	 	DebugLocation(351, 1);
		} finally { DebugExitRule(GrammarFileName, "struct_declaration_list"); }
		return;

	}
	// $ANTLR end "struct_declaration_list"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_struct_declaration() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_struct_declaration() {}

	// $ANTLR start "struct_declaration"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:355:1: struct_declaration : specifier_qualifier_list struct_declarator_list ';' ;
	[GrammarRule("struct_declaration")]
	private void struct_declaration()
	{
		EnterRule_struct_declaration();
		EnterRule("struct_declaration", 14);
		TraceIn("struct_declaration", 14);
	    int struct_declaration_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "struct_declaration");
		DebugLocation(355, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 14)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:357:2: ( specifier_qualifier_list struct_declarator_list ';' )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:357:4: specifier_qualifier_list struct_declarator_list ';'
			{
			DebugLocation(357, 4);
			PushFollow(Follow._specifier_qualifier_list_in_struct_declaration607);
			specifier_qualifier_list();
			PopFollow();
			if (state.failed) return;
			DebugLocation(357, 29);
			PushFollow(Follow._struct_declarator_list_in_struct_declaration609);
			struct_declarator_list();
			PopFollow();
			if (state.failed) return;
			DebugLocation(357, 52);
			Match(input,47,Follow._47_in_struct_declaration611); if (state.failed) return;

			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("struct_declaration", 14);
			LeaveRule("struct_declaration", 14);
			LeaveRule_struct_declaration();
	        if (state.backtracking > 0) { Memoize(input, 14, struct_declaration_StartIndex); }

	    }
	 	DebugLocation(359, 1);
		} finally { DebugExitRule(GrammarFileName, "struct_declaration"); }
		return;

	}
	// $ANTLR end "struct_declaration"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_specifier_qualifier_list() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_specifier_qualifier_list() {}

	// $ANTLR start "specifier_qualifier_list"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:363:1: specifier_qualifier_list : ( type_qualifier | type_specifier )+ ;
	[GrammarRule("specifier_qualifier_list")]
	private void specifier_qualifier_list()
	{
		EnterRule_specifier_qualifier_list();
		EnterRule("specifier_qualifier_list", 15);
		TraceIn("specifier_qualifier_list", 15);
	    int specifier_qualifier_list_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "specifier_qualifier_list");
		DebugLocation(363, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 15)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:365:2: ( ( type_qualifier | type_specifier )+ )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:365:4: ( type_qualifier | type_specifier )+
			{
			DebugLocation(365, 4);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:365:4: ( type_qualifier | type_specifier )+
			int cnt16=0;
			try { DebugEnterSubRule(16);
			while (true)
			{
				int alt16=3;
				try { DebugEnterDecision(16, decisionCanBacktrack[16]);
				switch (input.LA(1))
				{
				case IDENTIFIER:
					{
					switch (input.LA(2))
					{
					case 59:
						{
						int LA16_19 = input.LA(3);

						if ((((EvaluatePredicate(synpred35_C_fragment)&&EvaluatePredicate(synpred35_C_fragment))&&(isTypeName(input.LT(1).Text)))))
						{
							alt16 = 2;
						}


						}
						break;
					case 30:
						{
						int LA16_20 = input.LA(3);

						if ((((EvaluatePredicate(synpred35_C_fragment)&&EvaluatePredicate(synpred35_C_fragment))&&(isTypeName(input.LT(1).Text)))))
						{
							alt16 = 2;
						}


						}
						break;
					case 46:
						{
						int LA16_21 = input.LA(3);

						if ((((EvaluatePredicate(synpred35_C_fragment)&&EvaluatePredicate(synpred35_C_fragment))&&(isTypeName(input.LT(1).Text)))))
						{
							alt16 = 2;
						}


						}
						break;
					case IDENTIFIER:
					case 31:
					case 32:
					case 66:
					case 67:
					case 71:
					case 73:
					case 75:
					case 79:
					case 80:
					case 83:
					case 84:
					case 87:
					case 90:
					case 91:
					case 92:
					case 93:
						{
						alt16 = 2;
						}
						break;
					}

					}
					break;
				case 67:
				case 93:
					{
					alt16 = 1;
					}
					break;
				case 66:
				case 71:
				case 73:
				case 75:
				case 79:
				case 80:
				case 83:
				case 84:
				case 87:
				case 90:
				case 91:
				case 92:
					{
					alt16 = 2;
					}
					break;
				}

				} finally { DebugExitDecision(16); }
				switch (alt16)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:365:6: type_qualifier
					{
					DebugLocation(365, 6);
					PushFollow(Follow._type_qualifier_in_specifier_qualifier_list628);
					type_qualifier();
					PopFollow();
					if (state.failed) return;

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:365:23: type_specifier
					{
					DebugLocation(365, 23);
					PushFollow(Follow._type_specifier_in_specifier_qualifier_list632);
					type_specifier();
					PopFollow();
					if (state.failed) return;

					}
					break;

				default:
					if (cnt16 >= 1)
						goto loop16;

					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee16 = new EarlyExitException( 16, input );
					DebugRecognitionException(eee16);
					throw eee16;
				}
				cnt16++;
			}
			loop16:
				;

			} finally { DebugExitSubRule(16); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("specifier_qualifier_list", 15);
			LeaveRule("specifier_qualifier_list", 15);
			LeaveRule_specifier_qualifier_list();
	        if (state.backtracking > 0) { Memoize(input, 15, specifier_qualifier_list_StartIndex); }

	    }
	 	DebugLocation(367, 1);
		} finally { DebugExitRule(GrammarFileName, "specifier_qualifier_list"); }
		return;

	}
	// $ANTLR end "specifier_qualifier_list"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_struct_declarator_list() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_struct_declarator_list() {}

	// $ANTLR start "struct_declarator_list"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:371:1: struct_declarator_list : struct_declarator ( ',' struct_declarator )* ;
	[GrammarRule("struct_declarator_list")]
	private void struct_declarator_list()
	{
		EnterRule_struct_declarator_list();
		EnterRule("struct_declarator_list", 16);
		TraceIn("struct_declarator_list", 16);
	    int struct_declarator_list_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "struct_declarator_list");
		DebugLocation(371, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 16)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:373:2: ( struct_declarator ( ',' struct_declarator )* )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:373:4: struct_declarator ( ',' struct_declarator )*
			{
			DebugLocation(373, 4);
			PushFollow(Follow._struct_declarator_in_struct_declarator_list650);
			struct_declarator();
			PopFollow();
			if (state.failed) return;
			DebugLocation(373, 22);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:373:22: ( ',' struct_declarator )*
			try { DebugEnterSubRule(17);
			while (true)
			{
				int alt17=2;
				try { DebugEnterDecision(17, decisionCanBacktrack[17]);
				int LA17_0 = input.LA(1);

				if ((LA17_0==37))
				{
					alt17 = 1;
				}


				} finally { DebugExitDecision(17); }
				switch ( alt17 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:373:23: ',' struct_declarator
					{
					DebugLocation(373, 23);
					Match(input,37,Follow._37_in_struct_declarator_list653); if (state.failed) return;
					DebugLocation(373, 27);
					PushFollow(Follow._struct_declarator_in_struct_declarator_list655);
					struct_declarator();
					PopFollow();
					if (state.failed) return;

					}
					break;

				default:
					goto loop17;
				}
			}

			loop17:
				;

			} finally { DebugExitSubRule(17); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("struct_declarator_list", 16);
			LeaveRule("struct_declarator_list", 16);
			LeaveRule_struct_declarator_list();
	        if (state.backtracking > 0) { Memoize(input, 16, struct_declarator_list_StartIndex); }

	    }
	 	DebugLocation(375, 1);
		} finally { DebugExitRule(GrammarFileName, "struct_declarator_list"); }
		return;

	}
	// $ANTLR end "struct_declarator_list"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_struct_declarator() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_struct_declarator() {}

	// $ANTLR start "struct_declarator"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:379:1: struct_declarator : ( declarator ( ':' constant_expression )? | ':' constant_expression );
	[GrammarRule("struct_declarator")]
	private void struct_declarator()
	{
		EnterRule_struct_declarator();
		EnterRule("struct_declarator", 17);
		TraceIn("struct_declarator", 17);
	    int struct_declarator_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "struct_declarator");
		DebugLocation(379, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 17)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:381:2: ( declarator ( ':' constant_expression )? | ':' constant_expression )
			int alt19=2;
			try { DebugEnterDecision(19, decisionCanBacktrack[19]);
			int LA19_0 = input.LA(1);

			if ((LA19_0==IDENTIFIER||LA19_0==30||LA19_0==32))
			{
				alt19 = 1;
			}
			else if ((LA19_0==46))
			{
				alt19 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae = new NoViableAltException("", 19, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(19); }
			switch (alt19)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:381:4: declarator ( ':' constant_expression )?
				{
				DebugLocation(381, 4);
				PushFollow(Follow._declarator_in_struct_declarator672);
				declarator();
				PopFollow();
				if (state.failed) return;
				DebugLocation(381, 15);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:381:15: ( ':' constant_expression )?
				int alt18=2;
				try { DebugEnterSubRule(18);
				try { DebugEnterDecision(18, decisionCanBacktrack[18]);
				int LA18_0 = input.LA(1);

				if ((LA18_0==46))
				{
					alt18 = 1;
				}
				} finally { DebugExitDecision(18); }
				switch (alt18)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:381:16: ':' constant_expression
					{
					DebugLocation(381, 16);
					Match(input,46,Follow._46_in_struct_declarator675); if (state.failed) return;
					DebugLocation(381, 20);
					PushFollow(Follow._constant_expression_in_struct_declarator677);
					constant_expression();
					PopFollow();
					if (state.failed) return;

					}
					break;

				}
				} finally { DebugExitSubRule(18); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:383:4: ':' constant_expression
				{
				DebugLocation(383, 4);
				Match(input,46,Follow._46_in_struct_declarator685); if (state.failed) return;
				DebugLocation(383, 8);
				PushFollow(Follow._constant_expression_in_struct_declarator687);
				constant_expression();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("struct_declarator", 17);
			LeaveRule("struct_declarator", 17);
			LeaveRule_struct_declarator();
	        if (state.backtracking > 0) { Memoize(input, 17, struct_declarator_StartIndex); }

	    }
	 	DebugLocation(385, 1);
		} finally { DebugExitRule(GrammarFileName, "struct_declarator"); }
		return;

	}
	// $ANTLR end "struct_declarator"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_enum_specifier() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_enum_specifier() {}

	// $ANTLR start "enum_specifier"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:389:1: enum_specifier options {k=3; } : ( 'enum' '{' enumerator_list '}' | 'enum' IDENTIFIER '{' enumerator_list '}' | 'enum' IDENTIFIER );
	[GrammarRule("enum_specifier")]
	private void enum_specifier()
	{
		EnterRule_enum_specifier();
		EnterRule("enum_specifier", 18);
		TraceIn("enum_specifier", 18);
	    int enum_specifier_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "enum_specifier");
		DebugLocation(389, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 18)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:393:2: ( 'enum' '{' enumerator_list '}' | 'enum' IDENTIFIER '{' enumerator_list '}' | 'enum' IDENTIFIER )
			int alt20=3;
			try { DebugEnterDecision(20, decisionCanBacktrack[20]);
			int LA20_0 = input.LA(1);

			if ((LA20_0==73))
			{
				int LA20_1 = input.LA(2);

				if ((LA20_1==95))
				{
					alt20 = 1;
				}
				else if ((LA20_1==IDENTIFIER))
				{
					int LA20_3 = input.LA(3);

					if ((LA20_3==95))
					{
						alt20 = 2;
					}
					else if ((LA20_3==EOF||LA20_3==IDENTIFIER||(LA20_3>=30 && LA20_3<=32)||LA20_3==37||(LA20_3>=46 && LA20_3<=47)||LA20_3==59||LA20_3==63||(LA20_3>=66 && LA20_3<=67)||LA20_3==71||(LA20_3>=73 && LA20_3<=75)||(LA20_3>=79 && LA20_3<=81)||(LA20_3>=83 && LA20_3<=84)||(LA20_3>=86 && LA20_3<=87)||(LA20_3>=90 && LA20_3<=93)))
					{
						alt20 = 3;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae = new NoViableAltException("", 20, 3, input);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 20, 1, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae = new NoViableAltException("", 20, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(20); }
			switch (alt20)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:393:4: 'enum' '{' enumerator_list '}'
				{
				DebugLocation(393, 4);
				Match(input,73,Follow._73_in_enum_specifier710); if (state.failed) return;
				DebugLocation(393, 11);
				Match(input,95,Follow._95_in_enum_specifier712); if (state.failed) return;
				DebugLocation(393, 15);
				PushFollow(Follow._enumerator_list_in_enum_specifier714);
				enumerator_list();
				PopFollow();
				if (state.failed) return;
				DebugLocation(393, 31);
				Match(input,99,Follow._99_in_enum_specifier716); if (state.failed) return;

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:395:4: 'enum' IDENTIFIER '{' enumerator_list '}'
				{
				DebugLocation(395, 4);
				Match(input,73,Follow._73_in_enum_specifier722); if (state.failed) return;
				DebugLocation(395, 11);
				Match(input,IDENTIFIER,Follow._IDENTIFIER_in_enum_specifier724); if (state.failed) return;
				DebugLocation(395, 22);
				Match(input,95,Follow._95_in_enum_specifier726); if (state.failed) return;
				DebugLocation(395, 26);
				PushFollow(Follow._enumerator_list_in_enum_specifier728);
				enumerator_list();
				PopFollow();
				if (state.failed) return;
				DebugLocation(395, 42);
				Match(input,99,Follow._99_in_enum_specifier730); if (state.failed) return;

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:397:4: 'enum' IDENTIFIER
				{
				DebugLocation(397, 4);
				Match(input,73,Follow._73_in_enum_specifier736); if (state.failed) return;
				DebugLocation(397, 11);
				Match(input,IDENTIFIER,Follow._IDENTIFIER_in_enum_specifier738); if (state.failed) return;

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("enum_specifier", 18);
			LeaveRule("enum_specifier", 18);
			LeaveRule_enum_specifier();
	        if (state.backtracking > 0) { Memoize(input, 18, enum_specifier_StartIndex); }

	    }
	 	DebugLocation(399, 1);
		} finally { DebugExitRule(GrammarFileName, "enum_specifier"); }
		return;

	}
	// $ANTLR end "enum_specifier"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_enumerator_list() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_enumerator_list() {}

	// $ANTLR start "enumerator_list"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:403:1: enumerator_list : enumerator ( ',' enumerator )* ;
	[GrammarRule("enumerator_list")]
	private void enumerator_list()
	{
		EnterRule_enumerator_list();
		EnterRule("enumerator_list", 19);
		TraceIn("enumerator_list", 19);
	    int enumerator_list_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "enumerator_list");
		DebugLocation(403, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 19)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:405:2: ( enumerator ( ',' enumerator )* )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:405:4: enumerator ( ',' enumerator )*
			{
			DebugLocation(405, 4);
			PushFollow(Follow._enumerator_in_enumerator_list753);
			enumerator();
			PopFollow();
			if (state.failed) return;
			DebugLocation(405, 15);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:405:15: ( ',' enumerator )*
			try { DebugEnterSubRule(21);
			while (true)
			{
				int alt21=2;
				try { DebugEnterDecision(21, decisionCanBacktrack[21]);
				int LA21_0 = input.LA(1);

				if ((LA21_0==37))
				{
					alt21 = 1;
				}


				} finally { DebugExitDecision(21); }
				switch ( alt21 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:405:16: ',' enumerator
					{
					DebugLocation(405, 16);
					Match(input,37,Follow._37_in_enumerator_list756); if (state.failed) return;
					DebugLocation(405, 20);
					PushFollow(Follow._enumerator_in_enumerator_list758);
					enumerator();
					PopFollow();
					if (state.failed) return;

					}
					break;

				default:
					goto loop21;
				}
			}

			loop21:
				;

			} finally { DebugExitSubRule(21); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("enumerator_list", 19);
			LeaveRule("enumerator_list", 19);
			LeaveRule_enumerator_list();
	        if (state.backtracking > 0) { Memoize(input, 19, enumerator_list_StartIndex); }

	    }
	 	DebugLocation(407, 1);
		} finally { DebugExitRule(GrammarFileName, "enumerator_list"); }
		return;

	}
	// $ANTLR end "enumerator_list"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_enumerator() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_enumerator() {}

	// $ANTLR start "enumerator"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:411:1: enumerator : IDENTIFIER ( '=' constant_expression )? ;
	[GrammarRule("enumerator")]
	private void enumerator()
	{
		EnterRule_enumerator();
		EnterRule("enumerator", 20);
		TraceIn("enumerator", 20);
	    int enumerator_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "enumerator");
		DebugLocation(411, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 20)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:413:2: ( IDENTIFIER ( '=' constant_expression )? )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:413:4: IDENTIFIER ( '=' constant_expression )?
			{
			DebugLocation(413, 4);
			Match(input,IDENTIFIER,Follow._IDENTIFIER_in_enumerator775); if (state.failed) return;
			DebugLocation(413, 15);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:413:15: ( '=' constant_expression )?
			int alt22=2;
			try { DebugEnterSubRule(22);
			try { DebugEnterDecision(22, decisionCanBacktrack[22]);
			int LA22_0 = input.LA(1);

			if ((LA22_0==52))
			{
				alt22 = 1;
			}
			} finally { DebugExitDecision(22); }
			switch (alt22)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:413:16: '=' constant_expression
				{
				DebugLocation(413, 16);
				Match(input,52,Follow._52_in_enumerator778); if (state.failed) return;
				DebugLocation(413, 20);
				PushFollow(Follow._constant_expression_in_enumerator780);
				constant_expression();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(22); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("enumerator", 20);
			LeaveRule("enumerator", 20);
			LeaveRule_enumerator();
	        if (state.backtracking > 0) { Memoize(input, 20, enumerator_StartIndex); }

	    }
	 	DebugLocation(415, 1);
		} finally { DebugExitRule(GrammarFileName, "enumerator"); }
		return;

	}
	// $ANTLR end "enumerator"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_type_qualifier() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_type_qualifier() {}

	// $ANTLR start "type_qualifier"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:419:1: type_qualifier : ( 'const' | 'volatile' );
	[GrammarRule("type_qualifier")]
	private void type_qualifier()
	{
		EnterRule_type_qualifier();
		EnterRule("type_qualifier", 21);
		TraceIn("type_qualifier", 21);
	    int type_qualifier_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "type_qualifier");
		DebugLocation(419, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 21)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:421:2: ( 'const' | 'volatile' )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:
			{
			DebugLocation(421, 2);
			if (input.LA(1)==67||input.LA(1)==93)
			{
				input.Consume();
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("type_qualifier", 21);
			LeaveRule("type_qualifier", 21);
			LeaveRule_type_qualifier();
	        if (state.backtracking > 0) { Memoize(input, 21, type_qualifier_StartIndex); }

	    }
	 	DebugLocation(425, 1);
		} finally { DebugExitRule(GrammarFileName, "type_qualifier"); }
		return;

	}
	// $ANTLR end "type_qualifier"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_declarator() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_declarator() {}

	// $ANTLR start "declarator"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:429:1: declarator : ( ( pointer )? direct_declarator | pointer );
	[GrammarRule("declarator")]
	private void declarator()
	{
		EnterRule_declarator();
		EnterRule("declarator", 22);
		TraceIn("declarator", 22);
	    int declarator_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "declarator");
		DebugLocation(429, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 22)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:431:2: ( ( pointer )? direct_declarator | pointer )
			int alt24=2;
			try { DebugEnterDecision(24, decisionCanBacktrack[24]);
			int LA24_0 = input.LA(1);

			if ((LA24_0==32))
			{
				int LA24_1 = input.LA(2);

				if ((EvaluatePredicate(synpred45_C_fragment)))
				{
					alt24 = 1;
				}
				else if ((true))
				{
					alt24 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 24, 1, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA24_0==IDENTIFIER||LA24_0==30))
			{
				alt24 = 1;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae = new NoViableAltException("", 24, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(24); }
			switch (alt24)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:431:4: ( pointer )? direct_declarator
				{
				DebugLocation(431, 4);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:431:4: ( pointer )?
				int alt23=2;
				try { DebugEnterSubRule(23);
				try { DebugEnterDecision(23, decisionCanBacktrack[23]);
				int LA23_0 = input.LA(1);

				if ((LA23_0==32))
				{
					alt23 = 1;
				}
				} finally { DebugExitDecision(23); }
				switch (alt23)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:431:4: pointer
					{
					DebugLocation(431, 4);
					PushFollow(Follow._pointer_in_declarator818);
					pointer();
					PopFollow();
					if (state.failed) return;

					}
					break;

				}
				} finally { DebugExitSubRule(23); }

				DebugLocation(431, 13);
				PushFollow(Follow._direct_declarator_in_declarator821);
				direct_declarator();
				PopFollow();
				if (state.failed) return;

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:433:4: pointer
				{
				DebugLocation(433, 4);
				PushFollow(Follow._pointer_in_declarator827);
				pointer();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("declarator", 22);
			LeaveRule("declarator", 22);
			LeaveRule_declarator();
	        if (state.backtracking > 0) { Memoize(input, 22, declarator_StartIndex); }

	    }
	 	DebugLocation(435, 1);
		} finally { DebugExitRule(GrammarFileName, "declarator"); }
		return;

	}
	// $ANTLR end "declarator"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_direct_declarator() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_direct_declarator() {}

	// $ANTLR start "direct_declarator"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:439:1: direct_declarator : ( IDENTIFIER | '(' declarator ')' ) ( declarator_suffix )* ;
	[GrammarRule("direct_declarator")]
	private void direct_declarator()
	{
		EnterRule_direct_declarator();
		EnterRule("direct_declarator", 23);
		TraceIn("direct_declarator", 23);
	    int direct_declarator_StartIndex = input.Index;

	    IToken IDENTIFIER1 = default(IToken);

		try { DebugEnterRule(GrammarFileName, "direct_declarator");
		DebugLocation(439, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 23)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:441:2: ( ( IDENTIFIER | '(' declarator ')' ) ( declarator_suffix )* )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:441:6: ( IDENTIFIER | '(' declarator ')' ) ( declarator_suffix )*
			{
			DebugLocation(441, 6);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:441:6: ( IDENTIFIER | '(' declarator ')' )
			int alt25=2;
			try { DebugEnterSubRule(25);
			try { DebugEnterDecision(25, decisionCanBacktrack[25]);
			int LA25_0 = input.LA(1);

			if ((LA25_0==IDENTIFIER))
			{
				alt25 = 1;
			}
			else if ((LA25_0==30))
			{
				alt25 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae = new NoViableAltException("", 25, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(25); }
			switch (alt25)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:441:8: IDENTIFIER
				{
				DebugLocation(441, 8);
				IDENTIFIER1=(IToken)Match(input,IDENTIFIER,Follow._IDENTIFIER_in_direct_declarator846); if (state.failed) return;
				DebugLocation(443, 4);
				if (state.backtracking == 0)
				{


								// This line works only in ANTLR 3.0.x
								// if (declaration_stack.Count>0 && declaration_stack.Peek().isTypedef) {
								// The line below works with ANTLR 3.1+
								if (declaration_stack.Peek().isTypedef) {
									Symbols_stack.Peek().types[IDENTIFIER1.Text] = IDENTIFIER1.Text;
									Console.Out.WriteLine("define type "+IDENTIFIER1.Text);
								}

								
				}

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:455:5: '(' declarator ')'
				{
				DebugLocation(455, 5);
				Match(input,30,Follow._30_in_direct_declarator859); if (state.failed) return;
				DebugLocation(455, 9);
				PushFollow(Follow._declarator_in_direct_declarator861);
				declarator();
				PopFollow();
				if (state.failed) return;
				DebugLocation(455, 20);
				Match(input,31,Follow._31_in_direct_declarator863); if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(25); }

			DebugLocation(459, 9);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:459:9: ( declarator_suffix )*
			try { DebugEnterSubRule(26);
			while (true)
			{
				int alt26=2;
				try { DebugEnterDecision(26, decisionCanBacktrack[26]);
				int LA26_0 = input.LA(1);

				if ((LA26_0==30))
				{
					switch (input.LA(2))
					{
					case 31:
						{
						int LA26_26 = input.LA(3);

						if ((EvaluatePredicate(synpred47_C_fragment)))
						{
							alt26 = 1;
						}


						}
						break;
					case IDENTIFIER:
						{
						int LA26_28 = input.LA(3);

						if ((EvaluatePredicate(synpred47_C_fragment)))
						{
							alt26 = 1;
						}


						}
						break;
					case 63:
					case 74:
					case 81:
					case 86:
						{
						int LA26_31 = input.LA(3);

						if ((EvaluatePredicate(synpred47_C_fragment)))
						{
							alt26 = 1;
						}


						}
						break;
					case 92:
						{
						int LA26_32 = input.LA(3);

						if ((EvaluatePredicate(synpred47_C_fragment)))
						{
							alt26 = 1;
						}


						}
						break;
					case 66:
						{
						int LA26_33 = input.LA(3);

						if ((EvaluatePredicate(synpred47_C_fragment)))
						{
							alt26 = 1;
						}


						}
						break;
					case 83:
						{
						int LA26_34 = input.LA(3);

						if ((EvaluatePredicate(synpred47_C_fragment)))
						{
							alt26 = 1;
						}


						}
						break;
					case 79:
						{
						int LA26_35 = input.LA(3);

						if ((EvaluatePredicate(synpred47_C_fragment)))
						{
							alt26 = 1;
						}


						}
						break;
					case 80:
						{
						int LA26_36 = input.LA(3);

						if ((EvaluatePredicate(synpred47_C_fragment)))
						{
							alt26 = 1;
						}


						}
						break;
					case 75:
						{
						int LA26_37 = input.LA(3);

						if ((EvaluatePredicate(synpred47_C_fragment)))
						{
							alt26 = 1;
						}


						}
						break;
					case 71:
						{
						int LA26_38 = input.LA(3);

						if ((EvaluatePredicate(synpred47_C_fragment)))
						{
							alt26 = 1;
						}


						}
						break;
					case 84:
						{
						int LA26_39 = input.LA(3);

						if ((EvaluatePredicate(synpred47_C_fragment)))
						{
							alt26 = 1;
						}


						}
						break;
					case 91:
						{
						int LA26_40 = input.LA(3);

						if ((EvaluatePredicate(synpred47_C_fragment)))
						{
							alt26 = 1;
						}


						}
						break;
					case 87:
					case 90:
						{
						int LA26_41 = input.LA(3);

						if ((EvaluatePredicate(synpred47_C_fragment)))
						{
							alt26 = 1;
						}


						}
						break;
					case 73:
						{
						int LA26_42 = input.LA(3);

						if ((EvaluatePredicate(synpred47_C_fragment)))
						{
							alt26 = 1;
						}


						}
						break;
					case 67:
					case 93:
						{
						int LA26_43 = input.LA(3);

						if ((EvaluatePredicate(synpred47_C_fragment)))
						{
							alt26 = 1;
						}


						}
						break;
					}

				}
				else if ((LA26_0==59))
				{
					switch (input.LA(2))
					{
					case 60:
						{
						int LA26_44 = input.LA(3);

						if ((EvaluatePredicate(synpred47_C_fragment)))
						{
							alt26 = 1;
						}


						}
						break;
					case 30:
						{
						int LA26_45 = input.LA(3);

						if ((EvaluatePredicate(synpred47_C_fragment)))
						{
							alt26 = 1;
						}


						}
						break;
					case IDENTIFIER:
						{
						int LA26_46 = input.LA(3);

						if ((EvaluatePredicate(synpred47_C_fragment)))
						{
							alt26 = 1;
						}


						}
						break;
					case CHARACTER_LITERAL:
					case DECIMAL_LITERAL:
					case FLOATING_POINT_LITERAL:
					case HEX_LITERAL:
					case OCTAL_LITERAL:
					case STRING_LITERAL:
						{
						int LA26_47 = input.LA(3);

						if ((EvaluatePredicate(synpred47_C_fragment)))
						{
							alt26 = 1;
						}


						}
						break;
					case 35:
						{
						int LA26_48 = input.LA(3);

						if ((EvaluatePredicate(synpred47_C_fragment)))
						{
							alt26 = 1;
						}


						}
						break;
					case 39:
						{
						int LA26_49 = input.LA(3);

						if ((EvaluatePredicate(synpred47_C_fragment)))
						{
							alt26 = 1;
						}


						}
						break;
					case 23:
					case 28:
					case 32:
					case 34:
					case 38:
					case 100:
						{
						int LA26_50 = input.LA(3);

						if ((EvaluatePredicate(synpred47_C_fragment)))
						{
							alt26 = 1;
						}


						}
						break;
					case 85:
						{
						int LA26_51 = input.LA(3);

						if ((EvaluatePredicate(synpred47_C_fragment)))
						{
							alt26 = 1;
						}


						}
						break;
					}

				}


				} finally { DebugExitDecision(26); }
				switch ( alt26 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:459:9: declarator_suffix
					{
					DebugLocation(459, 9);
					PushFollow(Follow._declarator_suffix_in_direct_declarator879);
					declarator_suffix();
					PopFollow();
					if (state.failed) return;

					}
					break;

				default:
					goto loop26;
				}
			}

			loop26:
				;

			} finally { DebugExitSubRule(26); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("direct_declarator", 23);
			LeaveRule("direct_declarator", 23);
			LeaveRule_direct_declarator();
	        if (state.backtracking > 0) { Memoize(input, 23, direct_declarator_StartIndex); }

	    }
	 	DebugLocation(461, 1);
		} finally { DebugExitRule(GrammarFileName, "direct_declarator"); }
		return;

	}
	// $ANTLR end "direct_declarator"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_declarator_suffix() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_declarator_suffix() {}

	// $ANTLR start "declarator_suffix"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:465:1: declarator_suffix : ( '[' constant_expression ']' | '[' ']' | '(' parameter_type_list ')' | '(' identifier_list ')' | '(' ')' );
	[GrammarRule("declarator_suffix")]
	private void declarator_suffix()
	{
		EnterRule_declarator_suffix();
		EnterRule("declarator_suffix", 24);
		TraceIn("declarator_suffix", 24);
	    int declarator_suffix_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "declarator_suffix");
		DebugLocation(465, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 24)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:467:2: ( '[' constant_expression ']' | '[' ']' | '(' parameter_type_list ')' | '(' identifier_list ')' | '(' ')' )
			int alt27=5;
			try { DebugEnterDecision(27, decisionCanBacktrack[27]);
			int LA27_0 = input.LA(1);

			if ((LA27_0==59))
			{
				int LA27_1 = input.LA(2);

				if ((LA27_1==60))
				{
					alt27 = 2;
				}
				else if ((LA27_1==CHARACTER_LITERAL||LA27_1==DECIMAL_LITERAL||LA27_1==FLOATING_POINT_LITERAL||LA27_1==HEX_LITERAL||LA27_1==IDENTIFIER||LA27_1==OCTAL_LITERAL||LA27_1==STRING_LITERAL||LA27_1==23||LA27_1==28||LA27_1==30||LA27_1==32||(LA27_1>=34 && LA27_1<=35)||(LA27_1>=38 && LA27_1<=39)||LA27_1==85||LA27_1==100))
				{
					alt27 = 1;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 27, 1, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA27_0==30))
			{
				switch (input.LA(2))
				{
				case 31:
					{
					alt27 = 5;
					}
					break;
				case 63:
				case 66:
				case 67:
				case 71:
				case 73:
				case 74:
				case 75:
				case 79:
				case 80:
				case 81:
				case 83:
				case 84:
				case 86:
				case 87:
				case 90:
				case 91:
				case 92:
				case 93:
					{
					alt27 = 3;
					}
					break;
				case IDENTIFIER:
					{
					int LA27_24 = input.LA(3);

					if ((EvaluatePredicate(synpred50_C_fragment)))
					{
						alt27 = 3;
					}
					else if ((EvaluatePredicate(synpred51_C_fragment)))
					{
						alt27 = 4;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae = new NoViableAltException("", 27, 24, input);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					}
					break;
				default:
					{
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae = new NoViableAltException("", 27, 2, input);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}

			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae = new NoViableAltException("", 27, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(27); }
			switch (alt27)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:467:6: '[' constant_expression ']'
				{
				DebugLocation(467, 6);
				Match(input,59,Follow._59_in_declarator_suffix897); if (state.failed) return;
				DebugLocation(467, 10);
				PushFollow(Follow._constant_expression_in_declarator_suffix899);
				constant_expression();
				PopFollow();
				if (state.failed) return;
				DebugLocation(467, 30);
				Match(input,60,Follow._60_in_declarator_suffix901); if (state.failed) return;

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:469:9: '[' ']'
				{
				DebugLocation(469, 9);
				Match(input,59,Follow._59_in_declarator_suffix912); if (state.failed) return;
				DebugLocation(469, 13);
				Match(input,60,Follow._60_in_declarator_suffix914); if (state.failed) return;

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:471:9: '(' parameter_type_list ')'
				{
				DebugLocation(471, 9);
				Match(input,30,Follow._30_in_declarator_suffix925); if (state.failed) return;
				DebugLocation(471, 13);
				PushFollow(Follow._parameter_type_list_in_declarator_suffix927);
				parameter_type_list();
				PopFollow();
				if (state.failed) return;
				DebugLocation(471, 33);
				Match(input,31,Follow._31_in_declarator_suffix929); if (state.failed) return;

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:473:9: '(' identifier_list ')'
				{
				DebugLocation(473, 9);
				Match(input,30,Follow._30_in_declarator_suffix940); if (state.failed) return;
				DebugLocation(473, 13);
				PushFollow(Follow._identifier_list_in_declarator_suffix942);
				identifier_list();
				PopFollow();
				if (state.failed) return;
				DebugLocation(473, 29);
				Match(input,31,Follow._31_in_declarator_suffix944); if (state.failed) return;

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:475:9: '(' ')'
				{
				DebugLocation(475, 9);
				Match(input,30,Follow._30_in_declarator_suffix955); if (state.failed) return;
				DebugLocation(475, 13);
				Match(input,31,Follow._31_in_declarator_suffix957); if (state.failed) return;

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("declarator_suffix", 24);
			LeaveRule("declarator_suffix", 24);
			LeaveRule_declarator_suffix();
	        if (state.backtracking > 0) { Memoize(input, 24, declarator_suffix_StartIndex); }

	    }
	 	DebugLocation(477, 1);
		} finally { DebugExitRule(GrammarFileName, "declarator_suffix"); }
		return;

	}
	// $ANTLR end "declarator_suffix"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_pointer() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_pointer() {}

	// $ANTLR start "pointer"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:481:1: pointer : ( '*' ( type_qualifier )+ ( pointer )? | '*' pointer | '*' );
	[GrammarRule("pointer")]
	private void pointer()
	{
		EnterRule_pointer();
		EnterRule("pointer", 25);
		TraceIn("pointer", 25);
	    int pointer_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "pointer");
		DebugLocation(481, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 25)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:483:2: ( '*' ( type_qualifier )+ ( pointer )? | '*' pointer | '*' )
			int alt30=3;
			try { DebugEnterDecision(30, decisionCanBacktrack[30]);
			int LA30_0 = input.LA(1);

			if ((LA30_0==32))
			{
				switch (input.LA(2))
				{
				case 67:
				case 93:
					{
					int LA30_2 = input.LA(3);

					if ((EvaluatePredicate(synpred54_C_fragment)))
					{
						alt30 = 1;
					}
					else if ((true))
					{
						alt30 = 3;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae = new NoViableAltException("", 30, 2, input);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					}
					break;
				case 32:
					{
					int LA30_3 = input.LA(3);

					if ((EvaluatePredicate(synpred55_C_fragment)))
					{
						alt30 = 2;
					}
					else if ((true))
					{
						alt30 = 3;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae = new NoViableAltException("", 30, 3, input);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					}
					break;
				case EOF:
				case IDENTIFIER:
				case 30:
				case 31:
				case 37:
				case 46:
				case 47:
				case 52:
				case 59:
				case 63:
				case 66:
				case 71:
				case 73:
				case 74:
				case 75:
				case 79:
				case 80:
				case 81:
				case 83:
				case 84:
				case 86:
				case 87:
				case 89:
				case 90:
				case 91:
				case 92:
				case 95:
					{
					alt30 = 3;
					}
					break;
				default:
					{
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae = new NoViableAltException("", 30, 1, input);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}

			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae = new NoViableAltException("", 30, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(30); }
			switch (alt30)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:483:4: '*' ( type_qualifier )+ ( pointer )?
				{
				DebugLocation(483, 4);
				Match(input,32,Follow._32_in_pointer972); if (state.failed) return;
				DebugLocation(483, 8);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:483:8: ( type_qualifier )+
				int cnt28=0;
				try { DebugEnterSubRule(28);
				while (true)
				{
					int alt28=2;
					try { DebugEnterDecision(28, decisionCanBacktrack[28]);
					int LA28_0 = input.LA(1);

					if ((LA28_0==67||LA28_0==93))
					{
						int LA28_17 = input.LA(2);

						if ((EvaluatePredicate(synpred52_C_fragment)))
						{
							alt28 = 1;
						}


					}


					} finally { DebugExitDecision(28); }
					switch (alt28)
					{
					case 1:
						DebugEnterAlt(1);
						// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:483:8: type_qualifier
						{
						DebugLocation(483, 8);
						PushFollow(Follow._type_qualifier_in_pointer974);
						type_qualifier();
						PopFollow();
						if (state.failed) return;

						}
						break;

					default:
						if (cnt28 >= 1)
							goto loop28;

						if (state.backtracking>0) {state.failed=true; return;}
						EarlyExitException eee28 = new EarlyExitException( 28, input );
						DebugRecognitionException(eee28);
						throw eee28;
					}
					cnt28++;
				}
				loop28:
					;

				} finally { DebugExitSubRule(28); }

				DebugLocation(483, 24);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:483:24: ( pointer )?
				int alt29=2;
				try { DebugEnterSubRule(29);
				try { DebugEnterDecision(29, decisionCanBacktrack[29]);
				int LA29_0 = input.LA(1);

				if ((LA29_0==32))
				{
					int LA29_1 = input.LA(2);

					if ((EvaluatePredicate(synpred53_C_fragment)))
					{
						alt29 = 1;
					}
				}
				} finally { DebugExitDecision(29); }
				switch (alt29)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:483:24: pointer
					{
					DebugLocation(483, 24);
					PushFollow(Follow._pointer_in_pointer977);
					pointer();
					PopFollow();
					if (state.failed) return;

					}
					break;

				}
				} finally { DebugExitSubRule(29); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:485:4: '*' pointer
				{
				DebugLocation(485, 4);
				Match(input,32,Follow._32_in_pointer984); if (state.failed) return;
				DebugLocation(485, 8);
				PushFollow(Follow._pointer_in_pointer986);
				pointer();
				PopFollow();
				if (state.failed) return;

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:487:4: '*'
				{
				DebugLocation(487, 4);
				Match(input,32,Follow._32_in_pointer992); if (state.failed) return;

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("pointer", 25);
			LeaveRule("pointer", 25);
			LeaveRule_pointer();
	        if (state.backtracking > 0) { Memoize(input, 25, pointer_StartIndex); }

	    }
	 	DebugLocation(489, 1);
		} finally { DebugExitRule(GrammarFileName, "pointer"); }
		return;

	}
	// $ANTLR end "pointer"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_parameter_type_list() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_parameter_type_list() {}

	// $ANTLR start "parameter_type_list"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:493:1: parameter_type_list : parameter_list ( ',' '...' )? ;
	[GrammarRule("parameter_type_list")]
	private void parameter_type_list()
	{
		EnterRule_parameter_type_list();
		EnterRule("parameter_type_list", 26);
		TraceIn("parameter_type_list", 26);
	    int parameter_type_list_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "parameter_type_list");
		DebugLocation(493, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 26)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:495:2: ( parameter_list ( ',' '...' )? )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:495:4: parameter_list ( ',' '...' )?
			{
			DebugLocation(495, 4);
			PushFollow(Follow._parameter_list_in_parameter_type_list1007);
			parameter_list();
			PopFollow();
			if (state.failed) return;
			DebugLocation(495, 19);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:495:19: ( ',' '...' )?
			int alt31=2;
			try { DebugEnterSubRule(31);
			try { DebugEnterDecision(31, decisionCanBacktrack[31]);
			int LA31_0 = input.LA(1);

			if ((LA31_0==37))
			{
				alt31 = 1;
			}
			} finally { DebugExitDecision(31); }
			switch (alt31)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:495:20: ',' '...'
				{
				DebugLocation(495, 20);
				Match(input,37,Follow._37_in_parameter_type_list1010); if (state.failed) return;
				DebugLocation(495, 24);
				Match(input,43,Follow._43_in_parameter_type_list1012); if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(31); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("parameter_type_list", 26);
			LeaveRule("parameter_type_list", 26);
			LeaveRule_parameter_type_list();
	        if (state.backtracking > 0) { Memoize(input, 26, parameter_type_list_StartIndex); }

	    }
	 	DebugLocation(497, 1);
		} finally { DebugExitRule(GrammarFileName, "parameter_type_list"); }
		return;

	}
	// $ANTLR end "parameter_type_list"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_parameter_list() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_parameter_list() {}

	// $ANTLR start "parameter_list"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:501:1: parameter_list : parameter_declaration ( ',' parameter_declaration )* ;
	[GrammarRule("parameter_list")]
	private void parameter_list()
	{
		EnterRule_parameter_list();
		EnterRule("parameter_list", 27);
		TraceIn("parameter_list", 27);
	    int parameter_list_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "parameter_list");
		DebugLocation(501, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 27)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:503:2: ( parameter_declaration ( ',' parameter_declaration )* )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:503:4: parameter_declaration ( ',' parameter_declaration )*
			{
			DebugLocation(503, 4);
			PushFollow(Follow._parameter_declaration_in_parameter_list1029);
			parameter_declaration();
			PopFollow();
			if (state.failed) return;
			DebugLocation(503, 26);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:503:26: ( ',' parameter_declaration )*
			try { DebugEnterSubRule(32);
			while (true)
			{
				int alt32=2;
				try { DebugEnterDecision(32, decisionCanBacktrack[32]);
				int LA32_0 = input.LA(1);

				if ((LA32_0==37))
				{
					int LA32_1 = input.LA(2);

					if ((LA32_1==IDENTIFIER||LA32_1==63||(LA32_1>=66 && LA32_1<=67)||LA32_1==71||(LA32_1>=73 && LA32_1<=75)||(LA32_1>=79 && LA32_1<=81)||(LA32_1>=83 && LA32_1<=84)||(LA32_1>=86 && LA32_1<=87)||(LA32_1>=90 && LA32_1<=93)))
					{
						alt32 = 1;
					}


				}


				} finally { DebugExitDecision(32); }
				switch ( alt32 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:503:27: ',' parameter_declaration
					{
					DebugLocation(503, 27);
					Match(input,37,Follow._37_in_parameter_list1032); if (state.failed) return;
					DebugLocation(503, 31);
					PushFollow(Follow._parameter_declaration_in_parameter_list1034);
					parameter_declaration();
					PopFollow();
					if (state.failed) return;

					}
					break;

				default:
					goto loop32;
				}
			}

			loop32:
				;

			} finally { DebugExitSubRule(32); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("parameter_list", 27);
			LeaveRule("parameter_list", 27);
			LeaveRule_parameter_list();
	        if (state.backtracking > 0) { Memoize(input, 27, parameter_list_StartIndex); }

	    }
	 	DebugLocation(505, 1);
		} finally { DebugExitRule(GrammarFileName, "parameter_list"); }
		return;

	}
	// $ANTLR end "parameter_list"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_parameter_declaration() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_parameter_declaration() {}

	// $ANTLR start "parameter_declaration"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:509:1: parameter_declaration : declaration_specifiers ( declarator | abstract_declarator )* ;
	[GrammarRule("parameter_declaration")]
	private void parameter_declaration()
	{
		EnterRule_parameter_declaration();
		EnterRule("parameter_declaration", 28);
		TraceIn("parameter_declaration", 28);
	    int parameter_declaration_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "parameter_declaration");
		DebugLocation(509, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 28)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:511:2: ( declaration_specifiers ( declarator | abstract_declarator )* )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:511:4: declaration_specifiers ( declarator | abstract_declarator )*
			{
			DebugLocation(511, 4);
			PushFollow(Follow._declaration_specifiers_in_parameter_declaration1051);
			declaration_specifiers();
			PopFollow();
			if (state.failed) return;
			DebugLocation(511, 27);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:511:27: ( declarator | abstract_declarator )*
			try { DebugEnterSubRule(33);
			while (true)
			{
				int alt33=3;
				try { DebugEnterDecision(33, decisionCanBacktrack[33]);
				switch (input.LA(1))
				{
				case 32:
					{
					int LA33_4 = input.LA(2);

					if ((EvaluatePredicate(synpred58_C_fragment)))
					{
						alt33 = 1;
					}
					else if ((EvaluatePredicate(synpred59_C_fragment)))
					{
						alt33 = 2;
					}


					}
					break;
				case IDENTIFIER:
					{
					alt33 = 1;
					}
					break;
				case 30:
					{
					switch (input.LA(2))
					{
					case 31:
					case 59:
					case 63:
					case 66:
					case 67:
					case 71:
					case 73:
					case 74:
					case 75:
					case 79:
					case 80:
					case 81:
					case 83:
					case 84:
					case 86:
					case 87:
					case 90:
					case 91:
					case 92:
					case 93:
						{
						alt33 = 2;
						}
						break;
					case 32:
						{
						int LA33_17 = input.LA(3);

						if ((EvaluatePredicate(synpred58_C_fragment)))
						{
							alt33 = 1;
						}
						else if ((EvaluatePredicate(synpred59_C_fragment)))
						{
							alt33 = 2;
						}


						}
						break;
					case IDENTIFIER:
						{
						int LA33_18 = input.LA(3);

						if ((EvaluatePredicate(synpred58_C_fragment)))
						{
							alt33 = 1;
						}
						else if ((EvaluatePredicate(synpred59_C_fragment)))
						{
							alt33 = 2;
						}


						}
						break;
					case 30:
						{
						int LA33_19 = input.LA(3);

						if ((EvaluatePredicate(synpred58_C_fragment)))
						{
							alt33 = 1;
						}
						else if ((EvaluatePredicate(synpred59_C_fragment)))
						{
							alt33 = 2;
						}


						}
						break;
					}

					}
					break;
				case 59:
					{
					alt33 = 2;
					}
					break;
				}

				} finally { DebugExitDecision(33); }
				switch ( alt33 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:511:28: declarator
					{
					DebugLocation(511, 28);
					PushFollow(Follow._declarator_in_parameter_declaration1054);
					declarator();
					PopFollow();
					if (state.failed) return;

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:511:39: abstract_declarator
					{
					DebugLocation(511, 39);
					PushFollow(Follow._abstract_declarator_in_parameter_declaration1056);
					abstract_declarator();
					PopFollow();
					if (state.failed) return;

					}
					break;

				default:
					goto loop33;
				}
			}

			loop33:
				;

			} finally { DebugExitSubRule(33); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("parameter_declaration", 28);
			LeaveRule("parameter_declaration", 28);
			LeaveRule_parameter_declaration();
	        if (state.backtracking > 0) { Memoize(input, 28, parameter_declaration_StartIndex); }

	    }
	 	DebugLocation(513, 1);
		} finally { DebugExitRule(GrammarFileName, "parameter_declaration"); }
		return;

	}
	// $ANTLR end "parameter_declaration"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_identifier_list() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_identifier_list() {}

	// $ANTLR start "identifier_list"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:517:1: identifier_list : IDENTIFIER ( ',' IDENTIFIER )* ;
	[GrammarRule("identifier_list")]
	private void identifier_list()
	{
		EnterRule_identifier_list();
		EnterRule("identifier_list", 29);
		TraceIn("identifier_list", 29);
	    int identifier_list_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "identifier_list");
		DebugLocation(517, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 29)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:519:2: ( IDENTIFIER ( ',' IDENTIFIER )* )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:519:4: IDENTIFIER ( ',' IDENTIFIER )*
			{
			DebugLocation(519, 4);
			Match(input,IDENTIFIER,Follow._IDENTIFIER_in_identifier_list1073); if (state.failed) return;
			DebugLocation(519, 15);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:519:15: ( ',' IDENTIFIER )*
			try { DebugEnterSubRule(34);
			while (true)
			{
				int alt34=2;
				try { DebugEnterDecision(34, decisionCanBacktrack[34]);
				int LA34_0 = input.LA(1);

				if ((LA34_0==37))
				{
					alt34 = 1;
				}


				} finally { DebugExitDecision(34); }
				switch ( alt34 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:519:16: ',' IDENTIFIER
					{
					DebugLocation(519, 16);
					Match(input,37,Follow._37_in_identifier_list1076); if (state.failed) return;
					DebugLocation(519, 20);
					Match(input,IDENTIFIER,Follow._IDENTIFIER_in_identifier_list1078); if (state.failed) return;

					}
					break;

				default:
					goto loop34;
				}
			}

			loop34:
				;

			} finally { DebugExitSubRule(34); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("identifier_list", 29);
			LeaveRule("identifier_list", 29);
			LeaveRule_identifier_list();
	        if (state.backtracking > 0) { Memoize(input, 29, identifier_list_StartIndex); }

	    }
	 	DebugLocation(521, 1);
		} finally { DebugExitRule(GrammarFileName, "identifier_list"); }
		return;

	}
	// $ANTLR end "identifier_list"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_type_name() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_type_name() {}

	// $ANTLR start "type_name"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:525:1: type_name : specifier_qualifier_list ( abstract_declarator )? ;
	[GrammarRule("type_name")]
	private void type_name()
	{
		EnterRule_type_name();
		EnterRule("type_name", 30);
		TraceIn("type_name", 30);
	    int type_name_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "type_name");
		DebugLocation(525, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 30)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:527:2: ( specifier_qualifier_list ( abstract_declarator )? )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:527:4: specifier_qualifier_list ( abstract_declarator )?
			{
			DebugLocation(527, 4);
			PushFollow(Follow._specifier_qualifier_list_in_type_name1095);
			specifier_qualifier_list();
			PopFollow();
			if (state.failed) return;
			DebugLocation(527, 29);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:527:29: ( abstract_declarator )?
			int alt35=2;
			try { DebugEnterSubRule(35);
			try { DebugEnterDecision(35, decisionCanBacktrack[35]);
			int LA35_0 = input.LA(1);

			if ((LA35_0==30||LA35_0==32||LA35_0==59))
			{
				alt35 = 1;
			}
			} finally { DebugExitDecision(35); }
			switch (alt35)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:527:29: abstract_declarator
				{
				DebugLocation(527, 29);
				PushFollow(Follow._abstract_declarator_in_type_name1097);
				abstract_declarator();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(35); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("type_name", 30);
			LeaveRule("type_name", 30);
			LeaveRule_type_name();
	        if (state.backtracking > 0) { Memoize(input, 30, type_name_StartIndex); }

	    }
	 	DebugLocation(529, 1);
		} finally { DebugExitRule(GrammarFileName, "type_name"); }
		return;

	}
	// $ANTLR end "type_name"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_abstract_declarator() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_abstract_declarator() {}

	// $ANTLR start "abstract_declarator"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:533:1: abstract_declarator : ( pointer ( direct_abstract_declarator )? | direct_abstract_declarator );
	[GrammarRule("abstract_declarator")]
	private void abstract_declarator()
	{
		EnterRule_abstract_declarator();
		EnterRule("abstract_declarator", 31);
		TraceIn("abstract_declarator", 31);
	    int abstract_declarator_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "abstract_declarator");
		DebugLocation(533, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 31)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:535:2: ( pointer ( direct_abstract_declarator )? | direct_abstract_declarator )
			int alt37=2;
			try { DebugEnterDecision(37, decisionCanBacktrack[37]);
			int LA37_0 = input.LA(1);

			if ((LA37_0==32))
			{
				alt37 = 1;
			}
			else if ((LA37_0==30||LA37_0==59))
			{
				alt37 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae = new NoViableAltException("", 37, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(37); }
			switch (alt37)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:535:4: pointer ( direct_abstract_declarator )?
				{
				DebugLocation(535, 4);
				PushFollow(Follow._pointer_in_abstract_declarator1113);
				pointer();
				PopFollow();
				if (state.failed) return;
				DebugLocation(535, 12);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:535:12: ( direct_abstract_declarator )?
				int alt36=2;
				try { DebugEnterSubRule(36);
				try { DebugEnterDecision(36, decisionCanBacktrack[36]);
				int LA36_0 = input.LA(1);

				if ((LA36_0==30))
				{
					switch (input.LA(2))
					{
					case 31:
						{
						int LA36_8 = input.LA(3);

						if ((EvaluatePredicate(synpred62_C_fragment)))
						{
							alt36 = 1;
						}
						}
						break;
					case 32:
						{
						int LA36_9 = input.LA(3);

						if ((EvaluatePredicate(synpred62_C_fragment)))
						{
							alt36 = 1;
						}
						}
						break;
					case 30:
						{
						int LA36_10 = input.LA(3);

						if ((EvaluatePredicate(synpred62_C_fragment)))
						{
							alt36 = 1;
						}
						}
						break;
					case 59:
						{
						int LA36_11 = input.LA(3);

						if ((EvaluatePredicate(synpred62_C_fragment)))
						{
							alt36 = 1;
						}
						}
						break;
					case 63:
					case 74:
					case 81:
					case 86:
						{
						int LA36_12 = input.LA(3);

						if ((EvaluatePredicate(synpred62_C_fragment)))
						{
							alt36 = 1;
						}
						}
						break;
					case 92:
						{
						int LA36_13 = input.LA(3);

						if ((EvaluatePredicate(synpred62_C_fragment)))
						{
							alt36 = 1;
						}
						}
						break;
					case 66:
						{
						int LA36_14 = input.LA(3);

						if ((EvaluatePredicate(synpred62_C_fragment)))
						{
							alt36 = 1;
						}
						}
						break;
					case 83:
						{
						int LA36_15 = input.LA(3);

						if ((EvaluatePredicate(synpred62_C_fragment)))
						{
							alt36 = 1;
						}
						}
						break;
					case 79:
						{
						int LA36_16 = input.LA(3);

						if ((EvaluatePredicate(synpred62_C_fragment)))
						{
							alt36 = 1;
						}
						}
						break;
					case 80:
						{
						int LA36_17 = input.LA(3);

						if ((EvaluatePredicate(synpred62_C_fragment)))
						{
							alt36 = 1;
						}
						}
						break;
					case 75:
						{
						int LA36_18 = input.LA(3);

						if ((EvaluatePredicate(synpred62_C_fragment)))
						{
							alt36 = 1;
						}
						}
						break;
					case 71:
						{
						int LA36_19 = input.LA(3);

						if ((EvaluatePredicate(synpred62_C_fragment)))
						{
							alt36 = 1;
						}
						}
						break;
					case 84:
						{
						int LA36_20 = input.LA(3);

						if ((EvaluatePredicate(synpred62_C_fragment)))
						{
							alt36 = 1;
						}
						}
						break;
					case 91:
						{
						int LA36_21 = input.LA(3);

						if ((EvaluatePredicate(synpred62_C_fragment)))
						{
							alt36 = 1;
						}
						}
						break;
					case 87:
					case 90:
						{
						int LA36_22 = input.LA(3);

						if ((EvaluatePredicate(synpred62_C_fragment)))
						{
							alt36 = 1;
						}
						}
						break;
					case 73:
						{
						int LA36_23 = input.LA(3);

						if ((EvaluatePredicate(synpred62_C_fragment)))
						{
							alt36 = 1;
						}
						}
						break;
					case IDENTIFIER:
						{
						int LA36_24 = input.LA(3);

						if ((EvaluatePredicate(synpred62_C_fragment)))
						{
							alt36 = 1;
						}
						}
						break;
					case 67:
					case 93:
						{
						int LA36_25 = input.LA(3);

						if ((EvaluatePredicate(synpred62_C_fragment)))
						{
							alt36 = 1;
						}
						}
						break;
					}

				}
				else if ((LA36_0==59))
				{
					switch (input.LA(2))
					{
					case 60:
						{
						int LA36_26 = input.LA(3);

						if ((EvaluatePredicate(synpred62_C_fragment)))
						{
							alt36 = 1;
						}
						}
						break;
					case 30:
						{
						int LA36_27 = input.LA(3);

						if ((EvaluatePredicate(synpred62_C_fragment)))
						{
							alt36 = 1;
						}
						}
						break;
					case IDENTIFIER:
						{
						int LA36_28 = input.LA(3);

						if ((EvaluatePredicate(synpred62_C_fragment)))
						{
							alt36 = 1;
						}
						}
						break;
					case CHARACTER_LITERAL:
					case DECIMAL_LITERAL:
					case FLOATING_POINT_LITERAL:
					case HEX_LITERAL:
					case OCTAL_LITERAL:
					case STRING_LITERAL:
						{
						int LA36_29 = input.LA(3);

						if ((EvaluatePredicate(synpred62_C_fragment)))
						{
							alt36 = 1;
						}
						}
						break;
					case 35:
						{
						int LA36_30 = input.LA(3);

						if ((EvaluatePredicate(synpred62_C_fragment)))
						{
							alt36 = 1;
						}
						}
						break;
					case 39:
						{
						int LA36_31 = input.LA(3);

						if ((EvaluatePredicate(synpred62_C_fragment)))
						{
							alt36 = 1;
						}
						}
						break;
					case 23:
					case 28:
					case 32:
					case 34:
					case 38:
					case 100:
						{
						int LA36_32 = input.LA(3);

						if ((EvaluatePredicate(synpred62_C_fragment)))
						{
							alt36 = 1;
						}
						}
						break;
					case 85:
						{
						int LA36_33 = input.LA(3);

						if ((EvaluatePredicate(synpred62_C_fragment)))
						{
							alt36 = 1;
						}
						}
						break;
					}

				}
				} finally { DebugExitDecision(36); }
				switch (alt36)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:535:12: direct_abstract_declarator
					{
					DebugLocation(535, 12);
					PushFollow(Follow._direct_abstract_declarator_in_abstract_declarator1115);
					direct_abstract_declarator();
					PopFollow();
					if (state.failed) return;

					}
					break;

				}
				} finally { DebugExitSubRule(36); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:537:4: direct_abstract_declarator
				{
				DebugLocation(537, 4);
				PushFollow(Follow._direct_abstract_declarator_in_abstract_declarator1122);
				direct_abstract_declarator();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("abstract_declarator", 31);
			LeaveRule("abstract_declarator", 31);
			LeaveRule_abstract_declarator();
	        if (state.backtracking > 0) { Memoize(input, 31, abstract_declarator_StartIndex); }

	    }
	 	DebugLocation(539, 1);
		} finally { DebugExitRule(GrammarFileName, "abstract_declarator"); }
		return;

	}
	// $ANTLR end "abstract_declarator"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_direct_abstract_declarator() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_direct_abstract_declarator() {}

	// $ANTLR start "direct_abstract_declarator"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:543:1: direct_abstract_declarator : ( '(' abstract_declarator ')' | abstract_declarator_suffix ) ( abstract_declarator_suffix )* ;
	[GrammarRule("direct_abstract_declarator")]
	private void direct_abstract_declarator()
	{
		EnterRule_direct_abstract_declarator();
		EnterRule("direct_abstract_declarator", 32);
		TraceIn("direct_abstract_declarator", 32);
	    int direct_abstract_declarator_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "direct_abstract_declarator");
		DebugLocation(543, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 32)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:545:2: ( ( '(' abstract_declarator ')' | abstract_declarator_suffix ) ( abstract_declarator_suffix )* )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:545:4: ( '(' abstract_declarator ')' | abstract_declarator_suffix ) ( abstract_declarator_suffix )*
			{
			DebugLocation(545, 4);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:545:4: ( '(' abstract_declarator ')' | abstract_declarator_suffix )
			int alt38=2;
			try { DebugEnterSubRule(38);
			try { DebugEnterDecision(38, decisionCanBacktrack[38]);
			int LA38_0 = input.LA(1);

			if ((LA38_0==30))
			{
				int LA38_1 = input.LA(2);

				if ((LA38_1==IDENTIFIER||LA38_1==31||LA38_1==63||(LA38_1>=66 && LA38_1<=67)||LA38_1==71||(LA38_1>=73 && LA38_1<=75)||(LA38_1>=79 && LA38_1<=81)||(LA38_1>=83 && LA38_1<=84)||(LA38_1>=86 && LA38_1<=87)||(LA38_1>=90 && LA38_1<=93)))
				{
					alt38 = 2;
				}
				else if ((LA38_1==30||LA38_1==32||LA38_1==59))
				{
					alt38 = 1;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 38, 1, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA38_0==59))
			{
				alt38 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae = new NoViableAltException("", 38, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(38); }
			switch (alt38)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:545:6: '(' abstract_declarator ')'
				{
				DebugLocation(545, 6);
				Match(input,30,Follow._30_in_direct_abstract_declarator1139); if (state.failed) return;
				DebugLocation(545, 10);
				PushFollow(Follow._abstract_declarator_in_direct_abstract_declarator1141);
				abstract_declarator();
				PopFollow();
				if (state.failed) return;
				DebugLocation(545, 30);
				Match(input,31,Follow._31_in_direct_abstract_declarator1143); if (state.failed) return;

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:545:36: abstract_declarator_suffix
				{
				DebugLocation(545, 36);
				PushFollow(Follow._abstract_declarator_suffix_in_direct_abstract_declarator1147);
				abstract_declarator_suffix();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(38); }

			DebugLocation(545, 65);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:545:65: ( abstract_declarator_suffix )*
			try { DebugEnterSubRule(39);
			while (true)
			{
				int alt39=2;
				try { DebugEnterDecision(39, decisionCanBacktrack[39]);
				int LA39_0 = input.LA(1);

				if ((LA39_0==30))
				{
					switch (input.LA(2))
					{
					case 31:
						{
						int LA39_8 = input.LA(3);

						if ((EvaluatePredicate(synpred65_C_fragment)))
						{
							alt39 = 1;
						}


						}
						break;
					case IDENTIFIER:
						{
						int LA39_10 = input.LA(3);

						if ((EvaluatePredicate(synpred65_C_fragment)))
						{
							alt39 = 1;
						}


						}
						break;
					case 63:
					case 74:
					case 81:
					case 86:
						{
						int LA39_13 = input.LA(3);

						if ((EvaluatePredicate(synpred65_C_fragment)))
						{
							alt39 = 1;
						}


						}
						break;
					case 92:
						{
						int LA39_14 = input.LA(3);

						if ((EvaluatePredicate(synpred65_C_fragment)))
						{
							alt39 = 1;
						}


						}
						break;
					case 66:
						{
						int LA39_15 = input.LA(3);

						if ((EvaluatePredicate(synpred65_C_fragment)))
						{
							alt39 = 1;
						}


						}
						break;
					case 83:
						{
						int LA39_16 = input.LA(3);

						if ((EvaluatePredicate(synpred65_C_fragment)))
						{
							alt39 = 1;
						}


						}
						break;
					case 79:
						{
						int LA39_17 = input.LA(3);

						if ((EvaluatePredicate(synpred65_C_fragment)))
						{
							alt39 = 1;
						}


						}
						break;
					case 80:
						{
						int LA39_18 = input.LA(3);

						if ((EvaluatePredicate(synpred65_C_fragment)))
						{
							alt39 = 1;
						}


						}
						break;
					case 75:
						{
						int LA39_19 = input.LA(3);

						if ((EvaluatePredicate(synpred65_C_fragment)))
						{
							alt39 = 1;
						}


						}
						break;
					case 71:
						{
						int LA39_20 = input.LA(3);

						if ((EvaluatePredicate(synpred65_C_fragment)))
						{
							alt39 = 1;
						}


						}
						break;
					case 84:
						{
						int LA39_21 = input.LA(3);

						if ((EvaluatePredicate(synpred65_C_fragment)))
						{
							alt39 = 1;
						}


						}
						break;
					case 91:
						{
						int LA39_22 = input.LA(3);

						if ((EvaluatePredicate(synpred65_C_fragment)))
						{
							alt39 = 1;
						}


						}
						break;
					case 87:
					case 90:
						{
						int LA39_23 = input.LA(3);

						if ((EvaluatePredicate(synpred65_C_fragment)))
						{
							alt39 = 1;
						}


						}
						break;
					case 73:
						{
						int LA39_24 = input.LA(3);

						if ((EvaluatePredicate(synpred65_C_fragment)))
						{
							alt39 = 1;
						}


						}
						break;
					case 67:
					case 93:
						{
						int LA39_25 = input.LA(3);

						if ((EvaluatePredicate(synpred65_C_fragment)))
						{
							alt39 = 1;
						}


						}
						break;
					}

				}
				else if ((LA39_0==59))
				{
					switch (input.LA(2))
					{
					case 60:
						{
						int LA39_26 = input.LA(3);

						if ((EvaluatePredicate(synpred65_C_fragment)))
						{
							alt39 = 1;
						}


						}
						break;
					case 30:
						{
						int LA39_27 = input.LA(3);

						if ((EvaluatePredicate(synpred65_C_fragment)))
						{
							alt39 = 1;
						}


						}
						break;
					case IDENTIFIER:
						{
						int LA39_28 = input.LA(3);

						if ((EvaluatePredicate(synpred65_C_fragment)))
						{
							alt39 = 1;
						}


						}
						break;
					case CHARACTER_LITERAL:
					case DECIMAL_LITERAL:
					case FLOATING_POINT_LITERAL:
					case HEX_LITERAL:
					case OCTAL_LITERAL:
					case STRING_LITERAL:
						{
						int LA39_29 = input.LA(3);

						if ((EvaluatePredicate(synpred65_C_fragment)))
						{
							alt39 = 1;
						}


						}
						break;
					case 35:
						{
						int LA39_30 = input.LA(3);

						if ((EvaluatePredicate(synpred65_C_fragment)))
						{
							alt39 = 1;
						}


						}
						break;
					case 39:
						{
						int LA39_31 = input.LA(3);

						if ((EvaluatePredicate(synpred65_C_fragment)))
						{
							alt39 = 1;
						}


						}
						break;
					case 23:
					case 28:
					case 32:
					case 34:
					case 38:
					case 100:
						{
						int LA39_32 = input.LA(3);

						if ((EvaluatePredicate(synpred65_C_fragment)))
						{
							alt39 = 1;
						}


						}
						break;
					case 85:
						{
						int LA39_33 = input.LA(3);

						if ((EvaluatePredicate(synpred65_C_fragment)))
						{
							alt39 = 1;
						}


						}
						break;
					}

				}


				} finally { DebugExitDecision(39); }
				switch ( alt39 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:545:65: abstract_declarator_suffix
					{
					DebugLocation(545, 65);
					PushFollow(Follow._abstract_declarator_suffix_in_direct_abstract_declarator1151);
					abstract_declarator_suffix();
					PopFollow();
					if (state.failed) return;

					}
					break;

				default:
					goto loop39;
				}
			}

			loop39:
				;

			} finally { DebugExitSubRule(39); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("direct_abstract_declarator", 32);
			LeaveRule("direct_abstract_declarator", 32);
			LeaveRule_direct_abstract_declarator();
	        if (state.backtracking > 0) { Memoize(input, 32, direct_abstract_declarator_StartIndex); }

	    }
	 	DebugLocation(547, 1);
		} finally { DebugExitRule(GrammarFileName, "direct_abstract_declarator"); }
		return;

	}
	// $ANTLR end "direct_abstract_declarator"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_abstract_declarator_suffix() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_abstract_declarator_suffix() {}

	// $ANTLR start "abstract_declarator_suffix"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:551:1: abstract_declarator_suffix : ( '[' ']' | '[' constant_expression ']' | '(' ')' | '(' parameter_type_list ')' );
	[GrammarRule("abstract_declarator_suffix")]
	private void abstract_declarator_suffix()
	{
		EnterRule_abstract_declarator_suffix();
		EnterRule("abstract_declarator_suffix", 33);
		TraceIn("abstract_declarator_suffix", 33);
	    int abstract_declarator_suffix_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "abstract_declarator_suffix");
		DebugLocation(551, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 33)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:553:2: ( '[' ']' | '[' constant_expression ']' | '(' ')' | '(' parameter_type_list ')' )
			int alt40=4;
			try { DebugEnterDecision(40, decisionCanBacktrack[40]);
			int LA40_0 = input.LA(1);

			if ((LA40_0==59))
			{
				int LA40_1 = input.LA(2);

				if ((LA40_1==60))
				{
					alt40 = 1;
				}
				else if ((LA40_1==CHARACTER_LITERAL||LA40_1==DECIMAL_LITERAL||LA40_1==FLOATING_POINT_LITERAL||LA40_1==HEX_LITERAL||LA40_1==IDENTIFIER||LA40_1==OCTAL_LITERAL||LA40_1==STRING_LITERAL||LA40_1==23||LA40_1==28||LA40_1==30||LA40_1==32||(LA40_1>=34 && LA40_1<=35)||(LA40_1>=38 && LA40_1<=39)||LA40_1==85||LA40_1==100))
				{
					alt40 = 2;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 40, 1, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else if ((LA40_0==30))
			{
				int LA40_2 = input.LA(2);

				if ((LA40_2==31))
				{
					alt40 = 3;
				}
				else if ((LA40_2==IDENTIFIER||LA40_2==63||(LA40_2>=66 && LA40_2<=67)||LA40_2==71||(LA40_2>=73 && LA40_2<=75)||(LA40_2>=79 && LA40_2<=81)||(LA40_2>=83 && LA40_2<=84)||(LA40_2>=86 && LA40_2<=87)||(LA40_2>=90 && LA40_2<=93)))
				{
					alt40 = 4;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 40, 2, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae = new NoViableAltException("", 40, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(40); }
			switch (alt40)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:553:4: '[' ']'
				{
				DebugLocation(553, 4);
				Match(input,59,Follow._59_in_abstract_declarator_suffix1167); if (state.failed) return;
				DebugLocation(553, 8);
				Match(input,60,Follow._60_in_abstract_declarator_suffix1169); if (state.failed) return;

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:555:4: '[' constant_expression ']'
				{
				DebugLocation(555, 4);
				Match(input,59,Follow._59_in_abstract_declarator_suffix1175); if (state.failed) return;
				DebugLocation(555, 8);
				PushFollow(Follow._constant_expression_in_abstract_declarator_suffix1177);
				constant_expression();
				PopFollow();
				if (state.failed) return;
				DebugLocation(555, 28);
				Match(input,60,Follow._60_in_abstract_declarator_suffix1179); if (state.failed) return;

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:557:4: '(' ')'
				{
				DebugLocation(557, 4);
				Match(input,30,Follow._30_in_abstract_declarator_suffix1185); if (state.failed) return;
				DebugLocation(557, 8);
				Match(input,31,Follow._31_in_abstract_declarator_suffix1187); if (state.failed) return;

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:559:4: '(' parameter_type_list ')'
				{
				DebugLocation(559, 4);
				Match(input,30,Follow._30_in_abstract_declarator_suffix1193); if (state.failed) return;
				DebugLocation(559, 8);
				PushFollow(Follow._parameter_type_list_in_abstract_declarator_suffix1195);
				parameter_type_list();
				PopFollow();
				if (state.failed) return;
				DebugLocation(559, 28);
				Match(input,31,Follow._31_in_abstract_declarator_suffix1197); if (state.failed) return;

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("abstract_declarator_suffix", 33);
			LeaveRule("abstract_declarator_suffix", 33);
			LeaveRule_abstract_declarator_suffix();
	        if (state.backtracking > 0) { Memoize(input, 33, abstract_declarator_suffix_StartIndex); }

	    }
	 	DebugLocation(561, 1);
		} finally { DebugExitRule(GrammarFileName, "abstract_declarator_suffix"); }
		return;

	}
	// $ANTLR end "abstract_declarator_suffix"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_initializer() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_initializer() {}

	// $ANTLR start "initializer"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:565:1: initializer : ( assignment_expression | '{' initializer_list ( ',' )? '}' );
	[GrammarRule("initializer")]
	private void initializer()
	{
		EnterRule_initializer();
		EnterRule("initializer", 34);
		TraceIn("initializer", 34);
	    int initializer_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "initializer");
		DebugLocation(565, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 34)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:567:2: ( assignment_expression | '{' initializer_list ( ',' )? '}' )
			int alt42=2;
			try { DebugEnterDecision(42, decisionCanBacktrack[42]);
			int LA42_0 = input.LA(1);

			if ((LA42_0==CHARACTER_LITERAL||LA42_0==DECIMAL_LITERAL||LA42_0==FLOATING_POINT_LITERAL||LA42_0==HEX_LITERAL||LA42_0==IDENTIFIER||LA42_0==OCTAL_LITERAL||LA42_0==STRING_LITERAL||LA42_0==23||LA42_0==28||LA42_0==30||LA42_0==32||(LA42_0>=34 && LA42_0<=35)||(LA42_0>=38 && LA42_0<=39)||LA42_0==85||LA42_0==100))
			{
				alt42 = 1;
			}
			else if ((LA42_0==95))
			{
				alt42 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae = new NoViableAltException("", 42, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(42); }
			switch (alt42)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:567:4: assignment_expression
				{
				DebugLocation(567, 4);
				PushFollow(Follow._assignment_expression_in_initializer1213);
				assignment_expression();
				PopFollow();
				if (state.failed) return;

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:569:4: '{' initializer_list ( ',' )? '}'
				{
				DebugLocation(569, 4);
				Match(input,95,Follow._95_in_initializer1219); if (state.failed) return;
				DebugLocation(569, 8);
				PushFollow(Follow._initializer_list_in_initializer1221);
				initializer_list();
				PopFollow();
				if (state.failed) return;
				DebugLocation(569, 25);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:569:25: ( ',' )?
				int alt41=2;
				try { DebugEnterSubRule(41);
				try { DebugEnterDecision(41, decisionCanBacktrack[41]);
				int LA41_0 = input.LA(1);

				if ((LA41_0==37))
				{
					alt41 = 1;
				}
				} finally { DebugExitDecision(41); }
				switch (alt41)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:569:25: ','
					{
					DebugLocation(569, 25);
					Match(input,37,Follow._37_in_initializer1223); if (state.failed) return;

					}
					break;

				}
				} finally { DebugExitSubRule(41); }

				DebugLocation(569, 30);
				Match(input,99,Follow._99_in_initializer1226); if (state.failed) return;

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("initializer", 34);
			LeaveRule("initializer", 34);
			LeaveRule_initializer();
	        if (state.backtracking > 0) { Memoize(input, 34, initializer_StartIndex); }

	    }
	 	DebugLocation(571, 1);
		} finally { DebugExitRule(GrammarFileName, "initializer"); }
		return;

	}
	// $ANTLR end "initializer"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_initializer_list() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_initializer_list() {}

	// $ANTLR start "initializer_list"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:575:1: initializer_list : initializer ( ',' initializer )* ;
	[GrammarRule("initializer_list")]
	private void initializer_list()
	{
		EnterRule_initializer_list();
		EnterRule("initializer_list", 35);
		TraceIn("initializer_list", 35);
	    int initializer_list_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "initializer_list");
		DebugLocation(575, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 35)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:577:2: ( initializer ( ',' initializer )* )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:577:4: initializer ( ',' initializer )*
			{
			DebugLocation(577, 4);
			PushFollow(Follow._initializer_in_initializer_list1241);
			initializer();
			PopFollow();
			if (state.failed) return;
			DebugLocation(577, 16);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:577:16: ( ',' initializer )*
			try { DebugEnterSubRule(43);
			while (true)
			{
				int alt43=2;
				try { DebugEnterDecision(43, decisionCanBacktrack[43]);
				int LA43_0 = input.LA(1);

				if ((LA43_0==37))
				{
					int LA43_1 = input.LA(2);

					if ((LA43_1==CHARACTER_LITERAL||LA43_1==DECIMAL_LITERAL||LA43_1==FLOATING_POINT_LITERAL||LA43_1==HEX_LITERAL||LA43_1==IDENTIFIER||LA43_1==OCTAL_LITERAL||LA43_1==STRING_LITERAL||LA43_1==23||LA43_1==28||LA43_1==30||LA43_1==32||(LA43_1>=34 && LA43_1<=35)||(LA43_1>=38 && LA43_1<=39)||LA43_1==85||LA43_1==95||LA43_1==100))
					{
						alt43 = 1;
					}


				}


				} finally { DebugExitDecision(43); }
				switch ( alt43 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:577:17: ',' initializer
					{
					DebugLocation(577, 17);
					Match(input,37,Follow._37_in_initializer_list1244); if (state.failed) return;
					DebugLocation(577, 21);
					PushFollow(Follow._initializer_in_initializer_list1246);
					initializer();
					PopFollow();
					if (state.failed) return;

					}
					break;

				default:
					goto loop43;
				}
			}

			loop43:
				;

			} finally { DebugExitSubRule(43); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("initializer_list", 35);
			LeaveRule("initializer_list", 35);
			LeaveRule_initializer_list();
	        if (state.backtracking > 0) { Memoize(input, 35, initializer_list_StartIndex); }

	    }
	 	DebugLocation(579, 1);
		} finally { DebugExitRule(GrammarFileName, "initializer_list"); }
		return;

	}
	// $ANTLR end "initializer_list"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_argument_expression_list() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_argument_expression_list() {}

	// $ANTLR start "argument_expression_list"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:587:1: argument_expression_list : assignment_expression ( ',' assignment_expression )* ;
	[GrammarRule("argument_expression_list")]
	private void argument_expression_list()
	{
		EnterRule_argument_expression_list();
		EnterRule("argument_expression_list", 36);
		TraceIn("argument_expression_list", 36);
	    int argument_expression_list_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "argument_expression_list");
		DebugLocation(587, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 36)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:589:2: ( assignment_expression ( ',' assignment_expression )* )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:589:6: assignment_expression ( ',' assignment_expression )*
			{
			DebugLocation(589, 6);
			PushFollow(Follow._assignment_expression_in_argument_expression_list1269);
			assignment_expression();
			PopFollow();
			if (state.failed) return;
			DebugLocation(589, 28);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:589:28: ( ',' assignment_expression )*
			try { DebugEnterSubRule(44);
			while (true)
			{
				int alt44=2;
				try { DebugEnterDecision(44, decisionCanBacktrack[44]);
				int LA44_0 = input.LA(1);

				if ((LA44_0==37))
				{
					alt44 = 1;
				}


				} finally { DebugExitDecision(44); }
				switch ( alt44 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:589:29: ',' assignment_expression
					{
					DebugLocation(589, 29);
					Match(input,37,Follow._37_in_argument_expression_list1272); if (state.failed) return;
					DebugLocation(589, 33);
					PushFollow(Follow._assignment_expression_in_argument_expression_list1274);
					assignment_expression();
					PopFollow();
					if (state.failed) return;

					}
					break;

				default:
					goto loop44;
				}
			}

			loop44:
				;

			} finally { DebugExitSubRule(44); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("argument_expression_list", 36);
			LeaveRule("argument_expression_list", 36);
			LeaveRule_argument_expression_list();
	        if (state.backtracking > 0) { Memoize(input, 36, argument_expression_list_StartIndex); }

	    }
	 	DebugLocation(591, 1);
		} finally { DebugExitRule(GrammarFileName, "argument_expression_list"); }
		return;

	}
	// $ANTLR end "argument_expression_list"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_additive_expression() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_additive_expression() {}

	// $ANTLR start "additive_expression"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:595:1: additive_expression : ( multiplicative_expression ) ( '+' multiplicative_expression | '-' multiplicative_expression )* ;
	[GrammarRule("additive_expression")]
	private void additive_expression()
	{
		EnterRule_additive_expression();
		EnterRule("additive_expression", 37);
		TraceIn("additive_expression", 37);
	    int additive_expression_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "additive_expression");
		DebugLocation(595, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 37)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:597:2: ( ( multiplicative_expression ) ( '+' multiplicative_expression | '-' multiplicative_expression )* )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:597:4: ( multiplicative_expression ) ( '+' multiplicative_expression | '-' multiplicative_expression )*
			{
			DebugLocation(597, 4);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:597:4: ( multiplicative_expression )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:597:5: multiplicative_expression
			{
			DebugLocation(597, 5);
			PushFollow(Follow._multiplicative_expression_in_additive_expression1292);
			multiplicative_expression();
			PopFollow();
			if (state.failed) return;

			}

			DebugLocation(597, 32);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:597:32: ( '+' multiplicative_expression | '-' multiplicative_expression )*
			try { DebugEnterSubRule(45);
			while (true)
			{
				int alt45=3;
				try { DebugEnterDecision(45, decisionCanBacktrack[45]);
				int LA45_0 = input.LA(1);

				if ((LA45_0==34))
				{
					alt45 = 1;
				}
				else if ((LA45_0==38))
				{
					alt45 = 2;
				}


				} finally { DebugExitDecision(45); }
				switch ( alt45 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:597:33: '+' multiplicative_expression
					{
					DebugLocation(597, 33);
					Match(input,34,Follow._34_in_additive_expression1296); if (state.failed) return;
					DebugLocation(597, 37);
					PushFollow(Follow._multiplicative_expression_in_additive_expression1298);
					multiplicative_expression();
					PopFollow();
					if (state.failed) return;

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:597:65: '-' multiplicative_expression
					{
					DebugLocation(597, 65);
					Match(input,38,Follow._38_in_additive_expression1302); if (state.failed) return;
					DebugLocation(597, 69);
					PushFollow(Follow._multiplicative_expression_in_additive_expression1304);
					multiplicative_expression();
					PopFollow();
					if (state.failed) return;

					}
					break;

				default:
					goto loop45;
				}
			}

			loop45:
				;

			} finally { DebugExitSubRule(45); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("additive_expression", 37);
			LeaveRule("additive_expression", 37);
			LeaveRule_additive_expression();
	        if (state.backtracking > 0) { Memoize(input, 37, additive_expression_StartIndex); }

	    }
	 	DebugLocation(599, 1);
		} finally { DebugExitRule(GrammarFileName, "additive_expression"); }
		return;

	}
	// $ANTLR end "additive_expression"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_multiplicative_expression() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_multiplicative_expression() {}

	// $ANTLR start "multiplicative_expression"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:603:1: multiplicative_expression : ( cast_expression ) ( '*' cast_expression | '/' cast_expression | '%' cast_expression )* ;
	[GrammarRule("multiplicative_expression")]
	private void multiplicative_expression()
	{
		EnterRule_multiplicative_expression();
		EnterRule("multiplicative_expression", 38);
		TraceIn("multiplicative_expression", 38);
	    int multiplicative_expression_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "multiplicative_expression");
		DebugLocation(603, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 38)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:605:2: ( ( cast_expression ) ( '*' cast_expression | '/' cast_expression | '%' cast_expression )* )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:605:4: ( cast_expression ) ( '*' cast_expression | '/' cast_expression | '%' cast_expression )*
			{
			DebugLocation(605, 4);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:605:4: ( cast_expression )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:605:5: cast_expression
			{
			DebugLocation(605, 5);
			PushFollow(Follow._cast_expression_in_multiplicative_expression1322);
			cast_expression();
			PopFollow();
			if (state.failed) return;

			}

			DebugLocation(605, 22);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:605:22: ( '*' cast_expression | '/' cast_expression | '%' cast_expression )*
			try { DebugEnterSubRule(46);
			while (true)
			{
				int alt46=4;
				try { DebugEnterDecision(46, decisionCanBacktrack[46]);
				switch (input.LA(1))
				{
				case 32:
					{
					alt46 = 1;
					}
					break;
				case 44:
					{
					alt46 = 2;
					}
					break;
				case 25:
					{
					alt46 = 3;
					}
					break;
				}

				} finally { DebugExitDecision(46); }
				switch ( alt46 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:605:23: '*' cast_expression
					{
					DebugLocation(605, 23);
					Match(input,32,Follow._32_in_multiplicative_expression1326); if (state.failed) return;
					DebugLocation(605, 27);
					PushFollow(Follow._cast_expression_in_multiplicative_expression1328);
					cast_expression();
					PopFollow();
					if (state.failed) return;

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:605:45: '/' cast_expression
					{
					DebugLocation(605, 45);
					Match(input,44,Follow._44_in_multiplicative_expression1332); if (state.failed) return;
					DebugLocation(605, 49);
					PushFollow(Follow._cast_expression_in_multiplicative_expression1334);
					cast_expression();
					PopFollow();
					if (state.failed) return;

					}
					break;
				case 3:
					DebugEnterAlt(3);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:605:67: '%' cast_expression
					{
					DebugLocation(605, 67);
					Match(input,25,Follow._25_in_multiplicative_expression1338); if (state.failed) return;
					DebugLocation(605, 71);
					PushFollow(Follow._cast_expression_in_multiplicative_expression1340);
					cast_expression();
					PopFollow();
					if (state.failed) return;

					}
					break;

				default:
					goto loop46;
				}
			}

			loop46:
				;

			} finally { DebugExitSubRule(46); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("multiplicative_expression", 38);
			LeaveRule("multiplicative_expression", 38);
			LeaveRule_multiplicative_expression();
	        if (state.backtracking > 0) { Memoize(input, 38, multiplicative_expression_StartIndex); }

	    }
	 	DebugLocation(607, 1);
		} finally { DebugExitRule(GrammarFileName, "multiplicative_expression"); }
		return;

	}
	// $ANTLR end "multiplicative_expression"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_cast_expression() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_cast_expression() {}

	// $ANTLR start "cast_expression"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:611:1: cast_expression : ( '(' type_name ')' cast_expression | unary_expression );
	[GrammarRule("cast_expression")]
	private void cast_expression()
	{
		EnterRule_cast_expression();
		EnterRule("cast_expression", 39);
		TraceIn("cast_expression", 39);
	    int cast_expression_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "cast_expression");
		DebugLocation(611, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 39)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:613:2: ( '(' type_name ')' cast_expression | unary_expression )
			int alt47=2;
			try { DebugEnterDecision(47, decisionCanBacktrack[47]);
			int LA47_0 = input.LA(1);

			if ((LA47_0==30))
			{
				switch (input.LA(2))
				{
				case 66:
				case 67:
				case 71:
				case 73:
				case 75:
				case 79:
				case 80:
				case 83:
				case 84:
				case 87:
				case 90:
				case 91:
				case 92:
				case 93:
					{
					alt47 = 1;
					}
					break;
				case IDENTIFIER:
					{
					int LA47_20 = input.LA(3);

					if ((EvaluatePredicate(synpred78_C_fragment)))
					{
						alt47 = 1;
					}
					else if ((true))
					{
						alt47 = 2;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae = new NoViableAltException("", 47, 20, input);
						DebugRecognitionException(nvae);
						throw nvae;
					}
					}
					break;
				case CHARACTER_LITERAL:
				case DECIMAL_LITERAL:
				case FLOATING_POINT_LITERAL:
				case HEX_LITERAL:
				case OCTAL_LITERAL:
				case STRING_LITERAL:
				case 23:
				case 28:
				case 30:
				case 32:
				case 34:
				case 35:
				case 38:
				case 39:
				case 85:
				case 100:
					{
					alt47 = 2;
					}
					break;
				default:
					{
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae = new NoViableAltException("", 47, 1, input);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}

			}
			else if ((LA47_0==CHARACTER_LITERAL||LA47_0==DECIMAL_LITERAL||LA47_0==FLOATING_POINT_LITERAL||LA47_0==HEX_LITERAL||LA47_0==IDENTIFIER||LA47_0==OCTAL_LITERAL||LA47_0==STRING_LITERAL||LA47_0==23||LA47_0==28||LA47_0==32||(LA47_0>=34 && LA47_0<=35)||(LA47_0>=38 && LA47_0<=39)||LA47_0==85||LA47_0==100))
			{
				alt47 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae = new NoViableAltException("", 47, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(47); }
			switch (alt47)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:613:4: '(' type_name ')' cast_expression
				{
				DebugLocation(613, 4);
				Match(input,30,Follow._30_in_cast_expression1357); if (state.failed) return;
				DebugLocation(613, 8);
				PushFollow(Follow._type_name_in_cast_expression1359);
				type_name();
				PopFollow();
				if (state.failed) return;
				DebugLocation(613, 18);
				Match(input,31,Follow._31_in_cast_expression1361); if (state.failed) return;
				DebugLocation(613, 22);
				PushFollow(Follow._cast_expression_in_cast_expression1363);
				cast_expression();
				PopFollow();
				if (state.failed) return;

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:615:4: unary_expression
				{
				DebugLocation(615, 4);
				PushFollow(Follow._unary_expression_in_cast_expression1369);
				unary_expression();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("cast_expression", 39);
			LeaveRule("cast_expression", 39);
			LeaveRule_cast_expression();
	        if (state.backtracking > 0) { Memoize(input, 39, cast_expression_StartIndex); }

	    }
	 	DebugLocation(617, 1);
		} finally { DebugExitRule(GrammarFileName, "cast_expression"); }
		return;

	}
	// $ANTLR end "cast_expression"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_unary_expression() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_unary_expression() {}

	// $ANTLR start "unary_expression"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:621:1: unary_expression : ( postfix_expression | '++' unary_expression | '--' unary_expression | unary_operator cast_expression | 'sizeof' unary_expression | 'sizeof' '(' type_name ')' );
	[GrammarRule("unary_expression")]
	private void unary_expression()
	{
		EnterRule_unary_expression();
		EnterRule("unary_expression", 40);
		TraceIn("unary_expression", 40);
	    int unary_expression_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "unary_expression");
		DebugLocation(621, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 40)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:623:2: ( postfix_expression | '++' unary_expression | '--' unary_expression | unary_operator cast_expression | 'sizeof' unary_expression | 'sizeof' '(' type_name ')' )
			int alt48=6;
			try { DebugEnterDecision(48, decisionCanBacktrack[48]);
			switch (input.LA(1))
			{
			case CHARACTER_LITERAL:
			case DECIMAL_LITERAL:
			case FLOATING_POINT_LITERAL:
			case HEX_LITERAL:
			case IDENTIFIER:
			case OCTAL_LITERAL:
			case STRING_LITERAL:
			case 30:
				{
				alt48 = 1;
				}
				break;
			case 35:
				{
				alt48 = 2;
				}
				break;
			case 39:
				{
				alt48 = 3;
				}
				break;
			case 23:
			case 28:
			case 32:
			case 34:
			case 38:
			case 100:
				{
				alt48 = 4;
				}
				break;
			case 85:
				{
				int LA48_7 = input.LA(2);

				if ((LA48_7==30))
				{
					int LA48_8 = input.LA(3);

					if ((EvaluatePredicate(synpred83_C_fragment)))
					{
						alt48 = 5;
					}
					else if ((true))
					{
						alt48 = 6;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return;}
						NoViableAltException nvae = new NoViableAltException("", 48, 8, input);
						DebugRecognitionException(nvae);
						throw nvae;
					}
				}
				else if ((LA48_7==CHARACTER_LITERAL||LA48_7==DECIMAL_LITERAL||LA48_7==FLOATING_POINT_LITERAL||LA48_7==HEX_LITERAL||LA48_7==IDENTIFIER||LA48_7==OCTAL_LITERAL||LA48_7==STRING_LITERAL||LA48_7==23||LA48_7==28||LA48_7==32||(LA48_7>=34 && LA48_7<=35)||(LA48_7>=38 && LA48_7<=39)||LA48_7==85||LA48_7==100))
				{
					alt48 = 5;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 48, 7, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 48, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(48); }
			switch (alt48)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:623:4: postfix_expression
				{
				DebugLocation(623, 4);
				PushFollow(Follow._postfix_expression_in_unary_expression1384);
				postfix_expression();
				PopFollow();
				if (state.failed) return;

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:625:4: '++' unary_expression
				{
				DebugLocation(625, 4);
				Match(input,35,Follow._35_in_unary_expression1390); if (state.failed) return;
				DebugLocation(625, 9);
				PushFollow(Follow._unary_expression_in_unary_expression1392);
				unary_expression();
				PopFollow();
				if (state.failed) return;

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:627:4: '--' unary_expression
				{
				DebugLocation(627, 4);
				Match(input,39,Follow._39_in_unary_expression1398); if (state.failed) return;
				DebugLocation(627, 9);
				PushFollow(Follow._unary_expression_in_unary_expression1400);
				unary_expression();
				PopFollow();
				if (state.failed) return;

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:629:4: unary_operator cast_expression
				{
				DebugLocation(629, 4);
				PushFollow(Follow._unary_operator_in_unary_expression1406);
				unary_operator();
				PopFollow();
				if (state.failed) return;
				DebugLocation(629, 19);
				PushFollow(Follow._cast_expression_in_unary_expression1408);
				cast_expression();
				PopFollow();
				if (state.failed) return;

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:631:4: 'sizeof' unary_expression
				{
				DebugLocation(631, 4);
				Match(input,85,Follow._85_in_unary_expression1414); if (state.failed) return;
				DebugLocation(631, 13);
				PushFollow(Follow._unary_expression_in_unary_expression1416);
				unary_expression();
				PopFollow();
				if (state.failed) return;

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:633:4: 'sizeof' '(' type_name ')'
				{
				DebugLocation(633, 4);
				Match(input,85,Follow._85_in_unary_expression1422); if (state.failed) return;
				DebugLocation(633, 13);
				Match(input,30,Follow._30_in_unary_expression1424); if (state.failed) return;
				DebugLocation(633, 17);
				PushFollow(Follow._type_name_in_unary_expression1426);
				type_name();
				PopFollow();
				if (state.failed) return;
				DebugLocation(633, 27);
				Match(input,31,Follow._31_in_unary_expression1428); if (state.failed) return;

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("unary_expression", 40);
			LeaveRule("unary_expression", 40);
			LeaveRule_unary_expression();
	        if (state.backtracking > 0) { Memoize(input, 40, unary_expression_StartIndex); }

	    }
	 	DebugLocation(635, 1);
		} finally { DebugExitRule(GrammarFileName, "unary_expression"); }
		return;

	}
	// $ANTLR end "unary_expression"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_postfix_expression() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_postfix_expression() {}

	// $ANTLR start "postfix_expression"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:639:1: postfix_expression : primary_expression ( '[' expression ']' | '(' ')' | '(' argument_expression_list ')' | '.' IDENTIFIER | '*' IDENTIFIER | '->' IDENTIFIER | '++' | '--' )* ;
	[GrammarRule("postfix_expression")]
	private void postfix_expression()
	{
		EnterRule_postfix_expression();
		EnterRule("postfix_expression", 41);
		TraceIn("postfix_expression", 41);
	    int postfix_expression_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "postfix_expression");
		DebugLocation(639, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 41)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:641:2: ( primary_expression ( '[' expression ']' | '(' ')' | '(' argument_expression_list ')' | '.' IDENTIFIER | '*' IDENTIFIER | '->' IDENTIFIER | '++' | '--' )* )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:641:6: primary_expression ( '[' expression ']' | '(' ')' | '(' argument_expression_list ')' | '.' IDENTIFIER | '*' IDENTIFIER | '->' IDENTIFIER | '++' | '--' )*
			{
			DebugLocation(641, 6);
			PushFollow(Follow._primary_expression_in_postfix_expression1445);
			primary_expression();
			PopFollow();
			if (state.failed) return;
			DebugLocation(643, 9);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:643:9: ( '[' expression ']' | '(' ')' | '(' argument_expression_list ')' | '.' IDENTIFIER | '*' IDENTIFIER | '->' IDENTIFIER | '++' | '--' )*
			try { DebugEnterSubRule(49);
			while (true)
			{
				int alt49=9;
				try { DebugEnterDecision(49, decisionCanBacktrack[49]);
				switch (input.LA(1))
				{
				case 32:
					{
					int LA49_1 = input.LA(2);

					if ((LA49_1==IDENTIFIER))
					{
						int LA49_29 = input.LA(3);

						if ((EvaluatePredicate(synpred88_C_fragment)))
						{
							alt49 = 5;
						}


					}


					}
					break;
				case 59:
					{
					alt49 = 1;
					}
					break;
				case 30:
					{
					int LA49_24 = input.LA(2);

					if ((LA49_24==31))
					{
						alt49 = 2;
					}
					else if ((LA49_24==CHARACTER_LITERAL||LA49_24==DECIMAL_LITERAL||LA49_24==FLOATING_POINT_LITERAL||LA49_24==HEX_LITERAL||LA49_24==IDENTIFIER||LA49_24==OCTAL_LITERAL||LA49_24==STRING_LITERAL||LA49_24==23||LA49_24==28||LA49_24==30||LA49_24==32||(LA49_24>=34 && LA49_24<=35)||(LA49_24>=38 && LA49_24<=39)||LA49_24==85||LA49_24==100))
					{
						alt49 = 3;
					}


					}
					break;
				case 42:
					{
					alt49 = 4;
					}
					break;
				case 41:
					{
					alt49 = 6;
					}
					break;
				case 35:
					{
					alt49 = 7;
					}
					break;
				case 39:
					{
					alt49 = 8;
					}
					break;
				}

				} finally { DebugExitDecision(49); }
				switch ( alt49 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:643:13: '[' expression ']'
					{
					DebugLocation(643, 13);
					Match(input,59,Follow._59_in_postfix_expression1460); if (state.failed) return;
					DebugLocation(643, 17);
					PushFollow(Follow._expression_in_postfix_expression1462);
					expression();
					PopFollow();
					if (state.failed) return;
					DebugLocation(643, 28);
					Match(input,60,Follow._60_in_postfix_expression1464); if (state.failed) return;

					}
					break;
				case 2:
					DebugEnterAlt(2);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:645:13: '(' ')'
					{
					DebugLocation(645, 13);
					Match(input,30,Follow._30_in_postfix_expression1479); if (state.failed) return;
					DebugLocation(645, 17);
					Match(input,31,Follow._31_in_postfix_expression1481); if (state.failed) return;

					}
					break;
				case 3:
					DebugEnterAlt(3);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:647:13: '(' argument_expression_list ')'
					{
					DebugLocation(647, 13);
					Match(input,30,Follow._30_in_postfix_expression1496); if (state.failed) return;
					DebugLocation(647, 17);
					PushFollow(Follow._argument_expression_list_in_postfix_expression1498);
					argument_expression_list();
					PopFollow();
					if (state.failed) return;
					DebugLocation(647, 42);
					Match(input,31,Follow._31_in_postfix_expression1500); if (state.failed) return;

					}
					break;
				case 4:
					DebugEnterAlt(4);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:649:13: '.' IDENTIFIER
					{
					DebugLocation(649, 13);
					Match(input,42,Follow._42_in_postfix_expression1515); if (state.failed) return;
					DebugLocation(649, 17);
					Match(input,IDENTIFIER,Follow._IDENTIFIER_in_postfix_expression1517); if (state.failed) return;

					}
					break;
				case 5:
					DebugEnterAlt(5);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:651:13: '*' IDENTIFIER
					{
					DebugLocation(651, 13);
					Match(input,32,Follow._32_in_postfix_expression1532); if (state.failed) return;
					DebugLocation(651, 17);
					Match(input,IDENTIFIER,Follow._IDENTIFIER_in_postfix_expression1534); if (state.failed) return;

					}
					break;
				case 6:
					DebugEnterAlt(6);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:653:13: '->' IDENTIFIER
					{
					DebugLocation(653, 13);
					Match(input,41,Follow._41_in_postfix_expression1549); if (state.failed) return;
					DebugLocation(653, 18);
					Match(input,IDENTIFIER,Follow._IDENTIFIER_in_postfix_expression1551); if (state.failed) return;

					}
					break;
				case 7:
					DebugEnterAlt(7);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:655:13: '++'
					{
					DebugLocation(655, 13);
					Match(input,35,Follow._35_in_postfix_expression1566); if (state.failed) return;

					}
					break;
				case 8:
					DebugEnterAlt(8);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:657:13: '--'
					{
					DebugLocation(657, 13);
					Match(input,39,Follow._39_in_postfix_expression1581); if (state.failed) return;

					}
					break;

				default:
					goto loop49;
				}
			}

			loop49:
				;

			} finally { DebugExitSubRule(49); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("postfix_expression", 41);
			LeaveRule("postfix_expression", 41);
			LeaveRule_postfix_expression();
	        if (state.backtracking > 0) { Memoize(input, 41, postfix_expression_StartIndex); }

	    }
	 	DebugLocation(661, 1);
		} finally { DebugExitRule(GrammarFileName, "postfix_expression"); }
		return;

	}
	// $ANTLR end "postfix_expression"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_unary_operator() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_unary_operator() {}

	// $ANTLR start "unary_operator"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:665:1: unary_operator : ( '&' | '*' | '+' | '-' | '~' | '!' );
	[GrammarRule("unary_operator")]
	private void unary_operator()
	{
		EnterRule_unary_operator();
		EnterRule("unary_operator", 42);
		TraceIn("unary_operator", 42);
	    int unary_operator_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "unary_operator");
		DebugLocation(665, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 42)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:667:2: ( '&' | '*' | '+' | '-' | '~' | '!' )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:
			{
			DebugLocation(667, 2);
			if (input.LA(1)==23||input.LA(1)==28||input.LA(1)==32||input.LA(1)==34||input.LA(1)==38||input.LA(1)==100)
			{
				input.Consume();
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("unary_operator", 42);
			LeaveRule("unary_operator", 42);
			LeaveRule_unary_operator();
	        if (state.backtracking > 0) { Memoize(input, 42, unary_operator_StartIndex); }

	    }
	 	DebugLocation(679, 1);
		} finally { DebugExitRule(GrammarFileName, "unary_operator"); }
		return;

	}
	// $ANTLR end "unary_operator"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_primary_expression() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_primary_expression() {}

	// $ANTLR start "primary_expression"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:683:1: primary_expression : ( IDENTIFIER | constant | '(' expression ')' );
	[GrammarRule("primary_expression")]
	private void primary_expression()
	{
		EnterRule_primary_expression();
		EnterRule("primary_expression", 43);
		TraceIn("primary_expression", 43);
	    int primary_expression_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "primary_expression");
		DebugLocation(683, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 43)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:685:2: ( IDENTIFIER | constant | '(' expression ')' )
			int alt50=3;
			try { DebugEnterDecision(50, decisionCanBacktrack[50]);
			switch (input.LA(1))
			{
			case IDENTIFIER:
				{
				alt50 = 1;
				}
				break;
			case CHARACTER_LITERAL:
			case DECIMAL_LITERAL:
			case FLOATING_POINT_LITERAL:
			case HEX_LITERAL:
			case OCTAL_LITERAL:
			case STRING_LITERAL:
				{
				alt50 = 2;
				}
				break;
			case 30:
				{
				alt50 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 50, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(50); }
			switch (alt50)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:685:4: IDENTIFIER
				{
				DebugLocation(685, 4);
				Match(input,IDENTIFIER,Follow._IDENTIFIER_in_primary_expression1653); if (state.failed) return;

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:687:4: constant
				{
				DebugLocation(687, 4);
				PushFollow(Follow._constant_in_primary_expression1659);
				constant();
				PopFollow();
				if (state.failed) return;

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:689:4: '(' expression ')'
				{
				DebugLocation(689, 4);
				Match(input,30,Follow._30_in_primary_expression1665); if (state.failed) return;
				DebugLocation(689, 8);
				PushFollow(Follow._expression_in_primary_expression1667);
				expression();
				PopFollow();
				if (state.failed) return;
				DebugLocation(689, 19);
				Match(input,31,Follow._31_in_primary_expression1669); if (state.failed) return;

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("primary_expression", 43);
			LeaveRule("primary_expression", 43);
			LeaveRule_primary_expression();
	        if (state.backtracking > 0) { Memoize(input, 43, primary_expression_StartIndex); }

	    }
	 	DebugLocation(691, 1);
		} finally { DebugExitRule(GrammarFileName, "primary_expression"); }
		return;

	}
	// $ANTLR end "primary_expression"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_constant() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_constant() {}

	// $ANTLR start "constant"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:695:1: constant : ( HEX_LITERAL | OCTAL_LITERAL | DECIMAL_LITERAL | CHARACTER_LITERAL | STRING_LITERAL | FLOATING_POINT_LITERAL );
	[GrammarRule("constant")]
	private void constant()
	{
		EnterRule_constant();
		EnterRule("constant", 44);
		TraceIn("constant", 44);
	    int constant_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "constant");
		DebugLocation(695, 4);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 44)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:697:5: ( HEX_LITERAL | OCTAL_LITERAL | DECIMAL_LITERAL | CHARACTER_LITERAL | STRING_LITERAL | FLOATING_POINT_LITERAL )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:
			{
			DebugLocation(697, 5);
			if (input.LA(1)==CHARACTER_LITERAL||input.LA(1)==DECIMAL_LITERAL||input.LA(1)==FLOATING_POINT_LITERAL||input.LA(1)==HEX_LITERAL||input.LA(1)==OCTAL_LITERAL||input.LA(1)==STRING_LITERAL)
			{
				input.Consume();
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("constant", 44);
			LeaveRule("constant", 44);
			LeaveRule_constant();
	        if (state.backtracking > 0) { Memoize(input, 44, constant_StartIndex); }

	    }
	 	DebugLocation(709, 4);
		} finally { DebugExitRule(GrammarFileName, "constant"); }
		return;

	}
	// $ANTLR end "constant"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_expression() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_expression() {}

	// $ANTLR start "expression"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:717:1: expression : assignment_expression ( ',' assignment_expression )* ;
	[GrammarRule("expression")]
	private void expression()
	{
		EnterRule_expression();
		EnterRule("expression", 45);
		TraceIn("expression", 45);
	    int expression_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "expression");
		DebugLocation(717, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 45)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:719:2: ( assignment_expression ( ',' assignment_expression )* )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:719:4: assignment_expression ( ',' assignment_expression )*
			{
			DebugLocation(719, 4);
			PushFollow(Follow._assignment_expression_in_expression1759);
			assignment_expression();
			PopFollow();
			if (state.failed) return;
			DebugLocation(719, 26);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:719:26: ( ',' assignment_expression )*
			try { DebugEnterSubRule(51);
			while (true)
			{
				int alt51=2;
				try { DebugEnterDecision(51, decisionCanBacktrack[51]);
				int LA51_0 = input.LA(1);

				if ((LA51_0==37))
				{
					alt51 = 1;
				}


				} finally { DebugExitDecision(51); }
				switch ( alt51 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:719:27: ',' assignment_expression
					{
					DebugLocation(719, 27);
					Match(input,37,Follow._37_in_expression1762); if (state.failed) return;
					DebugLocation(719, 31);
					PushFollow(Follow._assignment_expression_in_expression1764);
					assignment_expression();
					PopFollow();
					if (state.failed) return;

					}
					break;

				default:
					goto loop51;
				}
			}

			loop51:
				;

			} finally { DebugExitSubRule(51); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("expression", 45);
			LeaveRule("expression", 45);
			LeaveRule_expression();
	        if (state.backtracking > 0) { Memoize(input, 45, expression_StartIndex); }

	    }
	 	DebugLocation(721, 1);
		} finally { DebugExitRule(GrammarFileName, "expression"); }
		return;

	}
	// $ANTLR end "expression"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_constant_expression() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_constant_expression() {}

	// $ANTLR start "constant_expression"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:725:1: constant_expression : conditional_expression ;
	[GrammarRule("constant_expression")]
	private void constant_expression()
	{
		EnterRule_constant_expression();
		EnterRule("constant_expression", 46);
		TraceIn("constant_expression", 46);
	    int constant_expression_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "constant_expression");
		DebugLocation(725, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 46)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:727:2: ( conditional_expression )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:727:4: conditional_expression
			{
			DebugLocation(727, 4);
			PushFollow(Follow._conditional_expression_in_constant_expression1781);
			conditional_expression();
			PopFollow();
			if (state.failed) return;

			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("constant_expression", 46);
			LeaveRule("constant_expression", 46);
			LeaveRule_constant_expression();
	        if (state.backtracking > 0) { Memoize(input, 46, constant_expression_StartIndex); }

	    }
	 	DebugLocation(729, 1);
		} finally { DebugExitRule(GrammarFileName, "constant_expression"); }
		return;

	}
	// $ANTLR end "constant_expression"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_assignment_expression() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_assignment_expression() {}

	// $ANTLR start "assignment_expression"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:733:1: assignment_expression : ( lvalue assignment_operator assignment_expression | conditional_expression );
	[GrammarRule("assignment_expression")]
	private void assignment_expression()
	{
		EnterRule_assignment_expression();
		EnterRule("assignment_expression", 47);
		TraceIn("assignment_expression", 47);
	    int assignment_expression_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "assignment_expression");
		DebugLocation(733, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 47)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:735:2: ( lvalue assignment_operator assignment_expression | conditional_expression )
			int alt52=2;
			try { DebugEnterDecision(52, decisionCanBacktrack[52]);
			try
			{
				alt52 = dfa52.Predict(input);
			}
			catch (NoViableAltException nvae)
			{
				DebugRecognitionException(nvae);
				throw;
			}
			} finally { DebugExitDecision(52); }
			switch (alt52)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:735:4: lvalue assignment_operator assignment_expression
				{
				DebugLocation(735, 4);
				PushFollow(Follow._lvalue_in_assignment_expression1796);
				lvalue();
				PopFollow();
				if (state.failed) return;
				DebugLocation(735, 11);
				PushFollow(Follow._assignment_operator_in_assignment_expression1798);
				assignment_operator();
				PopFollow();
				if (state.failed) return;
				DebugLocation(735, 31);
				PushFollow(Follow._assignment_expression_in_assignment_expression1800);
				assignment_expression();
				PopFollow();
				if (state.failed) return;

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:737:4: conditional_expression
				{
				DebugLocation(737, 4);
				PushFollow(Follow._conditional_expression_in_assignment_expression1806);
				conditional_expression();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("assignment_expression", 47);
			LeaveRule("assignment_expression", 47);
			LeaveRule_assignment_expression();
	        if (state.backtracking > 0) { Memoize(input, 47, assignment_expression_StartIndex); }

	    }
	 	DebugLocation(739, 1);
		} finally { DebugExitRule(GrammarFileName, "assignment_expression"); }
		return;

	}
	// $ANTLR end "assignment_expression"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_lvalue() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_lvalue() {}

	// $ANTLR start "lvalue"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:743:1: lvalue : unary_expression ;
	[GrammarRule("lvalue")]
	private void lvalue()
	{
		EnterRule_lvalue();
		EnterRule("lvalue", 48);
		TraceIn("lvalue", 48);
	    int lvalue_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "lvalue");
		DebugLocation(743, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 48)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:745:2: ( unary_expression )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:745:4: unary_expression
			{
			DebugLocation(745, 4);
			PushFollow(Follow._unary_expression_in_lvalue1822);
			unary_expression();
			PopFollow();
			if (state.failed) return;

			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("lvalue", 48);
			LeaveRule("lvalue", 48);
			LeaveRule_lvalue();
	        if (state.backtracking > 0) { Memoize(input, 48, lvalue_StartIndex); }

	    }
	 	DebugLocation(747, 1);
		} finally { DebugExitRule(GrammarFileName, "lvalue"); }
		return;

	}
	// $ANTLR end "lvalue"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_assignment_operator() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_assignment_operator() {}

	// $ANTLR start "assignment_operator"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:751:1: assignment_operator : ( '=' | '*=' | '/=' | '%=' | '+=' | '-=' | '<<=' | '>>=' | '&=' | '^=' | '|=' );
	[GrammarRule("assignment_operator")]
	private void assignment_operator()
	{
		EnterRule_assignment_operator();
		EnterRule("assignment_operator", 49);
		TraceIn("assignment_operator", 49);
	    int assignment_operator_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "assignment_operator");
		DebugLocation(751, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 49)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:753:2: ( '=' | '*=' | '/=' | '%=' | '+=' | '-=' | '<<=' | '>>=' | '&=' | '^=' | '|=' )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:
			{
			DebugLocation(753, 2);
			if (input.LA(1)==26||input.LA(1)==29||input.LA(1)==33||input.LA(1)==36||input.LA(1)==40||input.LA(1)==45||input.LA(1)==50||input.LA(1)==52||input.LA(1)==57||input.LA(1)==62||input.LA(1)==97)
			{
				input.Consume();
				state.errorRecovery=false;state.failed=false;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				DebugRecognitionException(mse);
				throw mse;
			}


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("assignment_operator", 49);
			LeaveRule("assignment_operator", 49);
			LeaveRule_assignment_operator();
	        if (state.backtracking > 0) { Memoize(input, 49, assignment_operator_StartIndex); }

	    }
	 	DebugLocation(775, 1);
		} finally { DebugExitRule(GrammarFileName, "assignment_operator"); }
		return;

	}
	// $ANTLR end "assignment_operator"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_conditional_expression() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_conditional_expression() {}

	// $ANTLR start "conditional_expression"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:779:1: conditional_expression : logical_or_expression ( '?' expression ':' conditional_expression )? ;
	[GrammarRule("conditional_expression")]
	private void conditional_expression()
	{
		EnterRule_conditional_expression();
		EnterRule("conditional_expression", 50);
		TraceIn("conditional_expression", 50);
	    int conditional_expression_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "conditional_expression");
		DebugLocation(779, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 50)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:781:2: ( logical_or_expression ( '?' expression ':' conditional_expression )? )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:781:4: logical_or_expression ( '?' expression ':' conditional_expression )?
			{
			DebugLocation(781, 4);
			PushFollow(Follow._logical_or_expression_in_conditional_expression1912);
			logical_or_expression();
			PopFollow();
			if (state.failed) return;
			DebugLocation(781, 26);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:781:26: ( '?' expression ':' conditional_expression )?
			int alt53=2;
			try { DebugEnterSubRule(53);
			try { DebugEnterDecision(53, decisionCanBacktrack[53]);
			int LA53_0 = input.LA(1);

			if ((LA53_0==58))
			{
				alt53 = 1;
			}
			} finally { DebugExitDecision(53); }
			switch (alt53)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:781:27: '?' expression ':' conditional_expression
				{
				DebugLocation(781, 27);
				Match(input,58,Follow._58_in_conditional_expression1915); if (state.failed) return;
				DebugLocation(781, 31);
				PushFollow(Follow._expression_in_conditional_expression1917);
				expression();
				PopFollow();
				if (state.failed) return;
				DebugLocation(781, 42);
				Match(input,46,Follow._46_in_conditional_expression1919); if (state.failed) return;
				DebugLocation(781, 46);
				PushFollow(Follow._conditional_expression_in_conditional_expression1921);
				conditional_expression();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(53); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("conditional_expression", 50);
			LeaveRule("conditional_expression", 50);
			LeaveRule_conditional_expression();
	        if (state.backtracking > 0) { Memoize(input, 50, conditional_expression_StartIndex); }

	    }
	 	DebugLocation(783, 1);
		} finally { DebugExitRule(GrammarFileName, "conditional_expression"); }
		return;

	}
	// $ANTLR end "conditional_expression"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_logical_or_expression() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_logical_or_expression() {}

	// $ANTLR start "logical_or_expression"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:787:1: logical_or_expression : logical_and_expression ( '||' logical_and_expression )* ;
	[GrammarRule("logical_or_expression")]
	private void logical_or_expression()
	{
		EnterRule_logical_or_expression();
		EnterRule("logical_or_expression", 51);
		TraceIn("logical_or_expression", 51);
	    int logical_or_expression_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "logical_or_expression");
		DebugLocation(787, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 51)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:789:2: ( logical_and_expression ( '||' logical_and_expression )* )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:789:4: logical_and_expression ( '||' logical_and_expression )*
			{
			DebugLocation(789, 4);
			PushFollow(Follow._logical_and_expression_in_logical_or_expression1938);
			logical_and_expression();
			PopFollow();
			if (state.failed) return;
			DebugLocation(789, 27);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:789:27: ( '||' logical_and_expression )*
			try { DebugEnterSubRule(54);
			while (true)
			{
				int alt54=2;
				try { DebugEnterDecision(54, decisionCanBacktrack[54]);
				int LA54_0 = input.LA(1);

				if ((LA54_0==98))
				{
					alt54 = 1;
				}


				} finally { DebugExitDecision(54); }
				switch ( alt54 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:789:28: '||' logical_and_expression
					{
					DebugLocation(789, 28);
					Match(input,98,Follow._98_in_logical_or_expression1941); if (state.failed) return;
					DebugLocation(789, 33);
					PushFollow(Follow._logical_and_expression_in_logical_or_expression1943);
					logical_and_expression();
					PopFollow();
					if (state.failed) return;

					}
					break;

				default:
					goto loop54;
				}
			}

			loop54:
				;

			} finally { DebugExitSubRule(54); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("logical_or_expression", 51);
			LeaveRule("logical_or_expression", 51);
			LeaveRule_logical_or_expression();
	        if (state.backtracking > 0) { Memoize(input, 51, logical_or_expression_StartIndex); }

	    }
	 	DebugLocation(791, 1);
		} finally { DebugExitRule(GrammarFileName, "logical_or_expression"); }
		return;

	}
	// $ANTLR end "logical_or_expression"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_logical_and_expression() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_logical_and_expression() {}

	// $ANTLR start "logical_and_expression"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:795:1: logical_and_expression : inclusive_or_expression ( '&&' inclusive_or_expression )* ;
	[GrammarRule("logical_and_expression")]
	private void logical_and_expression()
	{
		EnterRule_logical_and_expression();
		EnterRule("logical_and_expression", 52);
		TraceIn("logical_and_expression", 52);
	    int logical_and_expression_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "logical_and_expression");
		DebugLocation(795, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 52)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:797:2: ( inclusive_or_expression ( '&&' inclusive_or_expression )* )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:797:4: inclusive_or_expression ( '&&' inclusive_or_expression )*
			{
			DebugLocation(797, 4);
			PushFollow(Follow._inclusive_or_expression_in_logical_and_expression1960);
			inclusive_or_expression();
			PopFollow();
			if (state.failed) return;
			DebugLocation(797, 28);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:797:28: ( '&&' inclusive_or_expression )*
			try { DebugEnterSubRule(55);
			while (true)
			{
				int alt55=2;
				try { DebugEnterDecision(55, decisionCanBacktrack[55]);
				int LA55_0 = input.LA(1);

				if ((LA55_0==27))
				{
					alt55 = 1;
				}


				} finally { DebugExitDecision(55); }
				switch ( alt55 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:797:29: '&&' inclusive_or_expression
					{
					DebugLocation(797, 29);
					Match(input,27,Follow._27_in_logical_and_expression1963); if (state.failed) return;
					DebugLocation(797, 34);
					PushFollow(Follow._inclusive_or_expression_in_logical_and_expression1965);
					inclusive_or_expression();
					PopFollow();
					if (state.failed) return;

					}
					break;

				default:
					goto loop55;
				}
			}

			loop55:
				;

			} finally { DebugExitSubRule(55); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("logical_and_expression", 52);
			LeaveRule("logical_and_expression", 52);
			LeaveRule_logical_and_expression();
	        if (state.backtracking > 0) { Memoize(input, 52, logical_and_expression_StartIndex); }

	    }
	 	DebugLocation(799, 1);
		} finally { DebugExitRule(GrammarFileName, "logical_and_expression"); }
		return;

	}
	// $ANTLR end "logical_and_expression"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_inclusive_or_expression() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_inclusive_or_expression() {}

	// $ANTLR start "inclusive_or_expression"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:803:1: inclusive_or_expression : exclusive_or_expression ( '|' exclusive_or_expression )* ;
	[GrammarRule("inclusive_or_expression")]
	private void inclusive_or_expression()
	{
		EnterRule_inclusive_or_expression();
		EnterRule("inclusive_or_expression", 53);
		TraceIn("inclusive_or_expression", 53);
	    int inclusive_or_expression_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "inclusive_or_expression");
		DebugLocation(803, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 53)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:805:2: ( exclusive_or_expression ( '|' exclusive_or_expression )* )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:805:4: exclusive_or_expression ( '|' exclusive_or_expression )*
			{
			DebugLocation(805, 4);
			PushFollow(Follow._exclusive_or_expression_in_inclusive_or_expression1982);
			exclusive_or_expression();
			PopFollow();
			if (state.failed) return;
			DebugLocation(805, 28);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:805:28: ( '|' exclusive_or_expression )*
			try { DebugEnterSubRule(56);
			while (true)
			{
				int alt56=2;
				try { DebugEnterDecision(56, decisionCanBacktrack[56]);
				int LA56_0 = input.LA(1);

				if ((LA56_0==96))
				{
					alt56 = 1;
				}


				} finally { DebugExitDecision(56); }
				switch ( alt56 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:805:29: '|' exclusive_or_expression
					{
					DebugLocation(805, 29);
					Match(input,96,Follow._96_in_inclusive_or_expression1985); if (state.failed) return;
					DebugLocation(805, 33);
					PushFollow(Follow._exclusive_or_expression_in_inclusive_or_expression1987);
					exclusive_or_expression();
					PopFollow();
					if (state.failed) return;

					}
					break;

				default:
					goto loop56;
				}
			}

			loop56:
				;

			} finally { DebugExitSubRule(56); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("inclusive_or_expression", 53);
			LeaveRule("inclusive_or_expression", 53);
			LeaveRule_inclusive_or_expression();
	        if (state.backtracking > 0) { Memoize(input, 53, inclusive_or_expression_StartIndex); }

	    }
	 	DebugLocation(807, 1);
		} finally { DebugExitRule(GrammarFileName, "inclusive_or_expression"); }
		return;

	}
	// $ANTLR end "inclusive_or_expression"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_exclusive_or_expression() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_exclusive_or_expression() {}

	// $ANTLR start "exclusive_or_expression"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:811:1: exclusive_or_expression : and_expression ( '^' and_expression )* ;
	[GrammarRule("exclusive_or_expression")]
	private void exclusive_or_expression()
	{
		EnterRule_exclusive_or_expression();
		EnterRule("exclusive_or_expression", 54);
		TraceIn("exclusive_or_expression", 54);
	    int exclusive_or_expression_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "exclusive_or_expression");
		DebugLocation(811, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 54)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:813:2: ( and_expression ( '^' and_expression )* )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:813:4: and_expression ( '^' and_expression )*
			{
			DebugLocation(813, 4);
			PushFollow(Follow._and_expression_in_exclusive_or_expression2004);
			and_expression();
			PopFollow();
			if (state.failed) return;
			DebugLocation(813, 19);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:813:19: ( '^' and_expression )*
			try { DebugEnterSubRule(57);
			while (true)
			{
				int alt57=2;
				try { DebugEnterDecision(57, decisionCanBacktrack[57]);
				int LA57_0 = input.LA(1);

				if ((LA57_0==61))
				{
					alt57 = 1;
				}


				} finally { DebugExitDecision(57); }
				switch ( alt57 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:813:20: '^' and_expression
					{
					DebugLocation(813, 20);
					Match(input,61,Follow._61_in_exclusive_or_expression2007); if (state.failed) return;
					DebugLocation(813, 24);
					PushFollow(Follow._and_expression_in_exclusive_or_expression2009);
					and_expression();
					PopFollow();
					if (state.failed) return;

					}
					break;

				default:
					goto loop57;
				}
			}

			loop57:
				;

			} finally { DebugExitSubRule(57); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("exclusive_or_expression", 54);
			LeaveRule("exclusive_or_expression", 54);
			LeaveRule_exclusive_or_expression();
	        if (state.backtracking > 0) { Memoize(input, 54, exclusive_or_expression_StartIndex); }

	    }
	 	DebugLocation(815, 1);
		} finally { DebugExitRule(GrammarFileName, "exclusive_or_expression"); }
		return;

	}
	// $ANTLR end "exclusive_or_expression"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_and_expression() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_and_expression() {}

	// $ANTLR start "and_expression"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:819:1: and_expression : equality_expression ( '&' equality_expression )* ;
	[GrammarRule("and_expression")]
	private void and_expression()
	{
		EnterRule_and_expression();
		EnterRule("and_expression", 55);
		TraceIn("and_expression", 55);
	    int and_expression_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "and_expression");
		DebugLocation(819, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 55)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:821:2: ( equality_expression ( '&' equality_expression )* )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:821:4: equality_expression ( '&' equality_expression )*
			{
			DebugLocation(821, 4);
			PushFollow(Follow._equality_expression_in_and_expression2026);
			equality_expression();
			PopFollow();
			if (state.failed) return;
			DebugLocation(821, 24);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:821:24: ( '&' equality_expression )*
			try { DebugEnterSubRule(58);
			while (true)
			{
				int alt58=2;
				try { DebugEnterDecision(58, decisionCanBacktrack[58]);
				int LA58_0 = input.LA(1);

				if ((LA58_0==28))
				{
					alt58 = 1;
				}


				} finally { DebugExitDecision(58); }
				switch ( alt58 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:821:25: '&' equality_expression
					{
					DebugLocation(821, 25);
					Match(input,28,Follow._28_in_and_expression2029); if (state.failed) return;
					DebugLocation(821, 29);
					PushFollow(Follow._equality_expression_in_and_expression2031);
					equality_expression();
					PopFollow();
					if (state.failed) return;

					}
					break;

				default:
					goto loop58;
				}
			}

			loop58:
				;

			} finally { DebugExitSubRule(58); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("and_expression", 55);
			LeaveRule("and_expression", 55);
			LeaveRule_and_expression();
	        if (state.backtracking > 0) { Memoize(input, 55, and_expression_StartIndex); }

	    }
	 	DebugLocation(823, 1);
		} finally { DebugExitRule(GrammarFileName, "and_expression"); }
		return;

	}
	// $ANTLR end "and_expression"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_equality_expression() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_equality_expression() {}

	// $ANTLR start "equality_expression"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:825:1: equality_expression : relational_expression ( ( '==' | '!=' ) relational_expression )* ;
	[GrammarRule("equality_expression")]
	private void equality_expression()
	{
		EnterRule_equality_expression();
		EnterRule("equality_expression", 56);
		TraceIn("equality_expression", 56);
	    int equality_expression_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "equality_expression");
		DebugLocation(825, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 56)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:827:2: ( relational_expression ( ( '==' | '!=' ) relational_expression )* )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:827:4: relational_expression ( ( '==' | '!=' ) relational_expression )*
			{
			DebugLocation(827, 4);
			PushFollow(Follow._relational_expression_in_equality_expression2046);
			relational_expression();
			PopFollow();
			if (state.failed) return;
			DebugLocation(827, 26);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:827:26: ( ( '==' | '!=' ) relational_expression )*
			try { DebugEnterSubRule(59);
			while (true)
			{
				int alt59=2;
				try { DebugEnterDecision(59, decisionCanBacktrack[59]);
				int LA59_0 = input.LA(1);

				if ((LA59_0==24||LA59_0==53))
				{
					alt59 = 1;
				}


				} finally { DebugExitDecision(59); }
				switch ( alt59 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:827:27: ( '==' | '!=' ) relational_expression
					{
					DebugLocation(827, 27);
					if (input.LA(1)==24||input.LA(1)==53)
					{
						input.Consume();
						state.errorRecovery=false;state.failed=false;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						DebugRecognitionException(mse);
						throw mse;
					}

					DebugLocation(827, 39);
					PushFollow(Follow._relational_expression_in_equality_expression2055);
					relational_expression();
					PopFollow();
					if (state.failed) return;

					}
					break;

				default:
					goto loop59;
				}
			}

			loop59:
				;

			} finally { DebugExitSubRule(59); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("equality_expression", 56);
			LeaveRule("equality_expression", 56);
			LeaveRule_equality_expression();
	        if (state.backtracking > 0) { Memoize(input, 56, equality_expression_StartIndex); }

	    }
	 	DebugLocation(829, 1);
		} finally { DebugExitRule(GrammarFileName, "equality_expression"); }
		return;

	}
	// $ANTLR end "equality_expression"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_relational_expression() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_relational_expression() {}

	// $ANTLR start "relational_expression"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:833:1: relational_expression : shift_expression ( ( '<' | '>' | '<=' | '>=' ) shift_expression )* ;
	[GrammarRule("relational_expression")]
	private void relational_expression()
	{
		EnterRule_relational_expression();
		EnterRule("relational_expression", 57);
		TraceIn("relational_expression", 57);
	    int relational_expression_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "relational_expression");
		DebugLocation(833, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 57)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:835:2: ( shift_expression ( ( '<' | '>' | '<=' | '>=' ) shift_expression )* )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:835:4: shift_expression ( ( '<' | '>' | '<=' | '>=' ) shift_expression )*
			{
			DebugLocation(835, 4);
			PushFollow(Follow._shift_expression_in_relational_expression2072);
			shift_expression();
			PopFollow();
			if (state.failed) return;
			DebugLocation(835, 21);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:835:21: ( ( '<' | '>' | '<=' | '>=' ) shift_expression )*
			try { DebugEnterSubRule(60);
			while (true)
			{
				int alt60=2;
				try { DebugEnterDecision(60, decisionCanBacktrack[60]);
				int LA60_0 = input.LA(1);

				if ((LA60_0==48||LA60_0==51||(LA60_0>=54 && LA60_0<=55)))
				{
					alt60 = 1;
				}


				} finally { DebugExitDecision(60); }
				switch ( alt60 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:835:22: ( '<' | '>' | '<=' | '>=' ) shift_expression
					{
					DebugLocation(835, 22);
					if (input.LA(1)==48||input.LA(1)==51||(input.LA(1)>=54 && input.LA(1)<=55))
					{
						input.Consume();
						state.errorRecovery=false;state.failed=false;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						DebugRecognitionException(mse);
						throw mse;
					}

					DebugLocation(835, 42);
					PushFollow(Follow._shift_expression_in_relational_expression2085);
					shift_expression();
					PopFollow();
					if (state.failed) return;

					}
					break;

				default:
					goto loop60;
				}
			}

			loop60:
				;

			} finally { DebugExitSubRule(60); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("relational_expression", 57);
			LeaveRule("relational_expression", 57);
			LeaveRule_relational_expression();
	        if (state.backtracking > 0) { Memoize(input, 57, relational_expression_StartIndex); }

	    }
	 	DebugLocation(837, 1);
		} finally { DebugExitRule(GrammarFileName, "relational_expression"); }
		return;

	}
	// $ANTLR end "relational_expression"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_shift_expression() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_shift_expression() {}

	// $ANTLR start "shift_expression"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:841:1: shift_expression : additive_expression ( ( '<<' | '>>' ) additive_expression )* ;
	[GrammarRule("shift_expression")]
	private void shift_expression()
	{
		EnterRule_shift_expression();
		EnterRule("shift_expression", 58);
		TraceIn("shift_expression", 58);
	    int shift_expression_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "shift_expression");
		DebugLocation(841, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 58)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:843:2: ( additive_expression ( ( '<<' | '>>' ) additive_expression )* )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:843:4: additive_expression ( ( '<<' | '>>' ) additive_expression )*
			{
			DebugLocation(843, 4);
			PushFollow(Follow._additive_expression_in_shift_expression2102);
			additive_expression();
			PopFollow();
			if (state.failed) return;
			DebugLocation(843, 24);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:843:24: ( ( '<<' | '>>' ) additive_expression )*
			try { DebugEnterSubRule(61);
			while (true)
			{
				int alt61=2;
				try { DebugEnterDecision(61, decisionCanBacktrack[61]);
				int LA61_0 = input.LA(1);

				if ((LA61_0==49||LA61_0==56))
				{
					alt61 = 1;
				}


				} finally { DebugExitDecision(61); }
				switch ( alt61 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:843:25: ( '<<' | '>>' ) additive_expression
					{
					DebugLocation(843, 25);
					if (input.LA(1)==49||input.LA(1)==56)
					{
						input.Consume();
						state.errorRecovery=false;state.failed=false;
					}
					else
					{
						if (state.backtracking>0) {state.failed=true; return;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						DebugRecognitionException(mse);
						throw mse;
					}

					DebugLocation(843, 37);
					PushFollow(Follow._additive_expression_in_shift_expression2111);
					additive_expression();
					PopFollow();
					if (state.failed) return;

					}
					break;

				default:
					goto loop61;
				}
			}

			loop61:
				;

			} finally { DebugExitSubRule(61); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("shift_expression", 58);
			LeaveRule("shift_expression", 58);
			LeaveRule_shift_expression();
	        if (state.backtracking > 0) { Memoize(input, 58, shift_expression_StartIndex); }

	    }
	 	DebugLocation(845, 1);
		} finally { DebugExitRule(GrammarFileName, "shift_expression"); }
		return;

	}
	// $ANTLR end "shift_expression"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_statement() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_statement() {}

	// $ANTLR start "statement"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:853:1: statement : ( labeled_statement | compound_statement | expression_statement | selection_statement | iteration_statement | jump_statement );
	[GrammarRule("statement")]
	private void statement()
	{
		EnterRule_statement();
		EnterRule("statement", 59);
		TraceIn("statement", 59);
	    int statement_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "statement");
		DebugLocation(853, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 59)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:855:2: ( labeled_statement | compound_statement | expression_statement | selection_statement | iteration_statement | jump_statement )
			int alt62=6;
			try { DebugEnterDecision(62, decisionCanBacktrack[62]);
			switch (input.LA(1))
			{
			case IDENTIFIER:
				{
				int LA62_1 = input.LA(2);

				if ((LA62_1==46))
				{
					alt62 = 1;
				}
				else if (((LA62_1>=24 && LA62_1<=30)||(LA62_1>=32 && LA62_1<=42)||(LA62_1>=44 && LA62_1<=45)||(LA62_1>=47 && LA62_1<=59)||(LA62_1>=61 && LA62_1<=62)||(LA62_1>=96 && LA62_1<=98)))
				{
					alt62 = 3;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 62, 1, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			case 65:
			case 69:
				{
				alt62 = 1;
				}
				break;
			case 95:
				{
				alt62 = 2;
				}
				break;
			case CHARACTER_LITERAL:
			case DECIMAL_LITERAL:
			case FLOATING_POINT_LITERAL:
			case HEX_LITERAL:
			case OCTAL_LITERAL:
			case STRING_LITERAL:
			case 23:
			case 28:
			case 30:
			case 32:
			case 34:
			case 35:
			case 38:
			case 39:
			case 47:
			case 85:
			case 100:
				{
				alt62 = 3;
				}
				break;
			case 78:
			case 88:
				{
				alt62 = 4;
				}
				break;
			case 70:
			case 76:
			case 94:
				{
				alt62 = 5;
				}
				break;
			case 64:
			case 68:
			case 77:
			case 82:
				{
				alt62 = 6;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 62, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(62); }
			switch (alt62)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:855:4: labeled_statement
				{
				DebugLocation(855, 4);
				PushFollow(Follow._labeled_statement_in_statement2132);
				labeled_statement();
				PopFollow();
				if (state.failed) return;

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:857:4: compound_statement
				{
				DebugLocation(857, 4);
				PushFollow(Follow._compound_statement_in_statement2138);
				compound_statement();
				PopFollow();
				if (state.failed) return;

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:859:4: expression_statement
				{
				DebugLocation(859, 4);
				PushFollow(Follow._expression_statement_in_statement2144);
				expression_statement();
				PopFollow();
				if (state.failed) return;

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:861:4: selection_statement
				{
				DebugLocation(861, 4);
				PushFollow(Follow._selection_statement_in_statement2150);
				selection_statement();
				PopFollow();
				if (state.failed) return;

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:863:4: iteration_statement
				{
				DebugLocation(863, 4);
				PushFollow(Follow._iteration_statement_in_statement2156);
				iteration_statement();
				PopFollow();
				if (state.failed) return;

				}
				break;
			case 6:
				DebugEnterAlt(6);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:865:4: jump_statement
				{
				DebugLocation(865, 4);
				PushFollow(Follow._jump_statement_in_statement2162);
				jump_statement();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("statement", 59);
			LeaveRule("statement", 59);
			LeaveRule_statement();
	        if (state.backtracking > 0) { Memoize(input, 59, statement_StartIndex); }

	    }
	 	DebugLocation(867, 1);
		} finally { DebugExitRule(GrammarFileName, "statement"); }
		return;

	}
	// $ANTLR end "statement"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_labeled_statement() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_labeled_statement() {}

	// $ANTLR start "labeled_statement"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:871:1: labeled_statement : ( IDENTIFIER ':' statement | 'case' constant_expression ':' statement | 'default' ':' statement );
	[GrammarRule("labeled_statement")]
	private void labeled_statement()
	{
		EnterRule_labeled_statement();
		EnterRule("labeled_statement", 60);
		TraceIn("labeled_statement", 60);
	    int labeled_statement_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "labeled_statement");
		DebugLocation(871, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 60)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:873:2: ( IDENTIFIER ':' statement | 'case' constant_expression ':' statement | 'default' ':' statement )
			int alt63=3;
			try { DebugEnterDecision(63, decisionCanBacktrack[63]);
			switch (input.LA(1))
			{
			case IDENTIFIER:
				{
				alt63 = 1;
				}
				break;
			case 65:
				{
				alt63 = 2;
				}
				break;
			case 69:
				{
				alt63 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 63, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(63); }
			switch (alt63)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:873:4: IDENTIFIER ':' statement
				{
				DebugLocation(873, 4);
				Match(input,IDENTIFIER,Follow._IDENTIFIER_in_labeled_statement2177); if (state.failed) return;
				DebugLocation(873, 15);
				Match(input,46,Follow._46_in_labeled_statement2179); if (state.failed) return;
				DebugLocation(873, 19);
				PushFollow(Follow._statement_in_labeled_statement2181);
				statement();
				PopFollow();
				if (state.failed) return;

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:875:4: 'case' constant_expression ':' statement
				{
				DebugLocation(875, 4);
				Match(input,65,Follow._65_in_labeled_statement2187); if (state.failed) return;
				DebugLocation(875, 11);
				PushFollow(Follow._constant_expression_in_labeled_statement2189);
				constant_expression();
				PopFollow();
				if (state.failed) return;
				DebugLocation(875, 31);
				Match(input,46,Follow._46_in_labeled_statement2191); if (state.failed) return;
				DebugLocation(875, 35);
				PushFollow(Follow._statement_in_labeled_statement2193);
				statement();
				PopFollow();
				if (state.failed) return;

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:877:4: 'default' ':' statement
				{
				DebugLocation(877, 4);
				Match(input,69,Follow._69_in_labeled_statement2199); if (state.failed) return;
				DebugLocation(877, 14);
				Match(input,46,Follow._46_in_labeled_statement2201); if (state.failed) return;
				DebugLocation(877, 18);
				PushFollow(Follow._statement_in_labeled_statement2203);
				statement();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("labeled_statement", 60);
			LeaveRule("labeled_statement", 60);
			LeaveRule_labeled_statement();
	        if (state.backtracking > 0) { Memoize(input, 60, labeled_statement_StartIndex); }

	    }
	 	DebugLocation(879, 1);
		} finally { DebugExitRule(GrammarFileName, "labeled_statement"); }
		return;

	}
	// $ANTLR end "labeled_statement"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_compound_statement() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_compound_statement() {}

	// $ANTLR start "compound_statement"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:883:1: compound_statement : '{' ( declaration )* ( statement_list )? '}' ;
	[GrammarRule("compound_statement")]
	private void compound_statement()
	{
		EnterRule_compound_statement();
		EnterRule("compound_statement", 61);
		TraceIn("compound_statement", 61);
	    Symbols_stack.Push(new Symbols_scope());Symbols_scopeInit(Symbols_stack.Peek());

	    int compound_statement_StartIndex = input.Index;



	      Symbols_stack.Peek().types =  new Hashtable();


		try { DebugEnterRule(GrammarFileName, "compound_statement");
		DebugLocation(883, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 61)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:893:2: ( '{' ( declaration )* ( statement_list )? '}' )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:893:4: '{' ( declaration )* ( statement_list )? '}'
			{
			DebugLocation(893, 4);
			Match(input,95,Follow._95_in_compound_statement2231); if (state.failed) return;
			DebugLocation(893, 8);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:893:8: ( declaration )*
			try { DebugEnterSubRule(64);
			while (true)
			{
				int alt64=2;
				try { DebugEnterDecision(64, decisionCanBacktrack[64]);
				try
				{
					alt64 = dfa64.Predict(input);
				}
				catch (NoViableAltException nvae)
				{
					DebugRecognitionException(nvae);
					throw;
				}
				} finally { DebugExitDecision(64); }
				switch ( alt64 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:893:8: declaration
					{
					DebugLocation(893, 8);
					PushFollow(Follow._declaration_in_compound_statement2233);
					declaration();
					PopFollow();
					if (state.failed) return;

					}
					break;

				default:
					goto loop64;
				}
			}

			loop64:
				;

			} finally { DebugExitSubRule(64); }

			DebugLocation(893, 21);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:893:21: ( statement_list )?
			int alt65=2;
			try { DebugEnterSubRule(65);
			try { DebugEnterDecision(65, decisionCanBacktrack[65]);
			int LA65_0 = input.LA(1);

			if ((LA65_0==CHARACTER_LITERAL||LA65_0==DECIMAL_LITERAL||LA65_0==FLOATING_POINT_LITERAL||LA65_0==HEX_LITERAL||LA65_0==IDENTIFIER||LA65_0==OCTAL_LITERAL||LA65_0==STRING_LITERAL||LA65_0==23||LA65_0==28||LA65_0==30||LA65_0==32||(LA65_0>=34 && LA65_0<=35)||(LA65_0>=38 && LA65_0<=39)||LA65_0==47||(LA65_0>=64 && LA65_0<=65)||(LA65_0>=68 && LA65_0<=70)||(LA65_0>=76 && LA65_0<=78)||LA65_0==82||LA65_0==85||LA65_0==88||(LA65_0>=94 && LA65_0<=95)||LA65_0==100))
			{
				alt65 = 1;
			}
			} finally { DebugExitDecision(65); }
			switch (alt65)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:893:21: statement_list
				{
				DebugLocation(893, 21);
				PushFollow(Follow._statement_list_in_compound_statement2236);
				statement_list();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(65); }

			DebugLocation(893, 37);
			Match(input,99,Follow._99_in_compound_statement2239); if (state.failed) return;

			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("compound_statement", 61);
			LeaveRule("compound_statement", 61);
			LeaveRule_compound_statement();
	        if (state.backtracking > 0) { Memoize(input, 61, compound_statement_StartIndex); }

	        Symbols_scopeAfter(Symbols_stack.Peek());Symbols_stack.Pop();

	    }
	 	DebugLocation(895, 1);
		} finally { DebugExitRule(GrammarFileName, "compound_statement"); }
		return;

	}
	// $ANTLR end "compound_statement"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_statement_list() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_statement_list() {}

	// $ANTLR start "statement_list"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:899:1: statement_list : ( statement )+ ;
	[GrammarRule("statement_list")]
	private void statement_list()
	{
		EnterRule_statement_list();
		EnterRule("statement_list", 62);
		TraceIn("statement_list", 62);
	    int statement_list_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "statement_list");
		DebugLocation(899, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 62)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:901:2: ( ( statement )+ )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:901:4: ( statement )+
			{
			DebugLocation(901, 4);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:901:4: ( statement )+
			int cnt66=0;
			try { DebugEnterSubRule(66);
			while (true)
			{
				int alt66=2;
				try { DebugEnterDecision(66, decisionCanBacktrack[66]);
				int LA66_0 = input.LA(1);

				if ((LA66_0==CHARACTER_LITERAL||LA66_0==DECIMAL_LITERAL||LA66_0==FLOATING_POINT_LITERAL||LA66_0==HEX_LITERAL||LA66_0==IDENTIFIER||LA66_0==OCTAL_LITERAL||LA66_0==STRING_LITERAL||LA66_0==23||LA66_0==28||LA66_0==30||LA66_0==32||(LA66_0>=34 && LA66_0<=35)||(LA66_0>=38 && LA66_0<=39)||LA66_0==47||(LA66_0>=64 && LA66_0<=65)||(LA66_0>=68 && LA66_0<=70)||(LA66_0>=76 && LA66_0<=78)||LA66_0==82||LA66_0==85||LA66_0==88||(LA66_0>=94 && LA66_0<=95)||LA66_0==100))
				{
					alt66 = 1;
				}


				} finally { DebugExitDecision(66); }
				switch (alt66)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:901:4: statement
					{
					DebugLocation(901, 4);
					PushFollow(Follow._statement_in_statement_list2254);
					statement();
					PopFollow();
					if (state.failed) return;

					}
					break;

				default:
					if (cnt66 >= 1)
						goto loop66;

					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee66 = new EarlyExitException( 66, input );
					DebugRecognitionException(eee66);
					throw eee66;
				}
				cnt66++;
			}
			loop66:
				;

			} finally { DebugExitSubRule(66); }


			}

		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("statement_list", 62);
			LeaveRule("statement_list", 62);
			LeaveRule_statement_list();
	        if (state.backtracking > 0) { Memoize(input, 62, statement_list_StartIndex); }

	    }
	 	DebugLocation(903, 1);
		} finally { DebugExitRule(GrammarFileName, "statement_list"); }
		return;

	}
	// $ANTLR end "statement_list"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_expression_statement() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_expression_statement() {}

	// $ANTLR start "expression_statement"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:907:1: expression_statement : ( ';' | expression ';' );
	[GrammarRule("expression_statement")]
	private void expression_statement()
	{
		EnterRule_expression_statement();
		EnterRule("expression_statement", 63);
		TraceIn("expression_statement", 63);
	    int expression_statement_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "expression_statement");
		DebugLocation(907, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 63)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:909:2: ( ';' | expression ';' )
			int alt67=2;
			try { DebugEnterDecision(67, decisionCanBacktrack[67]);
			int LA67_0 = input.LA(1);

			if ((LA67_0==47))
			{
				alt67 = 1;
			}
			else if ((LA67_0==CHARACTER_LITERAL||LA67_0==DECIMAL_LITERAL||LA67_0==FLOATING_POINT_LITERAL||LA67_0==HEX_LITERAL||LA67_0==IDENTIFIER||LA67_0==OCTAL_LITERAL||LA67_0==STRING_LITERAL||LA67_0==23||LA67_0==28||LA67_0==30||LA67_0==32||(LA67_0>=34 && LA67_0<=35)||(LA67_0>=38 && LA67_0<=39)||LA67_0==85||LA67_0==100))
			{
				alt67 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae = new NoViableAltException("", 67, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(67); }
			switch (alt67)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:909:4: ';'
				{
				DebugLocation(909, 4);
				Match(input,47,Follow._47_in_expression_statement2270); if (state.failed) return;

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:911:4: expression ';'
				{
				DebugLocation(911, 4);
				PushFollow(Follow._expression_in_expression_statement2276);
				expression();
				PopFollow();
				if (state.failed) return;
				DebugLocation(911, 15);
				Match(input,47,Follow._47_in_expression_statement2278); if (state.failed) return;

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("expression_statement", 63);
			LeaveRule("expression_statement", 63);
			LeaveRule_expression_statement();
	        if (state.backtracking > 0) { Memoize(input, 63, expression_statement_StartIndex); }

	    }
	 	DebugLocation(913, 1);
		} finally { DebugExitRule(GrammarFileName, "expression_statement"); }
		return;

	}
	// $ANTLR end "expression_statement"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_selection_statement() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_selection_statement() {}

	// $ANTLR start "selection_statement"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:917:1: selection_statement : ( 'if' '(' expression ')' statement ( options {k=1; backtrack=false; } : 'else' statement )? | 'switch' '(' expression ')' statement );
	[GrammarRule("selection_statement")]
	private void selection_statement()
	{
		EnterRule_selection_statement();
		EnterRule("selection_statement", 64);
		TraceIn("selection_statement", 64);
	    int selection_statement_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "selection_statement");
		DebugLocation(917, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 64)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:919:2: ( 'if' '(' expression ')' statement ( options {k=1; backtrack=false; } : 'else' statement )? | 'switch' '(' expression ')' statement )
			int alt69=2;
			try { DebugEnterDecision(69, decisionCanBacktrack[69]);
			int LA69_0 = input.LA(1);

			if ((LA69_0==78))
			{
				alt69 = 1;
			}
			else if ((LA69_0==88))
			{
				alt69 = 2;
			}
			else
			{
				if (state.backtracking>0) {state.failed=true; return;}
				NoViableAltException nvae = new NoViableAltException("", 69, 0, input);
				DebugRecognitionException(nvae);
				throw nvae;
			}
			} finally { DebugExitDecision(69); }
			switch (alt69)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:919:4: 'if' '(' expression ')' statement ( options {k=1; backtrack=false; } : 'else' statement )?
				{
				DebugLocation(919, 4);
				Match(input,78,Follow._78_in_selection_statement2293); if (state.failed) return;
				DebugLocation(919, 9);
				Match(input,30,Follow._30_in_selection_statement2295); if (state.failed) return;
				DebugLocation(919, 13);
				PushFollow(Follow._expression_in_selection_statement2297);
				expression();
				PopFollow();
				if (state.failed) return;
				DebugLocation(919, 24);
				Match(input,31,Follow._31_in_selection_statement2299); if (state.failed) return;
				DebugLocation(919, 28);
				PushFollow(Follow._statement_in_selection_statement2301);
				statement();
				PopFollow();
				if (state.failed) return;
				DebugLocation(919, 38);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:919:38: ( options {k=1; backtrack=false; } : 'else' statement )?
				int alt68=2;
				try { DebugEnterSubRule(68);
				try { DebugEnterDecision(68, decisionCanBacktrack[68]);
				int LA68_0 = input.LA(1);

				if ((LA68_0==72))
				{
					int LA68_1 = input.LA(2);

					if ((true))
					{
						alt68 = 1;
					}
				}
				} finally { DebugExitDecision(68); }
				switch (alt68)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:919:71: 'else' statement
					{
					DebugLocation(919, 71);
					Match(input,72,Follow._72_in_selection_statement2316); if (state.failed) return;
					DebugLocation(919, 78);
					PushFollow(Follow._statement_in_selection_statement2318);
					statement();
					PopFollow();
					if (state.failed) return;

					}
					break;

				}
				} finally { DebugExitSubRule(68); }


				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:921:4: 'switch' '(' expression ')' statement
				{
				DebugLocation(921, 4);
				Match(input,88,Follow._88_in_selection_statement2326); if (state.failed) return;
				DebugLocation(921, 13);
				Match(input,30,Follow._30_in_selection_statement2328); if (state.failed) return;
				DebugLocation(921, 17);
				PushFollow(Follow._expression_in_selection_statement2330);
				expression();
				PopFollow();
				if (state.failed) return;
				DebugLocation(921, 28);
				Match(input,31,Follow._31_in_selection_statement2332); if (state.failed) return;
				DebugLocation(921, 32);
				PushFollow(Follow._statement_in_selection_statement2334);
				statement();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("selection_statement", 64);
			LeaveRule("selection_statement", 64);
			LeaveRule_selection_statement();
	        if (state.backtracking > 0) { Memoize(input, 64, selection_statement_StartIndex); }

	    }
	 	DebugLocation(923, 1);
		} finally { DebugExitRule(GrammarFileName, "selection_statement"); }
		return;

	}
	// $ANTLR end "selection_statement"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_iteration_statement() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_iteration_statement() {}

	// $ANTLR start "iteration_statement"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:927:1: iteration_statement : ( 'while' '(' expression ')' statement | 'do' statement 'while' '(' expression ')' ';' | 'for' '(' expression_statement expression_statement ( expression )? ')' statement );
	[GrammarRule("iteration_statement")]
	private void iteration_statement()
	{
		EnterRule_iteration_statement();
		EnterRule("iteration_statement", 65);
		TraceIn("iteration_statement", 65);
	    int iteration_statement_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "iteration_statement");
		DebugLocation(927, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 65)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:929:2: ( 'while' '(' expression ')' statement | 'do' statement 'while' '(' expression ')' ';' | 'for' '(' expression_statement expression_statement ( expression )? ')' statement )
			int alt71=3;
			try { DebugEnterDecision(71, decisionCanBacktrack[71]);
			switch (input.LA(1))
			{
			case 94:
				{
				alt71 = 1;
				}
				break;
			case 70:
				{
				alt71 = 2;
				}
				break;
			case 76:
				{
				alt71 = 3;
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 71, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(71); }
			switch (alt71)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:929:4: 'while' '(' expression ')' statement
				{
				DebugLocation(929, 4);
				Match(input,94,Follow._94_in_iteration_statement2349); if (state.failed) return;
				DebugLocation(929, 12);
				Match(input,30,Follow._30_in_iteration_statement2351); if (state.failed) return;
				DebugLocation(929, 16);
				PushFollow(Follow._expression_in_iteration_statement2353);
				expression();
				PopFollow();
				if (state.failed) return;
				DebugLocation(929, 27);
				Match(input,31,Follow._31_in_iteration_statement2355); if (state.failed) return;
				DebugLocation(929, 31);
				PushFollow(Follow._statement_in_iteration_statement2357);
				statement();
				PopFollow();
				if (state.failed) return;

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:931:4: 'do' statement 'while' '(' expression ')' ';'
				{
				DebugLocation(931, 4);
				Match(input,70,Follow._70_in_iteration_statement2363); if (state.failed) return;
				DebugLocation(931, 9);
				PushFollow(Follow._statement_in_iteration_statement2365);
				statement();
				PopFollow();
				if (state.failed) return;
				DebugLocation(931, 19);
				Match(input,94,Follow._94_in_iteration_statement2367); if (state.failed) return;
				DebugLocation(931, 27);
				Match(input,30,Follow._30_in_iteration_statement2369); if (state.failed) return;
				DebugLocation(931, 31);
				PushFollow(Follow._expression_in_iteration_statement2371);
				expression();
				PopFollow();
				if (state.failed) return;
				DebugLocation(931, 42);
				Match(input,31,Follow._31_in_iteration_statement2373); if (state.failed) return;
				DebugLocation(931, 46);
				Match(input,47,Follow._47_in_iteration_statement2375); if (state.failed) return;

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:933:4: 'for' '(' expression_statement expression_statement ( expression )? ')' statement
				{
				DebugLocation(933, 4);
				Match(input,76,Follow._76_in_iteration_statement2381); if (state.failed) return;
				DebugLocation(933, 10);
				Match(input,30,Follow._30_in_iteration_statement2383); if (state.failed) return;
				DebugLocation(933, 14);
				PushFollow(Follow._expression_statement_in_iteration_statement2385);
				expression_statement();
				PopFollow();
				if (state.failed) return;
				DebugLocation(933, 35);
				PushFollow(Follow._expression_statement_in_iteration_statement2387);
				expression_statement();
				PopFollow();
				if (state.failed) return;
				DebugLocation(933, 56);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:933:56: ( expression )?
				int alt70=2;
				try { DebugEnterSubRule(70);
				try { DebugEnterDecision(70, decisionCanBacktrack[70]);
				int LA70_0 = input.LA(1);

				if ((LA70_0==CHARACTER_LITERAL||LA70_0==DECIMAL_LITERAL||LA70_0==FLOATING_POINT_LITERAL||LA70_0==HEX_LITERAL||LA70_0==IDENTIFIER||LA70_0==OCTAL_LITERAL||LA70_0==STRING_LITERAL||LA70_0==23||LA70_0==28||LA70_0==30||LA70_0==32||(LA70_0>=34 && LA70_0<=35)||(LA70_0>=38 && LA70_0<=39)||LA70_0==85||LA70_0==100))
				{
					alt70 = 1;
				}
				} finally { DebugExitDecision(70); }
				switch (alt70)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:933:56: expression
					{
					DebugLocation(933, 56);
					PushFollow(Follow._expression_in_iteration_statement2389);
					expression();
					PopFollow();
					if (state.failed) return;

					}
					break;

				}
				} finally { DebugExitSubRule(70); }

				DebugLocation(933, 68);
				Match(input,31,Follow._31_in_iteration_statement2392); if (state.failed) return;
				DebugLocation(933, 72);
				PushFollow(Follow._statement_in_iteration_statement2394);
				statement();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("iteration_statement", 65);
			LeaveRule("iteration_statement", 65);
			LeaveRule_iteration_statement();
	        if (state.backtracking > 0) { Memoize(input, 65, iteration_statement_StartIndex); }

	    }
	 	DebugLocation(935, 1);
		} finally { DebugExitRule(GrammarFileName, "iteration_statement"); }
		return;

	}
	// $ANTLR end "iteration_statement"


	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_jump_statement() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_jump_statement() {}

	// $ANTLR start "jump_statement"
	// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:939:1: jump_statement : ( 'goto' IDENTIFIER ';' | 'continue' ';' | 'break' ';' | 'return' ';' | 'return' expression ';' );
	[GrammarRule("jump_statement")]
	private void jump_statement()
	{
		EnterRule_jump_statement();
		EnterRule("jump_statement", 66);
		TraceIn("jump_statement", 66);
	    int jump_statement_StartIndex = input.Index;

		try { DebugEnterRule(GrammarFileName, "jump_statement");
		DebugLocation(939, 1);
		try
		{
			if (state.backtracking > 0 && AlreadyParsedRule(input, 66)) { return; }

			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:941:2: ( 'goto' IDENTIFIER ';' | 'continue' ';' | 'break' ';' | 'return' ';' | 'return' expression ';' )
			int alt72=5;
			try { DebugEnterDecision(72, decisionCanBacktrack[72]);
			switch (input.LA(1))
			{
			case 77:
				{
				alt72 = 1;
				}
				break;
			case 68:
				{
				alt72 = 2;
				}
				break;
			case 64:
				{
				alt72 = 3;
				}
				break;
			case 82:
				{
				int LA72_4 = input.LA(2);

				if ((LA72_4==47))
				{
					alt72 = 4;
				}
				else if ((LA72_4==CHARACTER_LITERAL||LA72_4==DECIMAL_LITERAL||LA72_4==FLOATING_POINT_LITERAL||LA72_4==HEX_LITERAL||LA72_4==IDENTIFIER||LA72_4==OCTAL_LITERAL||LA72_4==STRING_LITERAL||LA72_4==23||LA72_4==28||LA72_4==30||LA72_4==32||(LA72_4>=34 && LA72_4<=35)||(LA72_4>=38 && LA72_4<=39)||LA72_4==85||LA72_4==100))
				{
					alt72 = 5;
				}
				else
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 72, 4, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
				}
				break;
			default:
				{
					if (state.backtracking>0) {state.failed=true; return;}
					NoViableAltException nvae = new NoViableAltException("", 72, 0, input);
					DebugRecognitionException(nvae);
					throw nvae;
				}
			}

			} finally { DebugExitDecision(72); }
			switch (alt72)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:941:4: 'goto' IDENTIFIER ';'
				{
				DebugLocation(941, 4);
				Match(input,77,Follow._77_in_jump_statement2409); if (state.failed) return;
				DebugLocation(941, 11);
				Match(input,IDENTIFIER,Follow._IDENTIFIER_in_jump_statement2411); if (state.failed) return;
				DebugLocation(941, 22);
				Match(input,47,Follow._47_in_jump_statement2413); if (state.failed) return;

				}
				break;
			case 2:
				DebugEnterAlt(2);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:943:4: 'continue' ';'
				{
				DebugLocation(943, 4);
				Match(input,68,Follow._68_in_jump_statement2419); if (state.failed) return;
				DebugLocation(943, 15);
				Match(input,47,Follow._47_in_jump_statement2421); if (state.failed) return;

				}
				break;
			case 3:
				DebugEnterAlt(3);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:945:4: 'break' ';'
				{
				DebugLocation(945, 4);
				Match(input,64,Follow._64_in_jump_statement2427); if (state.failed) return;
				DebugLocation(945, 12);
				Match(input,47,Follow._47_in_jump_statement2429); if (state.failed) return;

				}
				break;
			case 4:
				DebugEnterAlt(4);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:947:4: 'return' ';'
				{
				DebugLocation(947, 4);
				Match(input,82,Follow._82_in_jump_statement2435); if (state.failed) return;
				DebugLocation(947, 13);
				Match(input,47,Follow._47_in_jump_statement2437); if (state.failed) return;

				}
				break;
			case 5:
				DebugEnterAlt(5);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:949:4: 'return' expression ';'
				{
				DebugLocation(949, 4);
				Match(input,82,Follow._82_in_jump_statement2443); if (state.failed) return;
				DebugLocation(949, 13);
				PushFollow(Follow._expression_in_jump_statement2445);
				expression();
				PopFollow();
				if (state.failed) return;
				DebugLocation(949, 24);
				Match(input,47,Follow._47_in_jump_statement2447); if (state.failed) return;

				}
				break;

			}
		}
		catch (RecognitionException re)
		{
			ReportError(re);
			Recover(input,re);
		}
		finally
		{
			TraceOut("jump_statement", 66);
			LeaveRule("jump_statement", 66);
			LeaveRule_jump_statement();
	        if (state.backtracking > 0) { Memoize(input, 66, jump_statement_StartIndex); }

	    }
	 	DebugLocation(951, 1);
		} finally { DebugExitRule(GrammarFileName, "jump_statement"); }
		return;

	}
	// $ANTLR end "jump_statement"
	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_synpred2_C_fragment() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_synpred2_C_fragment() {}

	// $ANTLR start synpred2_C
	public void synpred2_C_fragment()
	{
		EnterRule_synpred2_C_fragment();
		EnterRule("synpred2_C_fragment", 68);
		TraceIn("synpred2_C_fragment", 68);
		try
		{
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:179:6: ( declaration_specifiers )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:179:6: declaration_specifiers
			{
			DebugLocation(179, 6);
			PushFollow(Follow._declaration_specifiers_in_synpred2_C132);
			declaration_specifiers();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred2_C_fragment", 68);
			LeaveRule("synpred2_C_fragment", 68);
			LeaveRule_synpred2_C_fragment();
		}
	}
	// $ANTLR end synpred2_C
	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_synpred4_C_fragment() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_synpred4_C_fragment() {}

	// $ANTLR start synpred4_C
	public void synpred4_C_fragment()
	{
		EnterRule_synpred4_C_fragment();
		EnterRule("synpred4_C_fragment", 70);
		TraceIn("synpred4_C_fragment", 70);
		try
		{
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:179:4: ( ( declaration_specifiers )? declarator ( declaration )* '{' )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:179:6: ( declaration_specifiers )? declarator ( declaration )* '{'
			{
			DebugLocation(179, 6);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:179:6: ( declaration_specifiers )?
			int alt73=2;
			try { DebugEnterSubRule(73);
			try { DebugEnterDecision(73, decisionCanBacktrack[73]);
			int LA73_0 = input.LA(1);

			if ((LA73_0==63||(LA73_0>=66 && LA73_0<=67)||LA73_0==71||(LA73_0>=73 && LA73_0<=75)||(LA73_0>=79 && LA73_0<=81)||(LA73_0>=83 && LA73_0<=84)||(LA73_0>=86 && LA73_0<=87)||(LA73_0>=90 && LA73_0<=93)))
			{
				alt73 = 1;
			}
			else if ((LA73_0==IDENTIFIER))
			{
				switch (input.LA(2))
				{
				case 32:
					{
					alt73 = 1;
					}
					break;
				case IDENTIFIER:
					{
					int LA73_18 = input.LA(3);

					if (((((isTypeName(input.LT(1).Text))&&(isTypeName(input.LT(1).Text)))&&EvaluatePredicate(synpred2_C_fragment))))
					{
						alt73 = 1;
					}
					}
					break;
				case 30:
					{
					int LA73_19 = input.LA(3);

					if (((((isTypeName(input.LT(1).Text))&&(isTypeName(input.LT(1).Text)))&&EvaluatePredicate(synpred2_C_fragment))))
					{
						alt73 = 1;
					}
					}
					break;
				case 63:
				case 74:
				case 81:
				case 86:
					{
					int LA73_20 = input.LA(3);

					if (((((isTypeName(input.LT(1).Text))&&(isTypeName(input.LT(1).Text)))&&EvaluatePredicate(synpred2_C_fragment))))
					{
						alt73 = 1;
					}
					}
					break;
				case 92:
					{
					int LA73_21 = input.LA(3);

					if (((((isTypeName(input.LT(1).Text))&&(isTypeName(input.LT(1).Text)))&&EvaluatePredicate(synpred2_C_fragment))))
					{
						alt73 = 1;
					}
					}
					break;
				case 66:
					{
					int LA73_22 = input.LA(3);

					if (((((isTypeName(input.LT(1).Text))&&(isTypeName(input.LT(1).Text)))&&EvaluatePredicate(synpred2_C_fragment))))
					{
						alt73 = 1;
					}
					}
					break;
				case 83:
					{
					int LA73_23 = input.LA(3);

					if (((((isTypeName(input.LT(1).Text))&&(isTypeName(input.LT(1).Text)))&&EvaluatePredicate(synpred2_C_fragment))))
					{
						alt73 = 1;
					}
					}
					break;
				case 79:
					{
					int LA73_24 = input.LA(3);

					if (((((isTypeName(input.LT(1).Text))&&(isTypeName(input.LT(1).Text)))&&EvaluatePredicate(synpred2_C_fragment))))
					{
						alt73 = 1;
					}
					}
					break;
				case 80:
					{
					int LA73_25 = input.LA(3);

					if (((((isTypeName(input.LT(1).Text))&&(isTypeName(input.LT(1).Text)))&&EvaluatePredicate(synpred2_C_fragment))))
					{
						alt73 = 1;
					}
					}
					break;
				case 75:
					{
					int LA73_26 = input.LA(3);

					if (((((isTypeName(input.LT(1).Text))&&(isTypeName(input.LT(1).Text)))&&EvaluatePredicate(synpred2_C_fragment))))
					{
						alt73 = 1;
					}
					}
					break;
				case 71:
					{
					int LA73_27 = input.LA(3);

					if (((((isTypeName(input.LT(1).Text))&&(isTypeName(input.LT(1).Text)))&&EvaluatePredicate(synpred2_C_fragment))))
					{
						alt73 = 1;
					}
					}
					break;
				case 84:
					{
					int LA73_28 = input.LA(3);

					if (((((isTypeName(input.LT(1).Text))&&(isTypeName(input.LT(1).Text)))&&EvaluatePredicate(synpred2_C_fragment))))
					{
						alt73 = 1;
					}
					}
					break;
				case 91:
					{
					int LA73_29 = input.LA(3);

					if (((((isTypeName(input.LT(1).Text))&&(isTypeName(input.LT(1).Text)))&&EvaluatePredicate(synpred2_C_fragment))))
					{
						alt73 = 1;
					}
					}
					break;
				case 87:
				case 90:
					{
					int LA73_30 = input.LA(3);

					if (((((isTypeName(input.LT(1).Text))&&(isTypeName(input.LT(1).Text)))&&EvaluatePredicate(synpred2_C_fragment))))
					{
						alt73 = 1;
					}
					}
					break;
				case 73:
					{
					int LA73_31 = input.LA(3);

					if (((((isTypeName(input.LT(1).Text))&&(isTypeName(input.LT(1).Text)))&&EvaluatePredicate(synpred2_C_fragment))))
					{
						alt73 = 1;
					}
					}
					break;
				case 67:
				case 93:
					{
					int LA73_32 = input.LA(3);

					if (((((isTypeName(input.LT(1).Text))&&(isTypeName(input.LT(1).Text)))&&EvaluatePredicate(synpred2_C_fragment))))
					{
						alt73 = 1;
					}
					}
					break;
				}

			}
			} finally { DebugExitDecision(73); }
			switch (alt73)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:179:6: declaration_specifiers
				{
				DebugLocation(179, 6);
				PushFollow(Follow._declaration_specifiers_in_synpred4_C132);
				declaration_specifiers();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(73); }

			DebugLocation(179, 30);
			PushFollow(Follow._declarator_in_synpred4_C135);
			declarator();
			PopFollow();
			if (state.failed) return;
			DebugLocation(179, 41);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:179:41: ( declaration )*
			try { DebugEnterSubRule(74);
			while (true)
			{
				int alt74=2;
				try { DebugEnterDecision(74, decisionCanBacktrack[74]);
				int LA74_0 = input.LA(1);

				if ((LA74_0==IDENTIFIER||LA74_0==63||(LA74_0>=66 && LA74_0<=67)||LA74_0==71||(LA74_0>=73 && LA74_0<=75)||(LA74_0>=79 && LA74_0<=81)||(LA74_0>=83 && LA74_0<=84)||(LA74_0>=86 && LA74_0<=87)||(LA74_0>=89 && LA74_0<=93)))
				{
					alt74 = 1;
				}


				} finally { DebugExitDecision(74); }
				switch ( alt74 )
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:179:41: declaration
					{
					DebugLocation(179, 41);
					PushFollow(Follow._declaration_in_synpred4_C137);
					declaration();
					PopFollow();
					if (state.failed) return;

					}
					break;

				default:
					goto loop74;
				}
			}

			loop74:
				;

			} finally { DebugExitSubRule(74); }

			DebugLocation(179, 54);
			Match(input,95,Follow._95_in_synpred4_C140); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred4_C_fragment", 70);
			LeaveRule("synpred4_C_fragment", 70);
			LeaveRule_synpred4_C_fragment();
		}
	}
	// $ANTLR end synpred4_C
	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_synpred5_C_fragment() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_synpred5_C_fragment() {}

	// $ANTLR start synpred5_C
	public void synpred5_C_fragment()
	{
		EnterRule_synpred5_C_fragment();
		EnterRule("synpred5_C_fragment", 71);
		TraceIn("synpred5_C_fragment", 71);
		try
		{
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:197:4: ( declaration_specifiers )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:197:4: declaration_specifiers
			{
			DebugLocation(197, 4);
			PushFollow(Follow._declaration_specifiers_in_synpred5_C179);
			declaration_specifiers();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred5_C_fragment", 71);
			LeaveRule("synpred5_C_fragment", 71);
			LeaveRule_synpred5_C_fragment();
		}
	}
	// $ANTLR end synpred5_C
	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_synpred8_C_fragment() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_synpred8_C_fragment() {}

	// $ANTLR start synpred8_C
	public void synpred8_C_fragment()
	{
		EnterRule_synpred8_C_fragment();
		EnterRule("synpred8_C_fragment", 74);
		TraceIn("synpred8_C_fragment", 74);
		try
		{
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:223:14: ( declaration_specifiers )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:223:14: declaration_specifiers
			{
			DebugLocation(223, 14);
			PushFollow(Follow._declaration_specifiers_in_synpred8_C237);
			declaration_specifiers();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred8_C_fragment", 74);
			LeaveRule("synpred8_C_fragment", 74);
			LeaveRule_synpred8_C_fragment();
		}
	}
	// $ANTLR end synpred8_C
	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_synpred12_C_fragment() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_synpred12_C_fragment() {}

	// $ANTLR start synpred12_C
	public void synpred12_C_fragment()
	{
		EnterRule_synpred12_C_fragment();
		EnterRule("synpred12_C_fragment", 78);
		TraceIn("synpred12_C_fragment", 78);
		try
		{
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:237:7: ( type_specifier )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:237:7: type_specifier
			{
			DebugLocation(237, 7);
			PushFollow(Follow._type_specifier_in_synpred12_C290);
			type_specifier();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred12_C_fragment", 78);
			LeaveRule("synpred12_C_fragment", 78);
			LeaveRule_synpred12_C_fragment();
		}
	}
	// $ANTLR end synpred12_C
	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_synpred35_C_fragment() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_synpred35_C_fragment() {}

	// $ANTLR start synpred35_C
	public void synpred35_C_fragment()
	{
		EnterRule_synpred35_C_fragment();
		EnterRule("synpred35_C_fragment", 101);
		TraceIn("synpred35_C_fragment", 101);
		try
		{
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:365:23: ( type_specifier )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:365:23: type_specifier
			{
			DebugLocation(365, 23);
			PushFollow(Follow._type_specifier_in_synpred35_C632);
			type_specifier();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred35_C_fragment", 101);
			LeaveRule("synpred35_C_fragment", 101);
			LeaveRule_synpred35_C_fragment();
		}
	}
	// $ANTLR end synpred35_C
	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_synpred45_C_fragment() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_synpred45_C_fragment() {}

	// $ANTLR start synpred45_C
	public void synpred45_C_fragment()
	{
		EnterRule_synpred45_C_fragment();
		EnterRule("synpred45_C_fragment", 111);
		TraceIn("synpred45_C_fragment", 111);
		try
		{
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:431:4: ( ( pointer )? direct_declarator )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:431:4: ( pointer )? direct_declarator
			{
			DebugLocation(431, 4);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:431:4: ( pointer )?
			int alt79=2;
			try { DebugEnterSubRule(79);
			try { DebugEnterDecision(79, decisionCanBacktrack[79]);
			int LA79_0 = input.LA(1);

			if ((LA79_0==32))
			{
				alt79 = 1;
			}
			} finally { DebugExitDecision(79); }
			switch (alt79)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:431:4: pointer
				{
				DebugLocation(431, 4);
				PushFollow(Follow._pointer_in_synpred45_C818);
				pointer();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(79); }

			DebugLocation(431, 13);
			PushFollow(Follow._direct_declarator_in_synpred45_C821);
			direct_declarator();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred45_C_fragment", 111);
			LeaveRule("synpred45_C_fragment", 111);
			LeaveRule_synpred45_C_fragment();
		}
	}
	// $ANTLR end synpred45_C
	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_synpred47_C_fragment() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_synpred47_C_fragment() {}

	// $ANTLR start synpred47_C
	public void synpred47_C_fragment()
	{
		EnterRule_synpred47_C_fragment();
		EnterRule("synpred47_C_fragment", 113);
		TraceIn("synpred47_C_fragment", 113);
		try
		{
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:459:9: ( declarator_suffix )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:459:9: declarator_suffix
			{
			DebugLocation(459, 9);
			PushFollow(Follow._declarator_suffix_in_synpred47_C879);
			declarator_suffix();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred47_C_fragment", 113);
			LeaveRule("synpred47_C_fragment", 113);
			LeaveRule_synpred47_C_fragment();
		}
	}
	// $ANTLR end synpred47_C
	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_synpred50_C_fragment() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_synpred50_C_fragment() {}

	// $ANTLR start synpred50_C
	public void synpred50_C_fragment()
	{
		EnterRule_synpred50_C_fragment();
		EnterRule("synpred50_C_fragment", 116);
		TraceIn("synpred50_C_fragment", 116);
		try
		{
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:471:9: ( '(' parameter_type_list ')' )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:471:9: '(' parameter_type_list ')'
			{
			DebugLocation(471, 9);
			Match(input,30,Follow._30_in_synpred50_C925); if (state.failed) return;
			DebugLocation(471, 13);
			PushFollow(Follow._parameter_type_list_in_synpred50_C927);
			parameter_type_list();
			PopFollow();
			if (state.failed) return;
			DebugLocation(471, 33);
			Match(input,31,Follow._31_in_synpred50_C929); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred50_C_fragment", 116);
			LeaveRule("synpred50_C_fragment", 116);
			LeaveRule_synpred50_C_fragment();
		}
	}
	// $ANTLR end synpred50_C
	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_synpred51_C_fragment() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_synpred51_C_fragment() {}

	// $ANTLR start synpred51_C
	public void synpred51_C_fragment()
	{
		EnterRule_synpred51_C_fragment();
		EnterRule("synpred51_C_fragment", 117);
		TraceIn("synpred51_C_fragment", 117);
		try
		{
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:473:9: ( '(' identifier_list ')' )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:473:9: '(' identifier_list ')'
			{
			DebugLocation(473, 9);
			Match(input,30,Follow._30_in_synpred51_C940); if (state.failed) return;
			DebugLocation(473, 13);
			PushFollow(Follow._identifier_list_in_synpred51_C942);
			identifier_list();
			PopFollow();
			if (state.failed) return;
			DebugLocation(473, 29);
			Match(input,31,Follow._31_in_synpred51_C944); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred51_C_fragment", 117);
			LeaveRule("synpred51_C_fragment", 117);
			LeaveRule_synpred51_C_fragment();
		}
	}
	// $ANTLR end synpred51_C
	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_synpred52_C_fragment() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_synpred52_C_fragment() {}

	// $ANTLR start synpred52_C
	public void synpred52_C_fragment()
	{
		EnterRule_synpred52_C_fragment();
		EnterRule("synpred52_C_fragment", 118);
		TraceIn("synpred52_C_fragment", 118);
		try
		{
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:483:8: ( type_qualifier )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:483:8: type_qualifier
			{
			DebugLocation(483, 8);
			PushFollow(Follow._type_qualifier_in_synpred52_C974);
			type_qualifier();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred52_C_fragment", 118);
			LeaveRule("synpred52_C_fragment", 118);
			LeaveRule_synpred52_C_fragment();
		}
	}
	// $ANTLR end synpred52_C
	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_synpred53_C_fragment() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_synpred53_C_fragment() {}

	// $ANTLR start synpred53_C
	public void synpred53_C_fragment()
	{
		EnterRule_synpred53_C_fragment();
		EnterRule("synpred53_C_fragment", 119);
		TraceIn("synpred53_C_fragment", 119);
		try
		{
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:483:24: ( pointer )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:483:24: pointer
			{
			DebugLocation(483, 24);
			PushFollow(Follow._pointer_in_synpred53_C977);
			pointer();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred53_C_fragment", 119);
			LeaveRule("synpred53_C_fragment", 119);
			LeaveRule_synpred53_C_fragment();
		}
	}
	// $ANTLR end synpred53_C
	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_synpred54_C_fragment() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_synpred54_C_fragment() {}

	// $ANTLR start synpred54_C
	public void synpred54_C_fragment()
	{
		EnterRule_synpred54_C_fragment();
		EnterRule("synpred54_C_fragment", 120);
		TraceIn("synpred54_C_fragment", 120);
		try
		{
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:483:4: ( '*' ( type_qualifier )+ ( pointer )? )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:483:4: '*' ( type_qualifier )+ ( pointer )?
			{
			DebugLocation(483, 4);
			Match(input,32,Follow._32_in_synpred54_C972); if (state.failed) return;
			DebugLocation(483, 8);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:483:8: ( type_qualifier )+
			int cnt80=0;
			try { DebugEnterSubRule(80);
			while (true)
			{
				int alt80=2;
				try { DebugEnterDecision(80, decisionCanBacktrack[80]);
				int LA80_0 = input.LA(1);

				if ((LA80_0==67||LA80_0==93))
				{
					alt80 = 1;
				}


				} finally { DebugExitDecision(80); }
				switch (alt80)
				{
				case 1:
					DebugEnterAlt(1);
					// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:483:8: type_qualifier
					{
					DebugLocation(483, 8);
					PushFollow(Follow._type_qualifier_in_synpred54_C974);
					type_qualifier();
					PopFollow();
					if (state.failed) return;

					}
					break;

				default:
					if (cnt80 >= 1)
						goto loop80;

					if (state.backtracking>0) {state.failed=true; return;}
					EarlyExitException eee80 = new EarlyExitException( 80, input );
					DebugRecognitionException(eee80);
					throw eee80;
				}
				cnt80++;
			}
			loop80:
				;

			} finally { DebugExitSubRule(80); }

			DebugLocation(483, 24);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:483:24: ( pointer )?
			int alt81=2;
			try { DebugEnterSubRule(81);
			try { DebugEnterDecision(81, decisionCanBacktrack[81]);
			int LA81_0 = input.LA(1);

			if ((LA81_0==32))
			{
				alt81 = 1;
			}
			} finally { DebugExitDecision(81); }
			switch (alt81)
			{
			case 1:
				DebugEnterAlt(1);
				// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:483:24: pointer
				{
				DebugLocation(483, 24);
				PushFollow(Follow._pointer_in_synpred54_C977);
				pointer();
				PopFollow();
				if (state.failed) return;

				}
				break;

			}
			} finally { DebugExitSubRule(81); }


			}

		}
		finally
		{
			TraceOut("synpred54_C_fragment", 120);
			LeaveRule("synpred54_C_fragment", 120);
			LeaveRule_synpred54_C_fragment();
		}
	}
	// $ANTLR end synpred54_C
	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_synpred55_C_fragment() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_synpred55_C_fragment() {}

	// $ANTLR start synpred55_C
	public void synpred55_C_fragment()
	{
		EnterRule_synpred55_C_fragment();
		EnterRule("synpred55_C_fragment", 121);
		TraceIn("synpred55_C_fragment", 121);
		try
		{
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:485:4: ( '*' pointer )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:485:4: '*' pointer
			{
			DebugLocation(485, 4);
			Match(input,32,Follow._32_in_synpred55_C984); if (state.failed) return;
			DebugLocation(485, 8);
			PushFollow(Follow._pointer_in_synpred55_C986);
			pointer();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred55_C_fragment", 121);
			LeaveRule("synpred55_C_fragment", 121);
			LeaveRule_synpred55_C_fragment();
		}
	}
	// $ANTLR end synpred55_C
	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_synpred58_C_fragment() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_synpred58_C_fragment() {}

	// $ANTLR start synpred58_C
	public void synpred58_C_fragment()
	{
		EnterRule_synpred58_C_fragment();
		EnterRule("synpred58_C_fragment", 124);
		TraceIn("synpred58_C_fragment", 124);
		try
		{
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:511:28: ( declarator )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:511:28: declarator
			{
			DebugLocation(511, 28);
			PushFollow(Follow._declarator_in_synpred58_C1054);
			declarator();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred58_C_fragment", 124);
			LeaveRule("synpred58_C_fragment", 124);
			LeaveRule_synpred58_C_fragment();
		}
	}
	// $ANTLR end synpred58_C
	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_synpred59_C_fragment() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_synpred59_C_fragment() {}

	// $ANTLR start synpred59_C
	public void synpred59_C_fragment()
	{
		EnterRule_synpred59_C_fragment();
		EnterRule("synpred59_C_fragment", 125);
		TraceIn("synpred59_C_fragment", 125);
		try
		{
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:511:39: ( abstract_declarator )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:511:39: abstract_declarator
			{
			DebugLocation(511, 39);
			PushFollow(Follow._abstract_declarator_in_synpred59_C1056);
			abstract_declarator();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred59_C_fragment", 125);
			LeaveRule("synpred59_C_fragment", 125);
			LeaveRule_synpred59_C_fragment();
		}
	}
	// $ANTLR end synpred59_C
	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_synpred62_C_fragment() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_synpred62_C_fragment() {}

	// $ANTLR start synpred62_C
	public void synpred62_C_fragment()
	{
		EnterRule_synpred62_C_fragment();
		EnterRule("synpred62_C_fragment", 128);
		TraceIn("synpred62_C_fragment", 128);
		try
		{
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:535:12: ( direct_abstract_declarator )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:535:12: direct_abstract_declarator
			{
			DebugLocation(535, 12);
			PushFollow(Follow._direct_abstract_declarator_in_synpred62_C1115);
			direct_abstract_declarator();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred62_C_fragment", 128);
			LeaveRule("synpred62_C_fragment", 128);
			LeaveRule_synpred62_C_fragment();
		}
	}
	// $ANTLR end synpred62_C
	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_synpred65_C_fragment() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_synpred65_C_fragment() {}

	// $ANTLR start synpred65_C
	public void synpred65_C_fragment()
	{
		EnterRule_synpred65_C_fragment();
		EnterRule("synpred65_C_fragment", 131);
		TraceIn("synpred65_C_fragment", 131);
		try
		{
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:545:65: ( abstract_declarator_suffix )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:545:65: abstract_declarator_suffix
			{
			DebugLocation(545, 65);
			PushFollow(Follow._abstract_declarator_suffix_in_synpred65_C1151);
			abstract_declarator_suffix();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred65_C_fragment", 131);
			LeaveRule("synpred65_C_fragment", 131);
			LeaveRule_synpred65_C_fragment();
		}
	}
	// $ANTLR end synpred65_C
	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_synpred78_C_fragment() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_synpred78_C_fragment() {}

	// $ANTLR start synpred78_C
	public void synpred78_C_fragment()
	{
		EnterRule_synpred78_C_fragment();
		EnterRule("synpred78_C_fragment", 144);
		TraceIn("synpred78_C_fragment", 144);
		try
		{
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:613:4: ( '(' type_name ')' cast_expression )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:613:4: '(' type_name ')' cast_expression
			{
			DebugLocation(613, 4);
			Match(input,30,Follow._30_in_synpred78_C1357); if (state.failed) return;
			DebugLocation(613, 8);
			PushFollow(Follow._type_name_in_synpred78_C1359);
			type_name();
			PopFollow();
			if (state.failed) return;
			DebugLocation(613, 18);
			Match(input,31,Follow._31_in_synpred78_C1361); if (state.failed) return;
			DebugLocation(613, 22);
			PushFollow(Follow._cast_expression_in_synpred78_C1363);
			cast_expression();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred78_C_fragment", 144);
			LeaveRule("synpred78_C_fragment", 144);
			LeaveRule_synpred78_C_fragment();
		}
	}
	// $ANTLR end synpred78_C
	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_synpred83_C_fragment() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_synpred83_C_fragment() {}

	// $ANTLR start synpred83_C
	public void synpred83_C_fragment()
	{
		EnterRule_synpred83_C_fragment();
		EnterRule("synpred83_C_fragment", 149);
		TraceIn("synpred83_C_fragment", 149);
		try
		{
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:631:4: ( 'sizeof' unary_expression )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:631:4: 'sizeof' unary_expression
			{
			DebugLocation(631, 4);
			Match(input,85,Follow._85_in_synpred83_C1414); if (state.failed) return;
			DebugLocation(631, 13);
			PushFollow(Follow._unary_expression_in_synpred83_C1416);
			unary_expression();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred83_C_fragment", 149);
			LeaveRule("synpred83_C_fragment", 149);
			LeaveRule_synpred83_C_fragment();
		}
	}
	// $ANTLR end synpred83_C
	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_synpred88_C_fragment() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_synpred88_C_fragment() {}

	// $ANTLR start synpred88_C
	public void synpred88_C_fragment()
	{
		EnterRule_synpred88_C_fragment();
		EnterRule("synpred88_C_fragment", 154);
		TraceIn("synpred88_C_fragment", 154);
		try
		{
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:651:13: ( '*' IDENTIFIER )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:651:13: '*' IDENTIFIER
			{
			DebugLocation(651, 13);
			Match(input,32,Follow._32_in_synpred88_C1532); if (state.failed) return;
			DebugLocation(651, 17);
			Match(input,IDENTIFIER,Follow._IDENTIFIER_in_synpred88_C1534); if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred88_C_fragment", 154);
			LeaveRule("synpred88_C_fragment", 154);
			LeaveRule_synpred88_C_fragment();
		}
	}
	// $ANTLR end synpred88_C
	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_synpred105_C_fragment() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_synpred105_C_fragment() {}

	// $ANTLR start synpred105_C
	public void synpred105_C_fragment()
	{
		EnterRule_synpred105_C_fragment();
		EnterRule("synpred105_C_fragment", 171);
		TraceIn("synpred105_C_fragment", 171);
		try
		{
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:735:4: ( lvalue assignment_operator assignment_expression )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:735:4: lvalue assignment_operator assignment_expression
			{
			DebugLocation(735, 4);
			PushFollow(Follow._lvalue_in_synpred105_C1796);
			lvalue();
			PopFollow();
			if (state.failed) return;
			DebugLocation(735, 11);
			PushFollow(Follow._assignment_operator_in_synpred105_C1798);
			assignment_operator();
			PopFollow();
			if (state.failed) return;
			DebugLocation(735, 31);
			PushFollow(Follow._assignment_expression_in_synpred105_C1800);
			assignment_expression();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred105_C_fragment", 171);
			LeaveRule("synpred105_C_fragment", 171);
			LeaveRule_synpred105_C_fragment();
		}
	}
	// $ANTLR end synpred105_C
	[Conditional("ANTLR_TRACE")]
	protected virtual void EnterRule_synpred137_C_fragment() {}
	[Conditional("ANTLR_TRACE")]
	protected virtual void LeaveRule_synpred137_C_fragment() {}

	// $ANTLR start synpred137_C
	public void synpred137_C_fragment()
	{
		EnterRule_synpred137_C_fragment();
		EnterRule("synpred137_C_fragment", 203);
		TraceIn("synpred137_C_fragment", 203);
		try
		{
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:893:8: ( declaration )
			DebugEnterAlt(1);
			// D:\\wissen\\csharp\\GreedyStringTiling\\CTokenizer\\C.g:893:8: declaration
			{
			DebugLocation(893, 8);
			PushFollow(Follow._declaration_in_synpred137_C2233);
			declaration();
			PopFollow();
			if (state.failed) return;

			}

		}
		finally
		{
			TraceOut("synpred137_C_fragment", 203);
			LeaveRule("synpred137_C_fragment", 203);
			LeaveRule_synpred137_C_fragment();
		}
	}
	// $ANTLR end synpred137_C
	#endregion Rules

	#region Synpreds
	private bool EvaluatePredicate(System.Action fragment)
	{
		bool success = false;
		state.backtracking++;
		try { DebugBeginBacktrack(state.backtracking);
		int start = input.Mark();
		try
		{
			fragment();
		}
		catch ( RecognitionException re )
		{
			System.Console.Error.WriteLine("impossible: "+re);
		}
		success = !state.failed;
		input.Rewind(start);
		} finally { DebugEndBacktrack(state.backtracking, success); }
		state.backtracking--;
		state.failed=false;
		return success;
	}
	#endregion Synpreds


	#region DFA
	private DFA52 dfa52;
	private DFA64 dfa64;

	protected override void InitDFAs()
	{
		base.InitDFAs();
		dfa52 = new DFA52( this, SpecialStateTransition52 );
		dfa64 = new DFA64( this, SpecialStateTransition64 );
	}

	private class DFA52 : DFA
	{
		private const string DFA52_eotS =
			"\x6F\xFFFF";
		private const string DFA52_eofS =
			"\x1\xFFFF\x2\x10\x6C\xFFFF";
		private const string DFA52_minS =
			"\x1\x4\x2\x18\x5\x4\x7\x0\x15\xFFFF\x7\x0\x15\xFFFF\x7\x0\xC\xFFFF\x1C"+
			"\x0";
		private const string DFA52_maxS =
			"\x1\x64\x2\x63\x5\x64\x7\x0\x15\xFFFF\x7\x0\x15\xFFFF\x7\x0\xC\xFFFF"+
			"\x1C\x0";
		private const string DFA52_acceptS =
			"\xF\xFFFF\x1\x1\x1\x2\x5E\xFFFF";
		private const string DFA52_specialS =
			"\x8\xFFFF\x1\x0\x1\x1\x1\x2\x1\x3\x1\x4\x1\x5\x1\x6\x15\xFFFF\x1\x7\x1"+
			"\x8\x1\x9\x1\xA\x1\xB\x1\xC\x1\xD\x15\xFFFF\x1\xE\x1\xF\x1\x10\x1\x11"+
			"\x1\x12\x1\x13\x1\x14\xC\xFFFF\x1\x15\x1\x16\x1\x17\x1\x18\x1\x19\x1"+
			"\x1A\x1\x1B\x1\x1C\x1\x1D\x1\x1E\x1\x1F\x1\x20\x1\x21\x1\x22\x1\x23\x1"+
			"\x24\x1\x25\x1\x26\x1\x27\x1\x28\x1\x29\x1\x2A\x1\x2B\x1\x2C\x1\x2D\x1"+
			"\x2E\x1\x2F\x1\x30}>";
		private static readonly string[] DFA52_transitionS =
			{
				"\x1\x2\x1\xFFFF\x1\x2\x2\xFFFF\x1\x2\x1\xFFFF\x1\x2\x1\xFFFF\x1\x1\x4"+
				"\xFFFF\x1\x2\x1\xFFFF\x1\x2\x2\xFFFF\x1\x6\x4\xFFFF\x1\x6\x1\xFFFF\x1"+
				"\x3\x1\xFFFF\x1\x6\x1\xFFFF\x1\x6\x1\x4\x2\xFFFF\x1\x6\x1\x5\x2D\xFFFF"+
				"\x1\x7\xE\xFFFF\x1\x6",
				"\x2\x10\x1\xF\x2\x10\x1\xF\x1\x9\x1\x10\x1\xB\x1\xF\x1\x10\x1\xD\x1"+
				"\xF\x2\x10\x1\xE\x1\xF\x1\xC\x1\xA\x1\xFFFF\x1\x10\x1\xF\x4\x10\x1\xF"+
				"\x1\x10\x1\xF\x4\x10\x1\xF\x1\x10\x1\x8\x2\x10\x1\xF\x21\xFFFF\x1\x10"+
				"\x1\xF\x2\x10",
				"\x2\x10\x1\xF\x2\x10\x1\xF\x1\x25\x1\x10\x1\x27\x1\xF\x1\x10\x1\x29"+
				"\x1\xF\x2\x10\x1\x2A\x1\xF\x1\x28\x1\x26\x1\xFFFF\x1\x10\x1\xF\x4\x10"+
				"\x1\xF\x1\x10\x1\xF\x4\x10\x1\xF\x1\x10\x1\x24\x2\x10\x1\xF\x21\xFFFF"+
				"\x1\x10\x1\xF\x2\x10",
				"\x1\x41\x1\xFFFF\x1\x41\x2\xFFFF\x1\x41\x1\xFFFF\x1\x41\x1\xFFFF\x1"+
				"\x40\x4\xFFFF\x1\x41\x1\xFFFF\x1\x41\x2\xFFFF\x1\x45\x4\xFFFF\x1\x45"+
				"\x1\xFFFF\x1\x42\x1\xFFFF\x1\x45\x1\xFFFF\x1\x45\x1\x43\x2\xFFFF\x1"+
				"\x45\x1\x44\x1A\xFFFF\x2\x10\x3\xFFFF\x1\x10\x1\xFFFF\x1\x10\x1\xFFFF"+
				"\x1\x10\x3\xFFFF\x2\x10\x2\xFFFF\x2\x10\x1\x46\x1\xFFFF\x1\x10\x2\xFFFF"+
				"\x4\x10\x6\xFFFF\x1\x45",
				"\x1\x54\x1\xFFFF\x1\x54\x2\xFFFF\x1\x54\x1\xFFFF\x1\x54\x1\xFFFF\x1"+
				"\x53\x4\xFFFF\x1\x54\x1\xFFFF\x1\x54\x2\xFFFF\x1\x58\x4\xFFFF\x1\x58"+
				"\x1\xFFFF\x1\x55\x1\xFFFF\x1\x58\x1\xFFFF\x1\x58\x1\x56\x2\xFFFF\x1"+
				"\x58\x1\x57\x2D\xFFFF\x1\x59\xE\xFFFF\x1\x58",
				"\x1\x5B\x1\xFFFF\x1\x5B\x2\xFFFF\x1\x5B\x1\xFFFF\x1\x5B\x1\xFFFF\x1"+
				"\x5A\x4\xFFFF\x1\x5B\x1\xFFFF\x1\x5B\x2\xFFFF\x1\x5F\x4\xFFFF\x1\x5F"+
				"\x1\xFFFF\x1\x5C\x1\xFFFF\x1\x5F\x1\xFFFF\x1\x5F\x1\x5D\x2\xFFFF\x1"+
				"\x5F\x1\x5E\x2D\xFFFF\x1\x60\xE\xFFFF\x1\x5F",
				"\x1\x63\x1\xFFFF\x1\x63\x2\xFFFF\x1\x63\x1\xFFFF\x1\x63\x1\xFFFF\x1"+
				"\x62\x4\xFFFF\x1\x63\x1\xFFFF\x1\x63\x2\xFFFF\x1\x66\x4\xFFFF\x1\x66"+
				"\x1\xFFFF\x1\x61\x1\xFFFF\x1\x66\x1\xFFFF\x1\x66\x1\x64\x2\xFFFF\x1"+
				"\x66\x1\x65\x2D\xFFFF\x1\x67\xE\xFFFF\x1\x66",
				"\x1\x6A\x1\xFFFF\x1\x6A\x2\xFFFF\x1\x6A\x1\xFFFF\x1\x6A\x1\xFFFF\x1"+
				"\x69\x4\xFFFF\x1\x6A\x1\xFFFF\x1\x6A\x2\xFFFF\x1\x6D\x4\xFFFF\x1\x6D"+
				"\x1\xFFFF\x1\x68\x1\xFFFF\x1\x6D\x1\xFFFF\x1\x6D\x1\x6B\x2\xFFFF\x1"+
				"\x6D\x1\x6C\x2D\xFFFF\x1\x6E\xE\xFFFF\x1\x6D",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF",
				"\x1\xFFFF"
			};

		private static readonly short[] DFA52_eot = DFA.UnpackEncodedString(DFA52_eotS);
		private static readonly short[] DFA52_eof = DFA.UnpackEncodedString(DFA52_eofS);
		private static readonly char[] DFA52_min = DFA.UnpackEncodedStringToUnsignedChars(DFA52_minS);
		private static readonly char[] DFA52_max = DFA.UnpackEncodedStringToUnsignedChars(DFA52_maxS);
		private static readonly short[] DFA52_accept = DFA.UnpackEncodedString(DFA52_acceptS);
		private static readonly short[] DFA52_special = DFA.UnpackEncodedString(DFA52_specialS);
		private static readonly short[][] DFA52_transition;

		static DFA52()
		{
			int numStates = DFA52_transitionS.Length;
			DFA52_transition = new short[numStates][];
			for ( int i=0; i < numStates; i++ )
			{
				DFA52_transition[i] = DFA.UnpackEncodedString(DFA52_transitionS[i]);
			}
		}

		public DFA52( BaseRecognizer recognizer, SpecialStateTransitionHandler specialStateTransition )
			: base(specialStateTransition)
		{
			this.recognizer = recognizer;
			this.decisionNumber = 52;
			this.eot = DFA52_eot;
			this.eof = DFA52_eof;
			this.min = DFA52_min;
			this.max = DFA52_max;
			this.accept = DFA52_accept;
			this.special = DFA52_special;
			this.transition = DFA52_transition;
		}

		public override string Description { get { return "733:1: assignment_expression : ( lvalue assignment_operator assignment_expression | conditional_expression );"; } }

		public override void Error(NoViableAltException nvae)
		{
			DebugRecognitionException(nvae);
		}
	}

	private int SpecialStateTransition52(DFA dfa, int s, IIntStream _input)
	{
		ITokenStream input = (ITokenStream)_input;
		int _s = s;
		switch (s)
		{
			case 0:
				int LA52_8 = input.LA(1);


				int index52_8 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_8);
				if (s >= 0) return s;
				break;

			case 1:
				int LA52_9 = input.LA(1);


				int index52_9 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_9);
				if (s >= 0) return s;
				break;

			case 2:
				int LA52_10 = input.LA(1);


				int index52_10 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_10);
				if (s >= 0) return s;
				break;

			case 3:
				int LA52_11 = input.LA(1);


				int index52_11 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_11);
				if (s >= 0) return s;
				break;

			case 4:
				int LA52_12 = input.LA(1);


				int index52_12 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_12);
				if (s >= 0) return s;
				break;

			case 5:
				int LA52_13 = input.LA(1);


				int index52_13 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_13);
				if (s >= 0) return s;
				break;

			case 6:
				int LA52_14 = input.LA(1);


				int index52_14 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_14);
				if (s >= 0) return s;
				break;

			case 7:
				int LA52_36 = input.LA(1);


				int index52_36 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_36);
				if (s >= 0) return s;
				break;

			case 8:
				int LA52_37 = input.LA(1);


				int index52_37 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_37);
				if (s >= 0) return s;
				break;

			case 9:
				int LA52_38 = input.LA(1);


				int index52_38 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_38);
				if (s >= 0) return s;
				break;

			case 10:
				int LA52_39 = input.LA(1);


				int index52_39 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_39);
				if (s >= 0) return s;
				break;

			case 11:
				int LA52_40 = input.LA(1);


				int index52_40 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_40);
				if (s >= 0) return s;
				break;

			case 12:
				int LA52_41 = input.LA(1);


				int index52_41 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_41);
				if (s >= 0) return s;
				break;

			case 13:
				int LA52_42 = input.LA(1);


				int index52_42 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_42);
				if (s >= 0) return s;
				break;

			case 14:
				int LA52_64 = input.LA(1);


				int index52_64 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_64);
				if (s >= 0) return s;
				break;

			case 15:
				int LA52_65 = input.LA(1);


				int index52_65 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_65);
				if (s >= 0) return s;
				break;

			case 16:
				int LA52_66 = input.LA(1);


				int index52_66 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_66);
				if (s >= 0) return s;
				break;

			case 17:
				int LA52_67 = input.LA(1);


				int index52_67 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_67);
				if (s >= 0) return s;
				break;

			case 18:
				int LA52_68 = input.LA(1);


				int index52_68 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_68);
				if (s >= 0) return s;
				break;

			case 19:
				int LA52_69 = input.LA(1);


				int index52_69 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_69);
				if (s >= 0) return s;
				break;

			case 20:
				int LA52_70 = input.LA(1);


				int index52_70 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_70);
				if (s >= 0) return s;
				break;

			case 21:
				int LA52_83 = input.LA(1);


				int index52_83 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_83);
				if (s >= 0) return s;
				break;

			case 22:
				int LA52_84 = input.LA(1);


				int index52_84 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_84);
				if (s >= 0) return s;
				break;

			case 23:
				int LA52_85 = input.LA(1);


				int index52_85 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_85);
				if (s >= 0) return s;
				break;

			case 24:
				int LA52_86 = input.LA(1);


				int index52_86 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_86);
				if (s >= 0) return s;
				break;

			case 25:
				int LA52_87 = input.LA(1);


				int index52_87 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_87);
				if (s >= 0) return s;
				break;

			case 26:
				int LA52_88 = input.LA(1);


				int index52_88 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_88);
				if (s >= 0) return s;
				break;

			case 27:
				int LA52_89 = input.LA(1);


				int index52_89 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_89);
				if (s >= 0) return s;
				break;

			case 28:
				int LA52_90 = input.LA(1);


				int index52_90 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_90);
				if (s >= 0) return s;
				break;

			case 29:
				int LA52_91 = input.LA(1);


				int index52_91 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_91);
				if (s >= 0) return s;
				break;

			case 30:
				int LA52_92 = input.LA(1);


				int index52_92 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_92);
				if (s >= 0) return s;
				break;

			case 31:
				int LA52_93 = input.LA(1);


				int index52_93 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_93);
				if (s >= 0) return s;
				break;

			case 32:
				int LA52_94 = input.LA(1);


				int index52_94 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_94);
				if (s >= 0) return s;
				break;

			case 33:
				int LA52_95 = input.LA(1);


				int index52_95 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_95);
				if (s >= 0) return s;
				break;

			case 34:
				int LA52_96 = input.LA(1);


				int index52_96 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_96);
				if (s >= 0) return s;
				break;

			case 35:
				int LA52_97 = input.LA(1);


				int index52_97 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_97);
				if (s >= 0) return s;
				break;

			case 36:
				int LA52_98 = input.LA(1);


				int index52_98 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_98);
				if (s >= 0) return s;
				break;

			case 37:
				int LA52_99 = input.LA(1);


				int index52_99 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_99);
				if (s >= 0) return s;
				break;

			case 38:
				int LA52_100 = input.LA(1);


				int index52_100 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_100);
				if (s >= 0) return s;
				break;

			case 39:
				int LA52_101 = input.LA(1);


				int index52_101 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_101);
				if (s >= 0) return s;
				break;

			case 40:
				int LA52_102 = input.LA(1);


				int index52_102 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_102);
				if (s >= 0) return s;
				break;

			case 41:
				int LA52_103 = input.LA(1);


				int index52_103 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_103);
				if (s >= 0) return s;
				break;

			case 42:
				int LA52_104 = input.LA(1);


				int index52_104 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_104);
				if (s >= 0) return s;
				break;

			case 43:
				int LA52_105 = input.LA(1);


				int index52_105 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_105);
				if (s >= 0) return s;
				break;

			case 44:
				int LA52_106 = input.LA(1);


				int index52_106 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_106);
				if (s >= 0) return s;
				break;

			case 45:
				int LA52_107 = input.LA(1);


				int index52_107 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_107);
				if (s >= 0) return s;
				break;

			case 46:
				int LA52_108 = input.LA(1);


				int index52_108 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_108);
				if (s >= 0) return s;
				break;

			case 47:
				int LA52_109 = input.LA(1);


				int index52_109 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_109);
				if (s >= 0) return s;
				break;

			case 48:
				int LA52_110 = input.LA(1);


				int index52_110 = input.Index;
				input.Rewind();
				s = -1;
				if ((EvaluatePredicate(synpred105_C_fragment))) {s = 15;}

				else if ((true)) {s = 16;}


				input.Seek(index52_110);
				if (s >= 0) return s;
				break;
		}
		if (state.backtracking > 0) {state.failed=true; return -1;}
		NoViableAltException nvae = new NoViableAltException(dfa.Description, 52, _s, input);
		dfa.Error(nvae);
		throw nvae;
	}
	private class DFA64 : DFA
	{
		private const string DFA64_eotS =
			"\x4A\xFFFF";
		private const string DFA64_eofS =
			"\x4A\xFFFF";
		private const string DFA64_minS =
			"\x1\x4\x1\xD\x24\xFFFF\x1\x0\x1\xFFFF\x1\x0\x12\xFFFF\x1\x0\xE\xFFFF";
		private const string DFA64_maxS =
			"\x1\x64\x1\x62\x24\xFFFF\x1\x0\x1\xFFFF\x1\x0\x12\xFFFF\x1\x0\xE\xFFFF";
		private const string DFA64_acceptS =
			"\x2\xFFFF\x1\x2\x13\xFFFF\x1\x1\x33\xFFFF";
		private const string DFA64_specialS =
			"\x26\xFFFF\x1\x0\x1\xFFFF\x1\x1\x12\xFFFF\x1\x2\xE\xFFFF}>";
		private static readonly string[] DFA64_transitionS =
			{
				"\x1\x2\x1\xFFFF\x1\x2\x2\xFFFF\x1\x2\x1\xFFFF\x1\x2\x1\xFFFF\x1\x1\x4"+
				"\xFFFF\x1\x2\x1\xFFFF\x1\x2\x2\xFFFF\x1\x2\x4\xFFFF\x1\x2\x1\xFFFF\x1"+
				"\x2\x1\xFFFF\x1\x2\x1\xFFFF\x2\x2\x2\xFFFF\x2\x2\x7\xFFFF\x1\x2\xF\xFFFF"+
				"\x1\x16\x2\x2\x2\x16\x3\x2\x1\x16\x1\xFFFF\x3\x16\x3\x2\x3\x16\x1\x2"+
				"\x2\x16\x1\x2\x2\x16\x1\x2\x5\x16\x2\x2\x3\xFFFF\x2\x2",
				"\x1\x16\xA\xFFFF\x6\x2\x1\x26\x1\xFFFF\x1\x28\xA\x2\x1\xFFFF\x3\x2"+
				"\x1\x3B\xC\x2\x1\xFFFF\x2\x2\x1\x16\x2\xFFFF\x2\x16\x3\xFFFF\x1\x16"+
				"\x1\xFFFF\x3\x16\x3\xFFFF\x3\x16\x1\xFFFF\x2\x16\x1\xFFFF\x2\x16\x2"+
				"\xFFFF\x4\x16\x2\xFFFF\x3\x2",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"\x1\xFFFF",
				"",
				"\x1\xFFFF",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"\x1\xFFFF",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				"",
				""
			};

		private static readonly short[] DFA64_eot = DFA.UnpackEncodedString(DFA64_eotS);
		private static readonly short[] DFA64_eof = DFA.UnpackEncodedString(DFA64_eofS);
		private static readonly char[] DFA64_min = DFA.UnpackEncodedStringToUnsignedChars(DFA64_minS);
		private static readonly char[] DFA64_max = DFA.UnpackEncodedStringToUnsignedChars(DFA64_maxS);
		private static readonly short[] DFA64_accept = DFA.UnpackEncodedString(DFA64_acceptS);
		private static readonly short[] DFA64_special = DFA.UnpackEncodedString(DFA64_specialS);
		private static readonly short[][] DFA64_transition;

		static DFA64()
		{
			int numStates = DFA64_transitionS.Length;
			DFA64_transition = new short[numStates][];
			for ( int i=0; i < numStates; i++ )
			{
				DFA64_transition[i] = DFA.UnpackEncodedString(DFA64_transitionS[i]);
			}
		}

		public DFA64( BaseRecognizer recognizer, SpecialStateTransitionHandler specialStateTransition )
			: base(specialStateTransition)
		{
			this.recognizer = recognizer;
			this.decisionNumber = 64;
			this.eot = DFA64_eot;
			this.eof = DFA64_eof;
			this.min = DFA64_min;
			this.max = DFA64_max;
			this.accept = DFA64_accept;
			this.special = DFA64_special;
			this.transition = DFA64_transition;
		}

		public override string Description { get { return "()* loopback of 893:8: ( declaration )*"; } }

		public override void Error(NoViableAltException nvae)
		{
			DebugRecognitionException(nvae);
		}
	}

	private int SpecialStateTransition64(DFA dfa, int s, IIntStream _input)
	{
		ITokenStream input = (ITokenStream)_input;
		int _s = s;
		switch (s)
		{
			case 0:
				int LA64_38 = input.LA(1);


				int index64_38 = input.Index;
				input.Rewind();
				s = -1;
				if (((((isTypeName(input.LT(1).Text))&&(isTypeName(input.LT(1).Text)))&&EvaluatePredicate(synpred137_C_fragment)))) {s = 22;}

				else if ((true)) {s = 2;}


				input.Seek(index64_38);
				if (s >= 0) return s;
				break;

			case 1:
				int LA64_40 = input.LA(1);


				int index64_40 = input.Index;
				input.Rewind();
				s = -1;
				if (((((isTypeName(input.LT(1).Text))&&(isTypeName(input.LT(1).Text)))&&EvaluatePredicate(synpred137_C_fragment)))) {s = 22;}

				else if ((true)) {s = 2;}


				input.Seek(index64_40);
				if (s >= 0) return s;
				break;

			case 2:
				int LA64_59 = input.LA(1);


				int index64_59 = input.Index;
				input.Rewind();
				s = -1;
				if (((((isTypeName(input.LT(1).Text))&&(isTypeName(input.LT(1).Text)))&&EvaluatePredicate(synpred137_C_fragment)))) {s = 22;}

				else if ((true)) {s = 2;}


				input.Seek(index64_59);
				if (s >= 0) return s;
				break;
		}
		if (state.backtracking > 0) {state.failed=true; return -1;}
		NoViableAltException nvae = new NoViableAltException(dfa.Description, 64, _s, input);
		dfa.Error(nvae);
		throw nvae;
	}

	#endregion DFA

	#region Follow sets
	private static class Follow
	{
		public static readonly BitSet _external_declaration_in_translation_unit103 = new BitSet(new ulong[]{0x8000000140002002UL,0x3EDB8E8CUL});
		public static readonly BitSet _function_definition_in_external_declaration145 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _declaration_in_external_declaration151 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _declaration_specifiers_in_function_definition179 = new BitSet(new ulong[]{0x140002000UL});
		public static readonly BitSet _declarator_in_function_definition182 = new BitSet(new ulong[]{0x8000000000002000UL,0xBEDB8E8CUL});
		public static readonly BitSet _declaration_in_function_definition189 = new BitSet(new ulong[]{0x8000000000002000UL,0xBEDB8E8CUL});
		public static readonly BitSet _compound_statement_in_function_definition192 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _compound_statement_in_function_definition200 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _89_in_declaration235 = new BitSet(new ulong[]{0x8000000140002000UL,0x3CDB8E8CUL});
		public static readonly BitSet _declaration_specifiers_in_declaration237 = new BitSet(new ulong[]{0x140002000UL});
		public static readonly BitSet _init_declarator_list_in_declaration246 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _47_in_declaration248 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _declaration_specifiers_in_declaration255 = new BitSet(new ulong[]{0x800140002000UL});
		public static readonly BitSet _init_declarator_list_in_declaration257 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _47_in_declaration260 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _storage_class_specifier_in_declaration_specifiers281 = new BitSet(new ulong[]{0x8000000000002002UL,0x3CDB8E8CUL});
		public static readonly BitSet _type_specifier_in_declaration_specifiers290 = new BitSet(new ulong[]{0x8000000000002002UL,0x3CDB8E8CUL});
		public static readonly BitSet _type_qualifier_in_declaration_specifiers305 = new BitSet(new ulong[]{0x8000000000002002UL,0x3CDB8E8CUL});
		public static readonly BitSet _init_declarator_in_init_declarator_list332 = new BitSet(new ulong[]{0x2000000002UL});
		public static readonly BitSet _37_in_init_declarator_list335 = new BitSet(new ulong[]{0x140002000UL});
		public static readonly BitSet _init_declarator_in_init_declarator_list337 = new BitSet(new ulong[]{0x2000000002UL});
		public static readonly BitSet _declarator_in_init_declarator354 = new BitSet(new ulong[]{0x10000000000002UL});
		public static readonly BitSet _52_in_init_declarator357 = new BitSet(new ulong[]{0xCD50942A50UL,0x1080200000UL});
		public static readonly BitSet _initializer_in_init_declarator359 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _92_in_type_specifier409 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _66_in_type_specifier415 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _83_in_type_specifier421 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _79_in_type_specifier427 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _80_in_type_specifier433 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _75_in_type_specifier439 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _71_in_type_specifier445 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _84_in_type_specifier451 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _91_in_type_specifier457 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _struct_or_union_specifier_in_type_specifier463 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _enum_specifier_in_type_specifier469 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_id_in_type_specifier475 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _IDENTIFIER_in_type_id497 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _struct_or_union_in_struct_or_union_specifier538 = new BitSet(new ulong[]{0x2000UL,0x80000000UL});
		public static readonly BitSet _IDENTIFIER_in_struct_or_union_specifier540 = new BitSet(new ulong[]{0x0UL,0x80000000UL});
		public static readonly BitSet _95_in_struct_or_union_specifier543 = new BitSet(new ulong[]{0x2000UL,0x3C998A8CUL});
		public static readonly BitSet _struct_declaration_list_in_struct_or_union_specifier545 = new BitSet(new ulong[]{0x0UL,0x800000000UL});
		public static readonly BitSet _99_in_struct_or_union_specifier547 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _struct_or_union_in_struct_or_union_specifier553 = new BitSet(new ulong[]{0x2000UL});
		public static readonly BitSet _IDENTIFIER_in_struct_or_union_specifier555 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _struct_declaration_in_struct_declaration_list591 = new BitSet(new ulong[]{0x2002UL,0x3C998A8CUL});
		public static readonly BitSet _specifier_qualifier_list_in_struct_declaration607 = new BitSet(new ulong[]{0x400140002000UL});
		public static readonly BitSet _struct_declarator_list_in_struct_declaration609 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _47_in_struct_declaration611 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_qualifier_in_specifier_qualifier_list628 = new BitSet(new ulong[]{0x2002UL,0x3C998A8CUL});
		public static readonly BitSet _type_specifier_in_specifier_qualifier_list632 = new BitSet(new ulong[]{0x2002UL,0x3C998A8CUL});
		public static readonly BitSet _struct_declarator_in_struct_declarator_list650 = new BitSet(new ulong[]{0x2000000002UL});
		public static readonly BitSet _37_in_struct_declarator_list653 = new BitSet(new ulong[]{0x400140002000UL});
		public static readonly BitSet _struct_declarator_in_struct_declarator_list655 = new BitSet(new ulong[]{0x2000000002UL});
		public static readonly BitSet _declarator_in_struct_declarator672 = new BitSet(new ulong[]{0x400000000002UL});
		public static readonly BitSet _46_in_struct_declarator675 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _constant_expression_in_struct_declarator677 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _46_in_struct_declarator685 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _constant_expression_in_struct_declarator687 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _73_in_enum_specifier710 = new BitSet(new ulong[]{0x0UL,0x80000000UL});
		public static readonly BitSet _95_in_enum_specifier712 = new BitSet(new ulong[]{0x2000UL});
		public static readonly BitSet _enumerator_list_in_enum_specifier714 = new BitSet(new ulong[]{0x0UL,0x800000000UL});
		public static readonly BitSet _99_in_enum_specifier716 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _73_in_enum_specifier722 = new BitSet(new ulong[]{0x2000UL});
		public static readonly BitSet _IDENTIFIER_in_enum_specifier724 = new BitSet(new ulong[]{0x0UL,0x80000000UL});
		public static readonly BitSet _95_in_enum_specifier726 = new BitSet(new ulong[]{0x2000UL});
		public static readonly BitSet _enumerator_list_in_enum_specifier728 = new BitSet(new ulong[]{0x0UL,0x800000000UL});
		public static readonly BitSet _99_in_enum_specifier730 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _73_in_enum_specifier736 = new BitSet(new ulong[]{0x2000UL});
		public static readonly BitSet _IDENTIFIER_in_enum_specifier738 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _enumerator_in_enumerator_list753 = new BitSet(new ulong[]{0x2000000002UL});
		public static readonly BitSet _37_in_enumerator_list756 = new BitSet(new ulong[]{0x2000UL});
		public static readonly BitSet _enumerator_in_enumerator_list758 = new BitSet(new ulong[]{0x2000000002UL});
		public static readonly BitSet _IDENTIFIER_in_enumerator775 = new BitSet(new ulong[]{0x10000000000002UL});
		public static readonly BitSet _52_in_enumerator778 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _constant_expression_in_enumerator780 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _pointer_in_declarator818 = new BitSet(new ulong[]{0x40002000UL});
		public static readonly BitSet _direct_declarator_in_declarator821 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _pointer_in_declarator827 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _IDENTIFIER_in_direct_declarator846 = new BitSet(new ulong[]{0x800000040000002UL});
		public static readonly BitSet _30_in_direct_declarator859 = new BitSet(new ulong[]{0x140002000UL});
		public static readonly BitSet _declarator_in_direct_declarator861 = new BitSet(new ulong[]{0x80000000UL});
		public static readonly BitSet _31_in_direct_declarator863 = new BitSet(new ulong[]{0x800000040000002UL});
		public static readonly BitSet _declarator_suffix_in_direct_declarator879 = new BitSet(new ulong[]{0x800000040000002UL});
		public static readonly BitSet _59_in_declarator_suffix897 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _constant_expression_in_declarator_suffix899 = new BitSet(new ulong[]{0x1000000000000000UL});
		public static readonly BitSet _60_in_declarator_suffix901 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _59_in_declarator_suffix912 = new BitSet(new ulong[]{0x1000000000000000UL});
		public static readonly BitSet _60_in_declarator_suffix914 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _30_in_declarator_suffix925 = new BitSet(new ulong[]{0x8000000000002000UL,0x3CDB8E8CUL});
		public static readonly BitSet _parameter_type_list_in_declarator_suffix927 = new BitSet(new ulong[]{0x80000000UL});
		public static readonly BitSet _31_in_declarator_suffix929 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _30_in_declarator_suffix940 = new BitSet(new ulong[]{0x2000UL});
		public static readonly BitSet _identifier_list_in_declarator_suffix942 = new BitSet(new ulong[]{0x80000000UL});
		public static readonly BitSet _31_in_declarator_suffix944 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _30_in_declarator_suffix955 = new BitSet(new ulong[]{0x80000000UL});
		public static readonly BitSet _31_in_declarator_suffix957 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _32_in_pointer972 = new BitSet(new ulong[]{0x0UL,0x20000008UL});
		public static readonly BitSet _type_qualifier_in_pointer974 = new BitSet(new ulong[]{0x100000002UL,0x20000008UL});
		public static readonly BitSet _pointer_in_pointer977 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _32_in_pointer984 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _pointer_in_pointer986 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _32_in_pointer992 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _parameter_list_in_parameter_type_list1007 = new BitSet(new ulong[]{0x2000000002UL});
		public static readonly BitSet _37_in_parameter_type_list1010 = new BitSet(new ulong[]{0x80000000000UL});
		public static readonly BitSet _43_in_parameter_type_list1012 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _parameter_declaration_in_parameter_list1029 = new BitSet(new ulong[]{0x2000000002UL});
		public static readonly BitSet _37_in_parameter_list1032 = new BitSet(new ulong[]{0x8000000000002000UL,0x3CDB8E8CUL});
		public static readonly BitSet _parameter_declaration_in_parameter_list1034 = new BitSet(new ulong[]{0x2000000002UL});
		public static readonly BitSet _declaration_specifiers_in_parameter_declaration1051 = new BitSet(new ulong[]{0x800000140002002UL});
		public static readonly BitSet _declarator_in_parameter_declaration1054 = new BitSet(new ulong[]{0x800000140002002UL});
		public static readonly BitSet _abstract_declarator_in_parameter_declaration1056 = new BitSet(new ulong[]{0x800000140002002UL});
		public static readonly BitSet _IDENTIFIER_in_identifier_list1073 = new BitSet(new ulong[]{0x2000000002UL});
		public static readonly BitSet _37_in_identifier_list1076 = new BitSet(new ulong[]{0x2000UL});
		public static readonly BitSet _IDENTIFIER_in_identifier_list1078 = new BitSet(new ulong[]{0x2000000002UL});
		public static readonly BitSet _specifier_qualifier_list_in_type_name1095 = new BitSet(new ulong[]{0x800000140000002UL});
		public static readonly BitSet _abstract_declarator_in_type_name1097 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _pointer_in_abstract_declarator1113 = new BitSet(new ulong[]{0x800000040000002UL});
		public static readonly BitSet _direct_abstract_declarator_in_abstract_declarator1115 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _direct_abstract_declarator_in_abstract_declarator1122 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _30_in_direct_abstract_declarator1139 = new BitSet(new ulong[]{0x800000140000000UL});
		public static readonly BitSet _abstract_declarator_in_direct_abstract_declarator1141 = new BitSet(new ulong[]{0x80000000UL});
		public static readonly BitSet _31_in_direct_abstract_declarator1143 = new BitSet(new ulong[]{0x800000040000002UL});
		public static readonly BitSet _abstract_declarator_suffix_in_direct_abstract_declarator1147 = new BitSet(new ulong[]{0x800000040000002UL});
		public static readonly BitSet _abstract_declarator_suffix_in_direct_abstract_declarator1151 = new BitSet(new ulong[]{0x800000040000002UL});
		public static readonly BitSet _59_in_abstract_declarator_suffix1167 = new BitSet(new ulong[]{0x1000000000000000UL});
		public static readonly BitSet _60_in_abstract_declarator_suffix1169 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _59_in_abstract_declarator_suffix1175 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _constant_expression_in_abstract_declarator_suffix1177 = new BitSet(new ulong[]{0x1000000000000000UL});
		public static readonly BitSet _60_in_abstract_declarator_suffix1179 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _30_in_abstract_declarator_suffix1185 = new BitSet(new ulong[]{0x80000000UL});
		public static readonly BitSet _31_in_abstract_declarator_suffix1187 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _30_in_abstract_declarator_suffix1193 = new BitSet(new ulong[]{0x8000000000002000UL,0x3CDB8E8CUL});
		public static readonly BitSet _parameter_type_list_in_abstract_declarator_suffix1195 = new BitSet(new ulong[]{0x80000000UL});
		public static readonly BitSet _31_in_abstract_declarator_suffix1197 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _assignment_expression_in_initializer1213 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _95_in_initializer1219 = new BitSet(new ulong[]{0xCD50942A50UL,0x1080200000UL});
		public static readonly BitSet _initializer_list_in_initializer1221 = new BitSet(new ulong[]{0x2000000000UL,0x800000000UL});
		public static readonly BitSet _37_in_initializer1223 = new BitSet(new ulong[]{0x0UL,0x800000000UL});
		public static readonly BitSet _99_in_initializer1226 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _initializer_in_initializer_list1241 = new BitSet(new ulong[]{0x2000000002UL});
		public static readonly BitSet _37_in_initializer_list1244 = new BitSet(new ulong[]{0xCD50942A50UL,0x1080200000UL});
		public static readonly BitSet _initializer_in_initializer_list1246 = new BitSet(new ulong[]{0x2000000002UL});
		public static readonly BitSet _assignment_expression_in_argument_expression_list1269 = new BitSet(new ulong[]{0x2000000002UL});
		public static readonly BitSet _37_in_argument_expression_list1272 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _assignment_expression_in_argument_expression_list1274 = new BitSet(new ulong[]{0x2000000002UL});
		public static readonly BitSet _multiplicative_expression_in_additive_expression1292 = new BitSet(new ulong[]{0x4400000002UL});
		public static readonly BitSet _34_in_additive_expression1296 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _multiplicative_expression_in_additive_expression1298 = new BitSet(new ulong[]{0x4400000002UL});
		public static readonly BitSet _38_in_additive_expression1302 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _multiplicative_expression_in_additive_expression1304 = new BitSet(new ulong[]{0x4400000002UL});
		public static readonly BitSet _cast_expression_in_multiplicative_expression1322 = new BitSet(new ulong[]{0x100102000002UL});
		public static readonly BitSet _32_in_multiplicative_expression1326 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _cast_expression_in_multiplicative_expression1328 = new BitSet(new ulong[]{0x100102000002UL});
		public static readonly BitSet _44_in_multiplicative_expression1332 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _cast_expression_in_multiplicative_expression1334 = new BitSet(new ulong[]{0x100102000002UL});
		public static readonly BitSet _25_in_multiplicative_expression1338 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _cast_expression_in_multiplicative_expression1340 = new BitSet(new ulong[]{0x100102000002UL});
		public static readonly BitSet _30_in_cast_expression1357 = new BitSet(new ulong[]{0x2000UL,0x3C998A8CUL});
		public static readonly BitSet _type_name_in_cast_expression1359 = new BitSet(new ulong[]{0x80000000UL});
		public static readonly BitSet _31_in_cast_expression1361 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _cast_expression_in_cast_expression1363 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _unary_expression_in_cast_expression1369 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _postfix_expression_in_unary_expression1384 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _35_in_unary_expression1390 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _unary_expression_in_unary_expression1392 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _39_in_unary_expression1398 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _unary_expression_in_unary_expression1400 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _unary_operator_in_unary_expression1406 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _cast_expression_in_unary_expression1408 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _85_in_unary_expression1414 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _unary_expression_in_unary_expression1416 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _85_in_unary_expression1422 = new BitSet(new ulong[]{0x40000000UL});
		public static readonly BitSet _30_in_unary_expression1424 = new BitSet(new ulong[]{0x2000UL,0x3C998A8CUL});
		public static readonly BitSet _type_name_in_unary_expression1426 = new BitSet(new ulong[]{0x80000000UL});
		public static readonly BitSet _31_in_unary_expression1428 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _primary_expression_in_postfix_expression1445 = new BitSet(new ulong[]{0x800068940000002UL});
		public static readonly BitSet _59_in_postfix_expression1460 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _expression_in_postfix_expression1462 = new BitSet(new ulong[]{0x1000000000000000UL});
		public static readonly BitSet _60_in_postfix_expression1464 = new BitSet(new ulong[]{0x800068940000002UL});
		public static readonly BitSet _30_in_postfix_expression1479 = new BitSet(new ulong[]{0x80000000UL});
		public static readonly BitSet _31_in_postfix_expression1481 = new BitSet(new ulong[]{0x800068940000002UL});
		public static readonly BitSet _30_in_postfix_expression1496 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _argument_expression_list_in_postfix_expression1498 = new BitSet(new ulong[]{0x80000000UL});
		public static readonly BitSet _31_in_postfix_expression1500 = new BitSet(new ulong[]{0x800068940000002UL});
		public static readonly BitSet _42_in_postfix_expression1515 = new BitSet(new ulong[]{0x2000UL});
		public static readonly BitSet _IDENTIFIER_in_postfix_expression1517 = new BitSet(new ulong[]{0x800068940000002UL});
		public static readonly BitSet _32_in_postfix_expression1532 = new BitSet(new ulong[]{0x2000UL});
		public static readonly BitSet _IDENTIFIER_in_postfix_expression1534 = new BitSet(new ulong[]{0x800068940000002UL});
		public static readonly BitSet _41_in_postfix_expression1549 = new BitSet(new ulong[]{0x2000UL});
		public static readonly BitSet _IDENTIFIER_in_postfix_expression1551 = new BitSet(new ulong[]{0x800068940000002UL});
		public static readonly BitSet _35_in_postfix_expression1566 = new BitSet(new ulong[]{0x800068940000002UL});
		public static readonly BitSet _39_in_postfix_expression1581 = new BitSet(new ulong[]{0x800068940000002UL});
		public static readonly BitSet _IDENTIFIER_in_primary_expression1653 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _constant_in_primary_expression1659 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _30_in_primary_expression1665 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _expression_in_primary_expression1667 = new BitSet(new ulong[]{0x80000000UL});
		public static readonly BitSet _31_in_primary_expression1669 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _assignment_expression_in_expression1759 = new BitSet(new ulong[]{0x2000000002UL});
		public static readonly BitSet _37_in_expression1762 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _assignment_expression_in_expression1764 = new BitSet(new ulong[]{0x2000000002UL});
		public static readonly BitSet _conditional_expression_in_constant_expression1781 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _lvalue_in_assignment_expression1796 = new BitSet(new ulong[]{0x4214211224000000UL,0x200000000UL});
		public static readonly BitSet _assignment_operator_in_assignment_expression1798 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _assignment_expression_in_assignment_expression1800 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _conditional_expression_in_assignment_expression1806 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _unary_expression_in_lvalue1822 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _logical_or_expression_in_conditional_expression1912 = new BitSet(new ulong[]{0x400000000000002UL});
		public static readonly BitSet _58_in_conditional_expression1915 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _expression_in_conditional_expression1917 = new BitSet(new ulong[]{0x400000000000UL});
		public static readonly BitSet _46_in_conditional_expression1919 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _conditional_expression_in_conditional_expression1921 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _logical_and_expression_in_logical_or_expression1938 = new BitSet(new ulong[]{0x2UL,0x400000000UL});
		public static readonly BitSet _98_in_logical_or_expression1941 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _logical_and_expression_in_logical_or_expression1943 = new BitSet(new ulong[]{0x2UL,0x400000000UL});
		public static readonly BitSet _inclusive_or_expression_in_logical_and_expression1960 = new BitSet(new ulong[]{0x8000002UL});
		public static readonly BitSet _27_in_logical_and_expression1963 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _inclusive_or_expression_in_logical_and_expression1965 = new BitSet(new ulong[]{0x8000002UL});
		public static readonly BitSet _exclusive_or_expression_in_inclusive_or_expression1982 = new BitSet(new ulong[]{0x2UL,0x100000000UL});
		public static readonly BitSet _96_in_inclusive_or_expression1985 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _exclusive_or_expression_in_inclusive_or_expression1987 = new BitSet(new ulong[]{0x2UL,0x100000000UL});
		public static readonly BitSet _and_expression_in_exclusive_or_expression2004 = new BitSet(new ulong[]{0x2000000000000002UL});
		public static readonly BitSet _61_in_exclusive_or_expression2007 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _and_expression_in_exclusive_or_expression2009 = new BitSet(new ulong[]{0x2000000000000002UL});
		public static readonly BitSet _equality_expression_in_and_expression2026 = new BitSet(new ulong[]{0x10000002UL});
		public static readonly BitSet _28_in_and_expression2029 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _equality_expression_in_and_expression2031 = new BitSet(new ulong[]{0x10000002UL});
		public static readonly BitSet _relational_expression_in_equality_expression2046 = new BitSet(new ulong[]{0x20000001000002UL});
		public static readonly BitSet _set_in_equality_expression2049 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _relational_expression_in_equality_expression2055 = new BitSet(new ulong[]{0x20000001000002UL});
		public static readonly BitSet _shift_expression_in_relational_expression2072 = new BitSet(new ulong[]{0xC9000000000002UL});
		public static readonly BitSet _set_in_relational_expression2075 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _shift_expression_in_relational_expression2085 = new BitSet(new ulong[]{0xC9000000000002UL});
		public static readonly BitSet _additive_expression_in_shift_expression2102 = new BitSet(new ulong[]{0x102000000000002UL});
		public static readonly BitSet _set_in_shift_expression2105 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _additive_expression_in_shift_expression2111 = new BitSet(new ulong[]{0x102000000000002UL});
		public static readonly BitSet _labeled_statement_in_statement2132 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _compound_statement_in_statement2138 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_statement_in_statement2144 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _selection_statement_in_statement2150 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _iteration_statement_in_statement2156 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _jump_statement_in_statement2162 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _IDENTIFIER_in_labeled_statement2177 = new BitSet(new ulong[]{0x400000000000UL});
		public static readonly BitSet _46_in_labeled_statement2179 = new BitSet(new ulong[]{0x80CD50942A50UL,0x10C1247073UL});
		public static readonly BitSet _statement_in_labeled_statement2181 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _65_in_labeled_statement2187 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _constant_expression_in_labeled_statement2189 = new BitSet(new ulong[]{0x400000000000UL});
		public static readonly BitSet _46_in_labeled_statement2191 = new BitSet(new ulong[]{0x80CD50942A50UL,0x10C1247073UL});
		public static readonly BitSet _statement_in_labeled_statement2193 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _69_in_labeled_statement2199 = new BitSet(new ulong[]{0x400000000000UL});
		public static readonly BitSet _46_in_labeled_statement2201 = new BitSet(new ulong[]{0x80CD50942A50UL,0x10C1247073UL});
		public static readonly BitSet _statement_in_labeled_statement2203 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _95_in_compound_statement2231 = new BitSet(new ulong[]{0x800080CD50942A50UL,0x18FFFFFEFFUL});
		public static readonly BitSet _declaration_in_compound_statement2233 = new BitSet(new ulong[]{0x800080CD50942A50UL,0x18FFFFFEFFUL});
		public static readonly BitSet _statement_list_in_compound_statement2236 = new BitSet(new ulong[]{0x0UL,0x800000000UL});
		public static readonly BitSet _99_in_compound_statement2239 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _statement_in_statement_list2254 = new BitSet(new ulong[]{0x80CD50942A52UL,0x10C1247073UL});
		public static readonly BitSet _47_in_expression_statement2270 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _expression_in_expression_statement2276 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _47_in_expression_statement2278 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _78_in_selection_statement2293 = new BitSet(new ulong[]{0x40000000UL});
		public static readonly BitSet _30_in_selection_statement2295 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _expression_in_selection_statement2297 = new BitSet(new ulong[]{0x80000000UL});
		public static readonly BitSet _31_in_selection_statement2299 = new BitSet(new ulong[]{0x80CD50942A50UL,0x10C1247073UL});
		public static readonly BitSet _statement_in_selection_statement2301 = new BitSet(new ulong[]{0x2UL,0x100UL});
		public static readonly BitSet _72_in_selection_statement2316 = new BitSet(new ulong[]{0x80CD50942A50UL,0x10C1247073UL});
		public static readonly BitSet _statement_in_selection_statement2318 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _88_in_selection_statement2326 = new BitSet(new ulong[]{0x40000000UL});
		public static readonly BitSet _30_in_selection_statement2328 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _expression_in_selection_statement2330 = new BitSet(new ulong[]{0x80000000UL});
		public static readonly BitSet _31_in_selection_statement2332 = new BitSet(new ulong[]{0x80CD50942A50UL,0x10C1247073UL});
		public static readonly BitSet _statement_in_selection_statement2334 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _94_in_iteration_statement2349 = new BitSet(new ulong[]{0x40000000UL});
		public static readonly BitSet _30_in_iteration_statement2351 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _expression_in_iteration_statement2353 = new BitSet(new ulong[]{0x80000000UL});
		public static readonly BitSet _31_in_iteration_statement2355 = new BitSet(new ulong[]{0x80CD50942A50UL,0x10C1247073UL});
		public static readonly BitSet _statement_in_iteration_statement2357 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _70_in_iteration_statement2363 = new BitSet(new ulong[]{0x80CD50942A50UL,0x10C1247073UL});
		public static readonly BitSet _statement_in_iteration_statement2365 = new BitSet(new ulong[]{0x0UL,0x40000000UL});
		public static readonly BitSet _94_in_iteration_statement2367 = new BitSet(new ulong[]{0x40000000UL});
		public static readonly BitSet _30_in_iteration_statement2369 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _expression_in_iteration_statement2371 = new BitSet(new ulong[]{0x80000000UL});
		public static readonly BitSet _31_in_iteration_statement2373 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _47_in_iteration_statement2375 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _76_in_iteration_statement2381 = new BitSet(new ulong[]{0x40000000UL});
		public static readonly BitSet _30_in_iteration_statement2383 = new BitSet(new ulong[]{0x80CD50942A50UL,0x1000200000UL});
		public static readonly BitSet _expression_statement_in_iteration_statement2385 = new BitSet(new ulong[]{0x80CD50942A50UL,0x1000200000UL});
		public static readonly BitSet _expression_statement_in_iteration_statement2387 = new BitSet(new ulong[]{0xCDD0942A50UL,0x1000200000UL});
		public static readonly BitSet _expression_in_iteration_statement2389 = new BitSet(new ulong[]{0x80000000UL});
		public static readonly BitSet _31_in_iteration_statement2392 = new BitSet(new ulong[]{0x80CD50942A50UL,0x10C1247073UL});
		public static readonly BitSet _statement_in_iteration_statement2394 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _77_in_jump_statement2409 = new BitSet(new ulong[]{0x2000UL});
		public static readonly BitSet _IDENTIFIER_in_jump_statement2411 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _47_in_jump_statement2413 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _68_in_jump_statement2419 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _47_in_jump_statement2421 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _64_in_jump_statement2427 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _47_in_jump_statement2429 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _82_in_jump_statement2435 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _47_in_jump_statement2437 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _82_in_jump_statement2443 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _expression_in_jump_statement2445 = new BitSet(new ulong[]{0x800000000000UL});
		public static readonly BitSet _47_in_jump_statement2447 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _declaration_specifiers_in_synpred2_C132 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _declaration_specifiers_in_synpred4_C132 = new BitSet(new ulong[]{0x140002000UL});
		public static readonly BitSet _declarator_in_synpred4_C135 = new BitSet(new ulong[]{0x8000000000002000UL,0xBEDB8E8CUL});
		public static readonly BitSet _declaration_in_synpred4_C137 = new BitSet(new ulong[]{0x8000000000002000UL,0xBEDB8E8CUL});
		public static readonly BitSet _95_in_synpred4_C140 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _declaration_specifiers_in_synpred5_C179 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _declaration_specifiers_in_synpred8_C237 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_specifier_in_synpred12_C290 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_specifier_in_synpred35_C632 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _pointer_in_synpred45_C818 = new BitSet(new ulong[]{0x40002000UL});
		public static readonly BitSet _direct_declarator_in_synpred45_C821 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _declarator_suffix_in_synpred47_C879 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _30_in_synpred50_C925 = new BitSet(new ulong[]{0x8000000000002000UL,0x3CDB8E8CUL});
		public static readonly BitSet _parameter_type_list_in_synpred50_C927 = new BitSet(new ulong[]{0x80000000UL});
		public static readonly BitSet _31_in_synpred50_C929 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _30_in_synpred51_C940 = new BitSet(new ulong[]{0x2000UL});
		public static readonly BitSet _identifier_list_in_synpred51_C942 = new BitSet(new ulong[]{0x80000000UL});
		public static readonly BitSet _31_in_synpred51_C944 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _type_qualifier_in_synpred52_C974 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _pointer_in_synpred53_C977 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _32_in_synpred54_C972 = new BitSet(new ulong[]{0x0UL,0x20000008UL});
		public static readonly BitSet _type_qualifier_in_synpred54_C974 = new BitSet(new ulong[]{0x100000002UL,0x20000008UL});
		public static readonly BitSet _pointer_in_synpred54_C977 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _32_in_synpred55_C984 = new BitSet(new ulong[]{0x100000000UL});
		public static readonly BitSet _pointer_in_synpred55_C986 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _declarator_in_synpred58_C1054 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _abstract_declarator_in_synpred59_C1056 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _direct_abstract_declarator_in_synpred62_C1115 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _abstract_declarator_suffix_in_synpred65_C1151 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _30_in_synpred78_C1357 = new BitSet(new ulong[]{0x2000UL,0x3C998A8CUL});
		public static readonly BitSet _type_name_in_synpred78_C1359 = new BitSet(new ulong[]{0x80000000UL});
		public static readonly BitSet _31_in_synpred78_C1361 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _cast_expression_in_synpred78_C1363 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _85_in_synpred83_C1414 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _unary_expression_in_synpred83_C1416 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _32_in_synpred88_C1532 = new BitSet(new ulong[]{0x2000UL});
		public static readonly BitSet _IDENTIFIER_in_synpred88_C1534 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _lvalue_in_synpred105_C1796 = new BitSet(new ulong[]{0x4214211224000000UL,0x200000000UL});
		public static readonly BitSet _assignment_operator_in_synpred105_C1798 = new BitSet(new ulong[]{0xCD50942A50UL,0x1000200000UL});
		public static readonly BitSet _assignment_expression_in_synpred105_C1800 = new BitSet(new ulong[]{0x2UL});
		public static readonly BitSet _declaration_in_synpred137_C2233 = new BitSet(new ulong[]{0x2UL});
	}
	#endregion Follow sets
}
